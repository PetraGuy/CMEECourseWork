Mydf$Prey.mass[3001]
for (i in 1:length){
if (Mydf$Prey.mass.unit[i] == "mg") {
Mydf$Prey.mass[i] = Mydf$Prey.mass[i] * 1e-3
}
}
for (i in 1:l){
if (Mydf$Prey.mass.unit[i] == "mg") {
Mydf$Prey.mass[i] = Mydf$Prey.mass[i] * 1e-3
}
}
masses_not_g =  subset(Mydf, Prey.mass.unit != "g")
masses_not_g
masses_not_g$Prey.mass
groups = as.factor(Mydf$Type.of.feeding.interaction)
Prey.mass.means = tapply(log(Mydf$Prey.mass), groups, mean)
Predator.mass.means = tapply(log(Mydf$Predator.mass), groups, mean)
PreyPred.mass.means = tapply(log(Mydf$Prey.mass/Mydf$Predator.mass), groups, mean)
Prey.mass.median = tapply(log(Mydf$Prey.mass), groups, median)
Predator.mass.median = tapply(log(Mydf$Prey.mass), groups, median)
PreyPred.mass.median = tapply(log(Mydf$Predator.mass/Mydf$Prey.mass), groups, mean)
stats = rbind(Prey.mass.means, Predator.mass.means, PreyPred.mass.means, Prey.mass.median, Predator.mass.median, PreyPred.mass.median)
stats
rm(list = ls())
Mydf = read.csv("../Data/EcolArchives-E089-51-D1.csv")
library(lattice)
# plot graphs and output to pdfs
pdf("../Results/Prey_Lattice.pdf", # Open blank pdf page
11.7, 8.3)
densityplot(~log(Prey.mass)| Type.of.feeding.interaction, data = Mydf)
dev.off()
pdf("../Results/Predator_Lattice.pdf", # Open blank pdf page
11.7, 8.3)
densityplot(~log(Predator.mass)| Type.of.feeding.interaction, data = Mydf)
dev.off()
pdf("../Results/SizeRatio_Lattice.pdf", # Open blank pdf page
11.7, 8.3)
densityplot(~log(Prey.mass/Predator.mass)| Type.of.feeding.interaction, data = Mydf)
dev.off()
# are all masses in same units?
masses_not_g =  subset(Mydf, Prey.mass.unit != "g")
length(unique(masses_not_g$Type.of.feeding.interaction)) # = 3, so there are three groups for mass of mg, that makes above calcs wrong.
#if prey mass unit = mg, x prey mass by 1E-3
l = length(Mydf$Prey.mass)
for (i in 1:l){
if (Mydf$Prey.mass.unit[i] == "mg") {
Mydf$Prey.mass[i] = Mydf$Prey.mass[i] * 1e-3
}
}
#tapplys to get means and medians across feeding interaction
groups = as.factor(Mydf$Type.of.feeding.interaction)
Prey.mass.means = tapply(log(Mydf$Prey.mass), groups, mean)
Predator.mass.means = tapply(log(Mydf$Predator.mass), groups, mean)
PreyPred.mass.means = tapply(log(Mydf$Prey.mass/Mydf$Predator.mass), groups, mean)
Prey.mass.median = tapply(log(Mydf$Prey.mass), groups, median)
Predator.mass.median = tapply(log(Mydf$Prey.mass), groups, median)
PreyPred.mass.median = tapply(log(Mydf$Predator.mass/Mydf$Prey.mass), groups, mean)
stats = rbind(Prey.mass.means, Predator.mass.means, PreyPred.mass.means, Prey.mass.median, Predator.mass.median, PreyPred.mass.median)
write.csv(stats, "../Results/PP_Results.csv")
groups = as.factor(Mydf$Type.of.feeding.interaction)
Prey.mass.means = tapply(log(Mydf$Prey.mass), groups, mean)
Predator.mass.means = tapply(log(Mydf$Predator.mass), groups, mean)
PreyPred.mass.means = tapply(log(Mydf$Predator.mass/Mydf$Prey.mass), groups, mean)
Prey.mass.median = tapply(log(Mydf$Prey.mass), groups, median)
Predator.mass.median = tapply(log(Mydf$Prey.mass), groups, median)
PreyPred.mass.median = tapply(log(Mydf$Predator.mass/Mydf$Prey.mass), groups, mean)
stats = rbind(Prey.mass.means, Predator.mass.means, PreyPred.mass.means, Prey.mass.median, Predator.mass.median, PreyPred.mass.median)
write.csv(stats, "../Results/PP_Results.csv")
stats
groups = as.factor(Mydf$Type.of.feeding.interaction)
Prey.mass.means = tapply(log(Mydf$Prey.mass), groups, mean)
Predator.mass.means = tapply(log(Mydf$Predator.mass), groups, mean)
PredPrey.mass.means = tapply(log(Mydf$Predator.mass/Mydf$Prey.mass), groups, mean)
Prey.mass.median = tapply(log(Mydf$Prey.mass), groups, median)
Predator.mass.median = tapply(log(Mydf$Prey.mass), groups, median)
PredPrey.mass.median = tapply(log(Mydf$Predator.mass/Mydf$Prey.mass), groups, mean)
stats = rbind(Prey.mass.means, Predator.mass.means, PreyPred.mass.means, Prey.mass.median, Predator.mass.median, PreyPred.mass.median)
write.csv(stats, "../Results/PP_Results.csv")
stats
groups = as.factor(Mydf$Type.of.feeding.interaction)
Prey.mass.means = tapply(log(Mydf$Prey.mass), groups, mean)
Predator.mass.means = tapply(log(Mydf$Predator.mass), groups, mean)
PredPrey.mass.means = tapply(log(Mydf$Predator.mass/Mydf$Prey.mass), groups, mean)
Prey.mass.median = tapply(log(Mydf$Prey.mass), groups, median)
Predator.mass.median = tapply(log(Mydf$Prey.mass), groups, median)
PredPrey.mass.median = tapply(log(Mydf$Predator.mass/Mydf$Prey.mass), groups, mean)
stats = rbind(Prey.mass.means, Predator.mass.means, PreyPred.mass.means, Prey.mass.median, Predator.mass.median, PreyPred.mass.median)
write.csv(stats, "../Results/PP_Results.csv")
groups = as.factor(Mydf$Type.of.feeding.interaction)
Prey.mass.means = tapply(log(Mydf$Prey.mass), groups, mean)
Predator.mass.means = tapply(log(Mydf$Predator.mass), groups, mean)
PredPrey.mass.means = tapply(log(Mydf$Predator.mass/Mydf$Prey.mass), groups, mean)
Prey.mass.median = tapply(log(Mydf$Prey.mass), groups, median)
Predator.mass.median = tapply(log(Mydf$Prey.mass), groups, median)
PredPrey.mass.median = tapply(log(Mydf$Predator.mass/Mydf$Prey.mass), groups, mean)
stats = rbind(Prey.mass.means, Predator.mass.means, PredPrey.mass.means, Prey.mass.median, Predator.mass.median, PredPrey.mass.median)
write.csv(stats, "../Results/PP_Results.csv")
stats
Mydf$Prey.mass
sum(Mydf$Prey.mass)
sum(Mydf$Prey.mass)/length(Mydf$Prey.mass)
log(sum(Mydf$Prey.mass)/length(Mydf$Prey.mass))
insects = subset(Mydf, Type.of.feeding.interation == "insectivorous")
insects = subset(Mydf, Mydf$Type.of.feeding.interation == "insectivorous")
sum(insects$Prey.mass)
insects
View(insects)
View(insects)
Mydf$Type.of.feeding.interaction
insectivors =  subset(Mydf, Mydf$Type.of.feeding.interaction == "insectivorous")
sum(insectivors$Prey.mass)
sum(insectivors$Prey.mass)/length(insectivors$Prey.mass)
log(sum(insectivors$Prey.mass)/length(insectivors$Prey.mass))
write.table_with_header <- function(x, file, header, ...){
cat(header, '\n',  file = file)
write.table(x, file, append = T, ...)
}
header = "All values are natural log"
write.table_with_header(stats,"../Results/PP_Results.csv",header,sep=',')
write.table_with_header <- function(x, file, header, ...){
cat(header, '\n',  file = file)
write.table(x, file, append = T, ...)
}
write.table_with_header(stats,"../Results/PP_Results.csv",header,sep=',')
rm(list = ls())
Mydf = as.data.frame(read.csv("../Data/EcolArchives-E089-51-D1.csv"))
ggplot(Mydf, aes(x = log(Prey.mass), y = log(Predator.mass) ) )+
geom_point(aes(col = Predator.lifestage), shape = 3)+
stat_smooth(method = "lm", aes(col = Predator.lifestage), fullrange = TRUE) +
facet_grid(Type.of.feeding.interaction ~ .)
?print
pdf("../Results/PP_Regress.pdf",  11.7, 8.3)
plot = ggplot(Mydf, aes(x = log(Prey.mass), y = log(Predator.mass) ) )+
geom_point(aes(col = Predator.lifestage), shape = 3)+
stat_smooth(method = "lm", aes(col = Predator.lifestage), fullrange = TRUE) +
facet_grid(Type.of.feeding.interaction ~ .)
print(plot)
dev.off()
Mydf = cbind(Mydf$Predator.lifestage, Mydf$Type.of.feeding.interaction, Mydf$Predator.mass, Mydf$Prey.mass)
colnames(Mydf) = c("Predator.lifestage", "Type.of.feeding.interaction", "Predator.mass", "Prey.mass")
means = Mydf %>% group_by(Type.of.feeding.interaction) %>% group_by(Predator.lifestage, add = TRUE) %>%   summarize(m = mean(Predator.mass)) #%>%  assign("bar", .)
Models = Mydf %>% group_by(Type.of.feeding.interaction) %>% group_by(Predator.lifestage, add = TRUE) %>%  do(fits = lm(log(Predator.mass) ~ log(Prey.mass), data = . ))
library(ggplot2)
library(dplyr)
install.packages(Rcpp)
"Rcpp"
installed.packages("Rcpp")
install.packages("dplyr")
library(dplyr)
require(Rcpp)
installed.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
library(dplyr)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
groups = as.factor(Mydf$Type.of.feeding.interaction)
Prey.mass.means = tapply(log(Mydf$Prey.mass), groups, mean)
groups = as.factor(Mydf$Type.of.feeding.interaction)
Mydf = read.csv("../Data/EcolArchives-E089-51-D1.csv")
groups = as.factor(Mydf$Type.of.feeding.interaction)
Prey.mass.means = tapply(log(Mydf$Prey.mass), groups, mean)
rm(list = ls())
Mydf = as.data.frame(read.csv("../Data/EcolArchives-E089-51-D1.csv"))
library(dplyr)
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
library(dplyr)
install.packages("dplyr")
Mydf = cbind(Mydf$Predator.lifestage, Mydf$Type.of.feeding.interaction, Mydf$Predator.mass, Mydf$Prey.mass)
colnames(Mydf) = c("Predator.lifestage", "Type.of.feeding.interaction", "Predator.mass", "Prey.mass")
means = Mydf %>% group_by(Type.of.feeding.interaction) %>% group_by(Predator.lifestage, add = TRUE) %>%   summarize(m = mean(Predator.mass)) #%>%  assign("bar", .)
Models = Mydf %>% group_by(Type.of.feeding.interaction) %>% group_by(Predator.lifestage, add = TRUE) %>%  do(fits = lm(log(Predator.mass) ~ log(Prey.mass), data = . ))
Mydf = cbind(Mydf$Predator.lifestage, Mydf$Type.of.feeding.interaction, Mydf$Predator.mass, Mydf$Prey.mass)
colnames(Mydf) = c("Predator.lifestage", "Type.of.feeding.interaction", "Predator.mass", "Prey.mass")
Mydf = cbind(Mydf$Predator.lifestage, Mydf$Type.of.feeding.interaction, Mydf$Predator.mass, Mydf$Prey.mass)
Mydf = as.data.frame(read.csv("../Data/EcolArchives-E089-51-D1.csv"))
Mydf$Predator.lifestage
Mysmallerdf = cbind(Mydf$Predator.lifestage, Mydf$Type.of.feeding.interaction, Mydf$Predator.mass, Mydf$Prey.mass)
View(Mysmallerdf)
View(Mysmallerdf)
colnames(Mysmallerdf) = c("Predator.lifestage", "Type.of.feeding.interaction", "Predator.mass", "Prey.mass")
View(Mysmallerdf)
View(Mysmallerdf)
View(Mydf)
View(Mydf)
Mysmallerdf = cbind(Mydf$Predator.lifestage, Mydf$Type.of.feeding.interaction, Mydf$Predator.mass, Mydf$Prey.mass)
View(Mysmallerdf)
View(Mysmallerdf)
Mydf$Predator.lifestage
Mysmallerdf = cbind(as.factor(Mydf$Predator.lifestage), as.factor(Mydf$Type.of.feeding.interaction), Mydf$Predator.mass, Mydf$Prey.mass)
View(Mysmallerdf)
View(Mysmallerdf)
Mysmallerdf = cbind.data.frame(Mydf$Predator.lifestage, Mydf$Type.of.feeding.interaction, Mydf$Predator.mass, Mydf$Prey.mass)
View(Mysmallerdf)
View(Mysmallerdf)
colnames(Mysmallerdf) = c("Predator.lifestage", "Type.of.feeding.interaction", "Predator.mass", "Prey.mass")
l = length(Mydf$Prey.mass)
for (i in 1:l){
if (Mydf$Prey.mass.unit[i] == "mg") {
Mydf$Prey.mass[i] = Mydf$Prey.mass[i] * 1e-3
}
}
for (i in 1:l){
if (Mydf$Prey.mass.unit[i] == "mg") {
Mydf$Prey.mass[i] = Mydf$Prey.mass[i] * 1e-3
}
}
Mysmallerdf = cbind.data.frame(Mydf$Predator.lifestage, Mydf$Type.of.feeding.interaction, Mydf$Predator.mass, Mydf$Prey.mass)
colnames(Mysmallerdf) = c("Predator.lifestage", "Type.of.feeding.interaction", "Predator.mass", "Prey.mass")
Mysmallerdf[3]
FeedGroup = as.factor(Mysmallerdf$Type.of.feeding.interaction)
LifeStageGroup = as.factor(Mysmallerdf$Predator.lifestage)
models = function(dataframe){
tapply(dataframe, LifeStageGroup, lm(log10(dataframe[3])~log10(dataframe[4])))
}
linearmodels = tapply(Mysmallerdf, FeedGroup, models )
FeedingType =  tapply(Mysmallerdf, FeedGroup, subset)
FeedingType =  tapply(Mysmallerdf, FeedGroup, subset(Mysmallerdf$Type.of.feeding.interaction == FeedGroup))
?unlist
FeedingType =  tapply(Mysmallerdf, FeedGroup, subset)
FeedingType =  tapply(Mysmallerdf, FeedGroup, subset)
subset.data.frame(Mysmallerdf, FeedGroup)
FeedingType =  tapply(Mysmallerdf, FeedGroup, subset)
length(FeedGroup)
length(Mysmallerdf)
typeof(Mysmallerdf)
Mysmallerdf[1]
Mysmallerdf[2]
Mysmallerdf[3]
FeedingType =  tapply(as.data.frame(Mysmallerdf), FeedGroup, subset)
typeof(Mydf)
FeedingType =  tapply(Mydf, FeedGroup, subset)
FeedGroup
typeof(FeedGroup)
FeedGroup[1]
LifeStageGroup
FeedGroup = as.numeric(Mysmallerdf$Type.of.feeding.interaction)
LifeStageGroup = as.numeric(Mysmallerdf$Predator.lifestage)
keyFeedGroup = as.factor(Mysmallerdf$Type.of.feeding.interaction)
str(keyFeedGroup)
head(str(keyFeedGroup))
keyFeedGroup
labels(keyFeedGroup)
library(sqldf)
install.packages("sqldf")
library(sqldf)
as.character(FeedGroup)[1]
keyFeedGroup =  as.factor(Mysmallerdf$Type.of.feeding.interaction)
as.character(keyFeedGroup[1])
as.character(FeedGroup)
length(FeedGroup)
length(keyFeedGroup)
count(unique(FeedGroup))
unique(FeedGroup)
unique(LifeStageGroup)
max(unique(LifeStageGroup))
lengthFeedGroup = max(unique(FeedGroup))
lengthLifeStageGroup = max(unique(LifeStageGroup))
?lm
LinearModels = list()
for (i in 1:lengthFeedGroup) {
LinearModels[i] = lm(Mysmallerdf$Predator.mass ~ Mysmallerdf$Prey.mass, Mysmallerdf$Predator.lifestage)
}
View(LinearModels)
LinearModels[1]
LinearModels[2]
LinearModels = list()
FeedModel =  data.frame()
for (j in 1:lengthFeedGroup)){
for (i in 1:length(FeedGroup)){
model = lm(Mysmallerdf$Predator.mass ~ Mysmallerdf$Prey.mass)
FeedModel =  rbind.data.frame(FeedModel, model)
}
LinearModels =  cbind.data.frame(LinearModels, FeedModel)
}
for (j in 1:length(FeedGroup)){
for (i in 1:length(FeedGroup)){
model = lm(Mysmallerdf$Predator.mass ~ Mysmallerdf$Prey.mass)
FeedModel =  rbind.data.frame(FeedModel, model)
}
LinearModels =  cbind.data.frame(LinearModels, FeedModel)
}
LinearModels = list()
FeedModel =  list()
for (j in 1:length(FeedGroup)){
for (i in 1:length(FeedGroup)){
model = lm(Mysmallerdf$Predator.mass ~ Mysmallerdf$Prey.mass)
FeedModel =  rbind.data.frame(FeedModel, model)
}
LinearModels =  cbind.data.frame(LinearModels, FeedModel)
}
keyFeedGroup[1]
keyFeedGroup[2]
keyFeedGroup[[1]]
keyFeedGroup[1][1]
keyFeedGroup[[1]][1]
typrof(keyFeedGroup)
typeof(keyFeedGroup)
Mysmallerdf[1]
Mysmallerdf[1,4]
Mysmallerdf[5,1]
Mysmallerdf = cbind(Mydf$Predator.lifestage, Mydf$Type.of.feeding.interaction, Mydf$Predator.mass, Mydf$Prey.mass)
colnames(Mysmallerdf) = c("Predator.lifestage", "Type.of.feeding.interaction", "Predator.mass", "Prey.mass")
View(Mydf)
View(Mydf)
View(Mysmallerdf)
Feed = list()
for (i in 1:lengthFeed){
Feed[i] = subset(Mysmallerdf,Type.of.feeding.interaction == i)
}
Feed = list()
for (i in 1:lengthFeedGroup){
Feed[i] = subset(Mysmallerdf,Type.of.feeding.interaction == i)
}
for (i in 1:lengthFeedGroup){
Feed[i] = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == i)
}
Feed =  tapply(Mysmallerdf, FeedGroup, subset
)
length(Mysmallerdf)
length(FeedGroup)
length(Mydf$Prey.mass)
length(groups)
groups = as.factor(Mydf$Type.of.feeding.interaction)
length(groups)
length(keyFeedGroup)
Feed =  tapply(Mysmallerdf, keyFeedGroup, subset)
View(Mysmallerdf)
length(Mysmallerdf)
dims(Mysmallerdf)
typeof(Mysmallerdf)
as.data.frame(Mysmallerdf)
typeof
typeof(Mysmallerdf)
length(My)
length(Mysmallerdf)
length(as.data.frame(Mysmallerdf))
nrow(as.data.frame(Mysmallerdf))
Mysmallerdf = as.data.frame(Mysmallerdf)
Feed =  tapply(Mysmallerdf, keyFeedGroup, subset)
length(Mysmallerdf)
Feed =  cbind(tapply(Mysmallerdf$Predator.mass, keyFeedGroup, subset), tapply(Mysmallerdf$Prey.mass, keyFeedGroup, subset))
tapply(Mysmallerdf$Predator.mass, keyFeedGroup, subset)
Feed1 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == 1)
Feed1
Feed = list()
for (i in 1:lengthFeedGroup){
Feed[i] = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == "i")
}
Feed[2]
View(Feed)
View(Feed)
Feed = list()
for (i in 1:lengthFeedGroup){
Feed[i] = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == i)
}
Feed[2]
Feed[5
]
View(Feed)
View(Feed)
View(Feed)
Feed1 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == 1)
View(Feed1)
Feed = list()
for (i in 1:lengthFeedGroup){
Feed[i] = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == "i")
}
View(Feed1)
?split
x = split(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction)
x
View(x)
x[1]
x[2]
TypeOfFeedingInteration =  split(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction
TypeOfFeedingInteration[2]
TypeOfFeedingInteration =  split(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction)
TypeOfFeedingInteration[2]
lapply(TypeOfFeedingInteration, lm(Predator.mass~Prey.mass, Predator.lifestage))
TypeOfFeedingInteration[1]
lapply(TypeOfFeedingInteration, tapply(lm(Predator.mass~Prey.mass, Predator.lifestage)))
lapply(TypeOfFeedingInteration, tapply(lm(Predator.mass~Prey.mass, Predator.lifestage)))
?lapply
lapply(TypeOfFeedingInteration, tapply(lm(Predator.mass~Prey.mass, Predator.lifestage)))
tapply(TypeOfFeedingInteraction[1], lm(Predator.mass~Prey.mass, Predator.lifestage))
TypeOfFeedingInteration[1]
colnames(TypeOfFeedingInteration)
T
TypeOfFeedingInteration[[1]]
TypeOfFeedingInteration[[1]][1]
tapply(TypeOfFeedingInteraction[1], lm(Predator.mass~Prey.mass, TypeOfFeedingInteration[[1]][1])
)
lapply(TypeOfFeedingInteraction[1], lm(Predator.mass~Prey.mass, TypeOfFeedingInteration[[1]][1])
)
str(TypeOfFeedingInteration)
TypeOfFeedingInteration[1][1]
TypeOfFeedingInteration[1][[1]]
TypeOfFeedingInteration[[1]][[1]]
Model1 = lm(TypeOfFeedingInteration[[1]][[3]] ~ TypeOfFeedingInteration[[1]][[4]], TypeOfFeedingInteration[[1]][[1]])
Model1 = lm(TypeOfFeedingInteration[[1]][[3]] ~ TypeOfFeedingInteration[[1]][[4]])
Model1
Feed1 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction = 1)
Feed1 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction ==1)
Feed1 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == 1)
Feed2 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction ==2)
Feed3 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == 3)
Feed4 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == 4)
Feed5 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == 5)
View(Feed2)
View(Feed2)
unique(Feed1$Predator.lifestage)
count(unique(Feed1$Predator.lifestage))
count(unique(Feed2$Predator.lifestage))
count(unique(Feed3$Predator.lifestage))
count(unique(Feed4$Predator.lifestage))
count(unique(Feed5$Predator.lifestage))
ModelsFeed2 = lm(Feed2$Predator.mass~Feed2$Prey.mass, Feed2$Predator.lifestage)
Feed2Life1 = subset(Feed2, Feed2$Predator.lifestage ==1)
Feed2Life2 = subset(Feed2, Feed2$Predator.lifestage == 2)
Feed2Life4 = subset(Feed2, Feed2$Predator.lifestage == 4)
Feed2Life5 = subset(Feed2, Feed2$Predator.lifestage == 5)
Feed2Life6 = subset(Feed2, Feed2$Predator.lifestage == 6)
ModelFeed2Life1 = lm(Feed2Life1$Predator.mass~Feed2Life1$Prey.mass)
View(ModelFeed2Life1)
ModelFeed2Life1 = lm(Feed2Life1$Predator.mass~Feed2Life1$Prey.mass)
ModelFeed2Life2 = lm(Feed2Life2$Predator.mass~Feed2Life1$Prey.mass)
ModelFeed2Life4 = lm(Feed2Life1$Predator.mass~Feed2Life1$Prey.mass)
ModelFeed2Life5 = lm(Feed2Life1$Predator.mass~Feed2Life1$Prey.mass)
ModelFeed2Life6 = lm(Feed2Life1$Predator.mass~Feed2Life1$Prey.mass)
ModelFeed3Life1 = lm(Feed3Life1$Predator.mass~Feed3Life1$Prey.mass)
ModelFeed3Life2 = lm(Feed3Life2$Predator.mass~Feed3Life1$Prey.mass)
ModelFeed3Life3 = lm(Feed3Life1$Predator.mass~Feed3Life1$Prey.mass)
ModelFeed3Life4 = lm(Feed3Life1$Predator.mass~Feed3Life1$Prey.mass)
ModelFeed3Life6 = lm(Feed3Life1$Predator.mass~Feed3Life1$Prey.mass)
Feed3Life1 = subset(Feed3, Feed3$Predator.lifestage ==1)
Feed3Life2 = subset(Feed3, Feed3$Predator.lifestage == 2)
Feed3Life3 = subset(Feed3, Feed3$Predator.lifestage == 3)
Feed3Life4 = subset(Feed3, Feed3$Predator.lifestage == 4)
Feed3Life6 = subset(Feed3, Feed3$Predator.lifestage == 6)
ModelFeed3Life1 = lm(Feed3Life1$Predator.mass~Feed3Life1$Prey.mass)
ModelFeed3Life2 = lm(Feed3Life2$Predator.mass~Feed3Life1$Prey.mass)
ModelFeed3Life3 = lm(Feed3Life1$Predator.mass~Feed3Life1$Prey.mass)
ModelFeed3Life4 = lm(Feed3Life1$Predator.mass~Feed3Life1$Prey.mass)
ModelFeed3Life6 = lm(Feed3Life1$Predator.mass~Feed3Life1$Prey.mass)
Feed4Life1 = subset(Feed4, Feed4$Predator.lifestage ==1)
Feed4Life2 = subset(Feed4, Feed4$Predator.lifestage == 2)
Feed4Life3 = subset(Feed4, Feed4$Predator.lifestage == 3)
Feed4Life4 = subset(Feed4, Feed4$Predator.lifestage == 4)
Feed4Life5 = subset(Feed4, Feed4$Predator.lifestage == 5)
Feed4Life6 = subset(Feed4, Feed4$Predator.lifestage == 6)
Feed4Life1 = subset(Feed4, Feed4$Predator.lifestage ==1)
Feed4Life2 = subset(Feed4, Feed4$Predator.lifestage == 2)
Feed4Life3 = subset(Feed4, Feed4$Predator.lifestage == 3)
Feed4Life4 = subset(Feed4, Feed4$Predator.lifestage == 4)
Feed4Life5 = subset(Feed4, Feed4$Predator.lifestage == 5)
Feed4Life6 = subset(Feed4, Feed4$Predator.lifestage == 6)
ModelFeed4Life1 = lm(Feed4Life1$Predator.mass~Feed4Life1$Prey.mass)
ModelFeed4Life2 = lm(Feed4Life2$Predator.mass~Feed4Life1$Prey.mass)
ModelFeed4Life3 = lm(Feed4Life3$Predator.mass~Feed4Life1$Prey.mass)
ModelFeed4Life4 = lm(Feed4Life4$Predator.mass~Feed4Life1$Prey.mass)
ModelFeed4Life5 = lm(Feed4Life5$Predator.mass~Feed4Life1$Prey.mass)
ModelFeed4Life6 = lm(Feed4Life6$Predator.mass~Feed4Life1$Prey.mass)
Feed1 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == 1)
Feed2 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction ==2)
Feed3 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == 3)
Feed4 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == 4)
Feed5 = subset(Mysmallerdf, Mysmallerdf$Type.of.feeding.interaction == 5)
Feed2Life1 = subset(Feed2, Feed2$Predator.lifestage ==1)
Feed2Life2 = subset(Feed2, Feed2$Predator.lifestage == 2)
Feed2Life4 = subset(Feed2, Feed2$Predator.lifestage == 4)
Feed2Life5 = subset(Feed2, Feed2$Predator.lifestage == 5)
Feed2Life6 = subset(Feed2, Feed2$Predator.lifestage == 6)
ModelFeed2Life1 = lm(Feed2Life1$Predator.mass~Feed2Life1$Prey.mass)
ModelFeed2Life2 = lm(Feed2Life2$Predator.mass~Feed2Life2$Prey.mass)
ModelFeed2Life4 = lm(Feed2Life4$Predator.mass~Feed2Life4$Prey.mass)
ModelFeed2Life5 = lm(Feed2Life5$Predator.mass~Feed2Life5$Prey.mass)
ModelFeed2Life6 = lm(Feed2Life6$Predator.mass~Feed2Life6$Prey.mass)
Feed3Life1 = subset(Feed3, Feed3$Predator.lifestage ==1)
Feed3Life2 = subset(Feed3, Feed3$Predator.lifestage == 2)
Feed3Life3 = subset(Feed3, Feed3$Predator.lifestage == 3)
Feed3Life4 = subset(Feed3, Feed3$Predator.lifestage == 4)
Feed3Life6 = subset(Feed3, Feed3$Predator.lifestage == 6)
ModelFeed3Life1 = lm(Feed3Life1$Predator.mass~Feed3Life1$Prey.mass)
ModelFeed3Life2 = lm(Feed3Life2$Predator.mass~Feed3Life2$Prey.mass)
ModelFeed3Life3 = lm(Feed3Life3$Predator.mass~Feed3Life3$Prey.mass)
ModelFeed3Life4 = lm(Feed3Life4$Predator.mass~Feed3Life4$Prey.mass)
ModelFeed3Life6 = lm(Feed3Life6$Predator.mass~Feed3Life6$Prey.mass)
Feed4Life1 = subset(Feed4, Feed4$Predator.lifestage ==1)
Feed4Life2 = subset(Feed4, Feed4$Predator.lifestage == 2)
Feed4Life3 = subset(Feed4, Feed4$Predator.lifestage == 3)
Feed4Life4 = subset(Feed4, Feed4$Predator.lifestage == 4)
Feed4Life5 = subset(Feed4, Feed4$Predator.lifestage == 5)
Feed4Life6 = subset(Feed4, Feed4$Predator.lifestage == 6)
ModelFeed4Life1 = lm(Feed4Life1$Predator.mass~Feed4Life1$Prey.mass)
ModelFeed4Life2 = lm(Feed4Life2$Predator.mass~Feed4Life2$Prey.mass)
ModelFeed4Life3 = lm(Feed4Life3$Predator.mass~Feed4Life3$Prey.mass)
ModelFeed4Life4 = lm(Feed4Life4$Predator.mass~Feed4Life4$Prey.mass)
ModelFeed4Life5 = lm(Feed4Life5$Predator.mass~Feed4Life5$Prey.mass)
ModelFeed4Life6 = lm(Feed4Life6$Predator.mass~Feed4Life6$Prey.mass)
Model5Feed1 = lm(Feed5$Predator.mass~Feed5$Prey.mass)
?with
Mydf = as.data.frame(read.csv("../Data/EcolArchives-E089-51-D1.csv"))
Mysmallerdf = cbind(Mydf$Predator.lifestage, Mydf$Type.of.feeding.interaction, Mydf$Predator.mass, Mydf$Prey.mass)
Mysmallerdf = cbind.as.data.frame(Mydf$Predator.lifestage, Mydf$Type.of.feeding.interaction, Mydf$Predator.mass, Mydf$Prey.mass)
Mysmallerdf = cbind.data.frame(Mydf$Predator.lifestage, Mydf$Type.of.feeding.interaction, Mydf$Predator.mass, Mydf$Prey.mass)
Mysmallerdf[1]
Mysmallerdf[2]
