order = "hclust", diag = FALSE,
title = "pearson",
mar=c(0,0,1,0))
vars = SitedataZ[-c(1,16)]
mcor = round(cor(vars, method = "kendall"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "circle", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE, title = "kendal", mar=c(0,0,1,0))
network_plot(correlate(vars, method = "pearson"), min_cor=0.4)
network_plot(correlate(vars, method = "kendall"), min_cor=0.4)
g1 = ggplot(AllSiteVars, aes(x = meanSOM, y = sd_SOM))+
geom_point()+
geom_smooth(method = loess)
g2 = ggplot(AllSiteVars, aes(x = meandbh, y = sd_meandbh))+
geom_point()+
geom_smooth(method = loess)
g3 = ggplot(AllSiteVars, aes(x = meanph, y = sd_meanph))+
geom_point()+
geom_smooth(method = loess)
grid.arrange(g1,g2,g3)
g1 = ggplot(AllSiteVars, aes(x = meanSOM, y = sd_SOM))+
geom_point()+
geom_smooth(method = loess)
g2 = ggplot(AllSiteVars, aes(x = meandbh, y = sd_meandbh))+
geom_point()+
geom_smooth(method = loess)
g3 = ggplot(AllSiteVars, aes(x = meanph, y = sd_pH))+
geom_point()+
geom_smooth(method = loess)
grid.arrange(g1,g2,g3)
mcor = round(cor(Set_mean[-c(1,10)], method = "pearson"),2)
# taking all remaing vars and either means or sd
Set_sd = SitedataZ[c(1,2,3,4,5,6,7,8,13,14)] #11 inc Site, slope
Set_mean = SitedataZ[c(1,2,3,4,9,10,11,12,13,14)]#11, inc Site, slope
# look at correlations now
mcor = round(cor(Set_mean[-c(1,10)], method = "pearson"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE, title = "pearson",mar=c(0,0,1,0) )
mcor = round(cor(Set_mean[-c(1,10)], method = "kendall"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,title = "kendall", mar=c(0,0,1,0))
tmp = Set_mean%>%filter(Site != 25)
slopecor =sort(round(apply(tmp[-c(1,10)],2, function(x) dcor(log(x),tmp$slope)),  2), decreasing = TRUE)
slopecor = as.data.frame(slopecor)
slopecor
ggplot(NestSlope, aes(x = slope))+
geom_histogram(binwidth = 0.05, colour = "black",fill = "grey")
# first look for response of z to the variables
melted = melt(SitedataZ[-1], id.vars = "slope")
ggplot(melted, aes(x = value, y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")
corrs = sort(round(apply(SitedataZ[-c(1,14)],2, function(x) dcor(x,SitedataZ$slope)), digits = 2), decreasing = TRUE)
corrs = as.data.frame(corrs)
corrs
# outliers = c(23,53,74,76)# found by Sitevars%>%filter(area_ratio==max(area_ratio))..etc
# SitedataZ = SitedataZ%>%filter(Site!=23)
# SitedataZ = SitedataZ%>%filter(Site!=53)
# SitedataZ = SitedataZ%>%filter(Site!=74)
# SitedataZ = SitedataZ%>%filter(Site!=76)
# SitedataZ = SitedataZ%>%filter(Site!=8)
#PS - these four lines because  the usua code of Site!=outliers stopped running.
melted = melt(SitedataZ[-1], id.vars = "slope")
ggplot(melted, aes(x = log(value), y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")
tmp = SitedataZ%>%filter(Site != 25)
slopecor =sort(round(apply(tmp[-c(1,14)],2, function(x) dcor(log(x),tmp$slope)),  2), decreasing = TRUE)
slopecor = as.data.frame(slopecor)
slopecor
vars = SitedataZ[-c(1,16)]
mcor = round(cor(vars, method = "pearson"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "circle", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,
title = "pearson",
mar=c(0,0,1,0))
vars = SitedataZ[-c(1,16)]
mcor = round(cor(vars, method = "kendall"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "circle", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE, title = "kendal", mar=c(0,0,1,0))
network_plot(correlate(vars, method = "pearson"), min_cor=0.4)
network_plot(correlate(vars, method = "kendall"), min_cor=0.4)
tmp = SitedataZ%>%filter(Site != 25)
slopecor =sort(round(apply(tmp[-c(1,14)],2, function(x) dcor(log(x),tmp$slope)),  2), decreasing = TRUE)
slopecor = as.data.frame(slopecor)
slopecor
vars = SitedataZ[-c(1,16)]
mcor = round(cor(vars, method = "pearson"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "circle", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,
title = "pearson",
mar=c(0,0,1,0))
vars = SitedataZ[-c(1,16)]
mcor = round(cor(vars, method = "kendall"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "circle", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE, title = "kendal", mar=c(0,0,1,0))
network_plot(correlate(vars, method = "pearson"), min_cor=0.4)
network_plot(correlate(vars, method = "kendall"), min_cor=0.4)
ggplot(AllPlotVars, aes(x = reorder(as.factor(Site), SOMYr2, median), y = SOMYr2))+
geom_boxplot()+
xlab("Site")+
theme(axis.text.x = element_text(angle=90, hjust=1))
g1 = ggplot(AllSiteVars, aes(x = meanSOM, y = sd_SOM))+
geom_point()+
geom_smooth(method = loess)
g2 = ggplot(AllSiteVars, aes(x = meandbh, y = sd_meandbh))+
geom_point()+
geom_smooth(method = loess)
g3 = ggplot(AllSiteVars, aes(x = meanph, y = sd_pH))+
geom_point()+
geom_smooth(method = loess)
grid.arrange(g1,g2,g3)
# taking all remaing vars and either means or sd
Set_sd = SitedataZ[c(1,2,3,4,5,6,7,8,13,14)] #11 inc Site, slope
Set_mean = SitedataZ[c(1,2,3,4,9,10,11,12,13,14)]#11, inc Site, slope
# look at correlations now
mcor = round(cor(Set_mean[-c(1,10)], method = "pearson"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE, title = "pearson",mar=c(0,0,1,0) )
mcor = round(cor(Set_mean[-c(1,10)], method = "pearson"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE, title = "pearson for means",mar=c(0,0,1,0) )
mcor = round(cor(Set_mean[-c(1,10)], method = "kendall"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,title = "kendall for means", mar=c(0,0,1,0))
tmp = Set_mean%>%filter(Site != 25)
slopecor =sort(round(apply(tmp[-c(1,10)],2, function(x) dcor(log(x),tmp$slope)),  2), decreasing = TRUE)
slopecor = as.data.frame(slopecor)
slopecor
data = Set_mean[-1]
mod_mean = lm(slope~., data=data, na.action = "na.fail")
#have a look at the linear model
par(mfrow =c(2,2))
plot(mod_mean)
models = dredge(mod_mean)
get.models(models, subset = delta<1)
head(models)
g1 = ggplot(AllSiteVars, aes(x = meanph, y = meanSOM))+
geom_point()+
geom_smooth(method = loess)+
ggtitle("Site level")
g5 = ggplot(AllPlotVars, aes(x = pHYr2, y = SOMYr2))+
geom_point()+
geom_smooth(method = loess)+
ggtitle("Plot level")
grid.arrange(g1,g5, nrow = 1 )
g1 = ggplot(AllPlotVars, aes(x = log(SOMYr2), y = plot_richness), na.rm = TRUE)+
geom_point()+
geom_smooth(method = loess)+
ggtitle("Plot level")
g2 = ggplot(AllPlotVars, aes(x = log(pHYr2), y = plot_richness))+
geom_point()+
geom_smooth(method = loess)+
ggtitle("Plot level")
g3 =  ggplot(AllSiteVars, aes(x = meanph, y = Richness))+
geom_point()+
geom_smooth(method = loess)+
ggtitle("Site level")
g4 =  ggplot(AllSiteVars, aes(x =meanSOM, y = Richness))+
geom_point()+
geom_smooth(method = loess)+
ggtitle("Site level")
grid.arrange(g1,g2,g4,g3)
setwd("C:/dev/code/CMEECourseWork/CMEEMainProject/Code")
cols
knitr::opts_chunk$set(echo = FALSE)
rm(list = ls())
cat("\014")
library(dplyr)
library(ggplot2)
library(visreg)
library(car) #for vif
library(GGally) # for ggpairs
library(gridExtra)
library(MuMIn)
library(reshape)
library(energy)#dcor
library(corrplot)
library(corrr)
#Get site vars and nest slopes
AllSiteVars = read.csv("../Data/CompleteSiteLevelVars.csv")
nestdata = readRDS("nest_mixed_model_fits.RDS")
AllPlotVars= read.csv("../Data/AllPlotsVarsRichness.csv")
#All site vars has some cols we know are not useful, delete these now
cols = colnames(AllSiteVars)
todelete = c(1,3,4,5,6,7,8,9,11,12,14,18,21, 22,23,24,25,26,27,28,29,30)
Sitevars = AllSiteVars[-todelete]
colnames(Sitevars) = c("Site","PHI","Buffer","Num_NVC","sd_pH", "sd_SOM" ,"sd_LBA",
"sd_meanDBH","meanDBH" , "meanph" , "meanSOM" , "meanLBA" ,
"meanTD", "area_ratio" )
# ps I have removed no trees after analysis, not shown. If I include all the analysis it makes the discussion to convoluted
# in retrospect no trees is not required, obvs realted to mean dbh and sd meand dbh, and since I created it,
#it wasnt a collected variable, I think its logical to drop it - it was a onbvuscating, unnecessary addition
# same fo rnumber major soil groups.
#take site and slope from nestdata
NestSlope = nestdata[-c(2,4,5)]
#join to SiteData
SitedataZ = inner_join(Sitevars,NestSlope)
SitedataZ[is.na(SitedataZ)] = 0
ggplot(NestSlope, aes(x = slope))+
geom_histogram(binwidth = 0.05, colour = "black",fill = "grey")
# taking all remaing vars and either means or sd
Set_sd = SitedataZ[c(1,2,3,4,5,6,7,8,13,14)] #11 inc Site, slope
Set_mean = SitedataZ[c(1,2,3,4,9,10,11,12,13,14)]#11, inc Site, slope
# look at correlations now
View(Set_mean)
#take site and slope from nestdata
NestSlope = nestdata[-c(2,4,5)]
#join to SiteData
SitedataZ = inner_join(Sitevars,NestSlope)
SitedataZ[is.na(SitedataZ)] = 0
# taking all remaing vars and either means or sd
Set_sd = SitedataZ[c(1,2,3,4,5,6,7,8,13,14,15)] #11 inc Site, slope
# look at correlations now
# first look for response of z to the variables
melted = melt(Set_mean[-1], id.vars = "slope")
# taking all remaing vars and either means or sd
Set_mean = SitedataZ[c(1,2,3,4,9,10,11,12,13,14,15)] #11 inc Site, slope
# look at correlations now
# first look for response of z to the variables
melted = melt(Set_mean[-1], id.vars = "slope")
ggplot(melted, aes(x = value, y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")
corrs = sort(round(apply(Set_mean[-c(1,15)],2, function(x) dcor(x,SitedataZ$slope)), digits = 2), decreasing = TRUE)
corrs = as.data.frame(corrs)
corrs
corrs = sort(round(apply(Set_mean[-c(1,11)],2, function(x) dcor(x,SitedataZ$slope)), digits = 2), decreasing = TRUE)
corrs = as.data.frame(corrs)
corrs
# outliers = c(23,53,74,76)# found by Sitevars%>%filter(area_ratio==max(area_ratio))..etc
# SitedataZ = SitedataZ%>%filter(Site!=23)
# SitedataZ = SitedataZ%>%filter(Site!=53)
# SitedataZ = SitedataZ%>%filter(Site!=74)
# SitedataZ = SitedataZ%>%filter(Site!=76)
# SitedataZ = SitedataZ%>%filter(Site!=8)
#PS - these four lines because  the usua code of Site!=outliers stopped running.
melted = melt(Set_mean[-1], id.vars = "slope")
ggplot(melted, aes(x = log(value), y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")
tmp = SitedataZ%>%filter(Site != 25)
slopecor =sort(round(apply(tmp[-c(1,14)],2, function(x) dcor(log(x),tmp$slope)),  2), decreasing = TRUE)
slopecor = as.data.frame(slopecor)
slopecor
tmp = Set_mean%>%filter(Site != 25)
slopecor =sort(round(apply(tmp[-c(1,11)],2, function(x) dcor(log(x),tmp$slope)),  2), decreasing = TRUE)
slopecor = as.data.frame(slopecor)
slopecor
vars = Set_mean[-c(1,11)]
mcor = round(cor(vars, method = "pearson"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "circle", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,
title = "pearson",
mar=c(0,0,1,0))
vars = Set_mean[-c(1,11)]
mcor = round(cor(vars, method = "kendall"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "circle", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE, title = "kendal", mar=c(0,0,1,0))
vars = Set_mean[-c(1,11)]
mcor = round(cor(vars, method = "pearson"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "circle", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,
title = "pearson correlation",
mar=c(0,0,1,0))
vars = Set_mean[-c(1,11)]
mcor = round(cor(vars, method = "kendall"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "circle", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE, title = "kendal correlation", mar=c(0,0,1,0))
network_plot(correlate(vars, method = "pearson"), min_cor=0.4)
network_plot(correlate(vars, method = "kendall"), min_cor=0.4)
vars = Set_mean[-c(1,11)]
mcor = round(cor(vars, method = "pearson"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,
title = "pearson correlation",
mar=c(0,0,1,0))
vars = Set_mean[-c(1,11)]
mcor = round(cor(vars, method = "kendall"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE, title = "kendal correlation", mar=c(0,0,1,0))
vars = Set_mean[-c(1,11)]
mcor = round(cor(vars, method = "kendall"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE, title = "kendal correlation", mar=c(0,0,1,0))
tmp = Set_mean%>%filter(Site != 25)
slopecor =sort(round(apply(tmp[-c(1,10)],2, function(x) dcor(log(x),tmp$slope)),  2), decreasing = TRUE)
slopecor = as.data.frame(slopecor)
slopecor
tmp = Set_mean[-c(1,11)]%>%filter(Site != 25)
tmp = Set_mean[-c(1,11)]%>%filter(Site != 25)
tmp = Set_mean%>%filter(Site != 25)
slopecor =sort(round(apply(tmp[-c(1,11)],2, function(x) dcor(log(x),tmp$slope)),  2), decreasing = TRUE)
slopecor = as.data.frame(slopecor)
slopecor
tmp = Set_mean%>%filter(Site != 25)
slopecor =sort(round(apply(tmp[-c(1,11)],2, function(x) dcor(log(x),tmp$slope)),  2), decreasing = TRUE)
slopecor = as.data.frame(slopecor)
slopecor
data = Set_mean[-1]
mod_mean = lm(slope~., data=data, na.action = "na.fail")
#have a look at the linear model
par(mfrow =c(2,2))
plot(mod_mean)
models = dredge(mod_mean)
get.models(models, subset = delta<1)
head(models)
models$meanTD
model1 = 0.2854521 + 0.0001995*(AllSiteVars$area_ratio)
-0.0121737*(AllSiteVars$meanph)
-0.0018080*(AllSiteVars$meanSOM)
+0.0079558(AllSiteVars$No_NVC)
model1 = 0.2854521 + 0.0001995*(AllSiteVars$area_ratio)
-0.0121737*(AllSiteVars$meanph)
-0.0018080*(AllSiteVars$meanSOM)
+0.0079558*(AllSiteVars$No_NVC)
+ 0.0017081*(AllSiteVars$pos_hetero_index)
plot(SitedataZ$slope,model1)
out.put
ggplot(SitedataZ, aes(x = meanpH, y = slope))+
geom_point()+
geom_smooth(method = loess)
ggplot(SitedataZ, aes(x = meanph, y = slope))+
geom_point()+
geom_smooth(method = loess)
amodel = lm(slope~area_ratio, meanph,meanSOM,Num_NVC,PHI, SitedataZ)
amodel = lm(slope ~ area_ratio, meanph, meanSOM, Num_NVC, PHI, SitedataZ)
colnames(SitedataZ)
amodel = lm(slope ~ area_ratio, meanph, meanSOM, Num_NVC, PHI, SitedataZ)
amodel = lm(slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, SitedataZ)
amodel = lm(slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, SitedataZ)
fit = predict(amodel,SitedataZ)
plot(fit,SitedataZ$slope)
summary(amodel)
amodel = lm(slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, SitedataZ)
bmodel = lm(slope ~ meanph + meanSOM + Num_NVC + PHI, SitedataZ)
fita = predict(amodel,SitedataZ)
fitb = predict(bmode,SitedataZ)
amodel = lm(slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, SitedataZ)
bmodel = lm(slope ~ meanph + meanSOM + Num_NVC + PHI, SitedataZ)
fita = predict(amodel,SitedataZ)
fitb = predict(bmodel,SitedataZ)
fitdf = cbind(fita,fitb,SitedataZ$slope)
g1 = ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")
amodel = lm(slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, SitedataZ)
bmodel = lm(slope ~ meanph + meanSOM + Num_NVC + PHI, SitedataZ)
fita = predict(amodel,SitedataZ)
fitb = predict(bmodel,SitedataZ)
fitdf = as.data.frame(cbind(fita,fitb,SitedataZ$slope))
g1 = ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")
g1
head(fitdf)
colnames(fitdf) = c("fita", "fitb", "slope")
g1 = ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")
g1
ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")+
geom_point(y = fitb, colour = "red")+
ylims(0.1,0.5)
ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")+
geom_point(y = fitb, colour = "red")+
ylim(0.1,0.5)
ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")+
geom_point(y = fitb, colour = "red")+
ylim(0.1,0.5)+
geom_abline(slope = 1,intercept = 0)
ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")+
geom_point(y = fitb, colour = "red")+
ylim(0.1,0.5)+
xlim(0.1,0.5)
geom_abline(slope = 1,intercept = 0)
amodel = lm(slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, SitedataZ)
bmodel = lm(slope ~ meanph + meanSOM + Num_NVC + PHI, SitedataZ)
fita = predict(amodel,SitedataZ)
fitb = predict(bmodel,SitedataZ)
fitdf = as.data.frame(cbind(fita,fitb,SitedataZ$slope))
colnames(fitdf) = c("fita", "fitb", "slope")
ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")+
geom_point(y = fitb, colour = "red")+
ylim(0.1,0.5)+
xlim(0.1,0.5)
geom_abline(slope = 1,intercept = 0)
amodel = lm(slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, SitedataZ)
bmodel = lm(slope ~ meanph + meanSOM + Num_NVC + PHI, SitedataZ)
fita = predict(amodel,SitedataZ)
fitb = predict(bmodel,SitedataZ)
fitdf = as.data.frame(cbind(fita,fitb,SitedataZ$slope))
colnames(fitdf) = c("fita", "fitb", "slope")
ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")+
geom_point(y = fitb, colour = "red")+
ylim(0.1,0.5)+
xlim(0.1,0.5)+
geom_abline(slope = 1,intercept = 0)
amodel = lm(slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, SitedataZ)
bmodel = lm(slope ~ meanph + meanSOM + Num_NVC + PHI, SitedataZ)
fita = predict(amodel,SitedataZ)
fitb = predict(bmodel,SitedataZ)
fitdf = as.data.frame(cbind(fita,fitb,SitedataZ$slope))
colnames(fitdf) = c("fita", "fitb", "slope")
ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")+
geom_point(y = fitb, colour = "red")+
ylim(0.1,0.45)+
xlim(0.1,0.45)+
geom_abline(slope = 1,intercept = 0)
summary(amodel)
summary(bmodel)
amodel = lm(slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, SitedataZ)
bmodel = lm(slope ~ meanph + meanSOM + Num_NVC + PHI, SitedataZ)
fita = predict(amodel,SitedataZ)
fitb = predict(bmodel,SitedataZ)
fitdf = as.data.frame(cbind(fita,fitb,SitedataZ$slope))
colnames(fitdf) = c("fita", "fitb", "slope")
ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")+
geom_point(y = fitb, colour = "red")+
ylim(0.1,0.45)+
xlim(0.1,0.45)+
geom_abline(slope = 1,intercept = 0)+
annotate(fita: slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, fitb:slope ~ meanph + meanSOM + Num_NVC + PHI)
amodel = lm(slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, SitedataZ)
bmodel = lm(slope ~ meanph + meanSOM + Num_NVC + PHI, SitedataZ)
fita = predict(amodel,SitedataZ)
fitb = predict(bmodel,SitedataZ)
fitdf = as.data.frame(cbind(fita,fitb,SitedataZ$slope))
colnames(fitdf) = c("fita", "fitb", "slope")
ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")+
geom_point(y = fitb, colour = "red")+
ylim(0.1,0.45)+
xlim(0.1,0.45)+
geom_abline(slope = 1,intercept = 0)+
annotate("fita: slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, fitb:slope ~ meanph + meanSOM + Num_NVC + PHI"")
amodel = lm(slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, SitedataZ)
bmodel = lm(slope ~ meanph + meanSOM + Num_NVC + PHI, SitedataZ)
fita = predict(amodel,SitedataZ)
fitb = predict(bmodel,SitedataZ)
fitdf = as.data.frame(cbind(fita,fitb,SitedataZ$slope))
colnames(fitdf) = c("fita", "fitb", "slope")
ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")+
geom_point(y = fitb, colour = "red")+
ylim(0.1,0.45)+
xlim(0.1,0.45)+
geom_abline(slope = 1,intercept = 0)+
annotate("fita: slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, fitb:slope ~ meanph + meanSOM + Num_NVC + PHI")
amodel = lm(slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, SitedataZ)
bmodel = lm(slope ~ meanph + meanSOM + Num_NVC + PHI, SitedataZ)
fita = predict(amodel,SitedataZ)
fitb = predict(bmodel,SitedataZ)
fitdf = as.data.frame(cbind(fita,fitb,SitedataZ$slope))
colnames(fitdf) = c("fita", "fitb", "slope")
ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")+
geom_point(y = fitb, colour = "red")+
ylim(0.1,0.45)+
xlim(0.1,0.45)+
geom_abline(slope = 1,intercept = 0)+
annotate("text", label = "fita: slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, fitb:slope ~ meanph + meanSOM + Num_NVC + PHI")
amodel = lm(slope ~ area_ratio + meanph + meanSOM + Num_NVC + PHI, SitedataZ)
bmodel = lm(slope ~ meanph + meanSOM + Num_NVC + PHI, SitedataZ)
fita = predict(amodel,SitedataZ)
fitb = predict(bmodel,SitedataZ)
fitdf = as.data.frame(cbind(fita,fitb,SitedataZ$slope))
colnames(fitdf) = c("fita", "fitb", "slope")
ggplot(fitdf, aes(x = slope))+
geom_point(y = fita,colour = "blue")+
geom_point(y = fitb, colour = "red")+
ylim(0.1,0.45)+
xlim(0.1,0.45)+
geom_abline(slope = 1,intercept = 0)+
ggtitle("Two fits to models obtained from dredge function")
plot(amodel)
plot(bmodel)
data = Set_mean[-1]
mod_mean = lm(slope~., data=data, na.action = "na.fail")
models = dredge(mod_mean)
get.models(models, subset = delta<1)
head(models)
mod_mean
models=dredge(mod_mean)
models
models = dredge(mod_mean)
get.models(models, subset = delta<1)
