## NB - several libraries mask each other here - arm masks dplyr and corrplot, therefore open libraries #as required.
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
# Richness modelling
rm(list = ls())
cat("\014")
library(dplyr) # everything
library(ggplot2)
library(car) # for vif
library(reshape) # melt
# get the data
site_data =  read.csv("../../Data/CompleteSiteLevelVars.csv")
PlotZdata = read.csv("../../Data/z_ave_fits.csv")
Zs = PlotZdata%>%select(Site, slope)
zeta_r = readRDS("../Zeta/zeta_r")
Site = c(1:103)
zeta_r = as.data.frame(cbind(Site,zeta_r))
site_data = inner_join(site_data,zeta_r)
#mean impute the missing PHI
meanPHI = round(mean(site_data$Pos_Hetero_Index, na.rm = TRUE),2)
x = site_data$Pos_Hetero_Index
x[is.na(x)] = meanPHI
site_data$Pos_Hetero_Index = x
site_data_zs = inner_join(site_data,Zs)
View(zeta_r)
View(site_data_zs)
View(site_data_zs)
plot(site_data_zs$zeta_r, site_data_zs$Richness)
plot(site_data_zs$zeta_r, site_data_zs$Pos_Hetero_Index)
#remove the wood with the largest area
largest_area = as.numeric(subset_all%>%filter(Area == max(Area))%>%select(Site))
# slect only required variables
subset_all = site_data_zs%>%select("Site","slope","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity","zeta_r")
colnames(subset_all) = c("Site","nestZ","Area",
"Northing", "PHI","Buffer",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_TD","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meanTD","zeta_r")
# slect only required variables
subset_all = site_data_zs%>%select("Site","slope","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity","zeta_r")
colnames(subset_all) = c("Site","nestZ","Area",
"Northing", "PHI","Buffer",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_TD","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meanTD","zeta_r")
#remove the wood with the largest area
largest_area = as.numeric(subset_all%>%filter(Area == max(Area))%>%select(Site))
site_data_outlier1 = subset_all%>%filter(Site!=largest_area)
site_data_outlier1 = site_data_outlier1[,-3] # remove area column now
#remove the outlier in PHI
largest_PHI = as.numeric(subset_all%>%filter(PHI == max(PHI))%>%select(Site))
site_data_outlier2 = site_data_outlier1%>%filter(Site!=largest_PHI)
largest_PHI = as.numeric(site_data_outlier2%>%filter(PHI == max(PHI))%>%select(Site))
site_data_outlier3 = site_data_outlier2%>%filter(Site!=largest_PHI)
plot(site_data_outlier3$zeta_r, site_data_outlier3$PHI)
ggplot(site_data_outlier3, aes(x = PHI, y = zeta_r))+
geom_point()
ggplot(site_data_outlier3, aes(x = PHI, y = zeta_r))+
geom_point()
View(zeta_r)
emp_zetas = readRDS("empirical_zetas.RDS")
View(emp_zetas)
View(emp_zetas)
z1 = emp_zetas[1,]
z1 = t(emp_zetas[1,])
View(site_data_outlier3)
sites = seq(1,103,1)
Site = seq(1,103,1)
z1df = as.data.frame(cbind(Site,z1))
View(z1df)
PHIdf = site_data_outlier3[,c("Site","PHI")]
View(PHIdf)
df = inner_join(z1df,PHIdf)
View(df)
ggplot(df, aes(x = PHI, y = 1))+
geom_point()
View(df)
View(df)
colnames(df = "Site","z1","PHI")
ggplot(df, aes(x = PHI, y = z1))+
geom_point()
View(df)
colnames(df) = c("Site","z1","PHI")
ggplot(df, aes(x = PHI, y = z1))+
geom_point()
ggplot(df, aes(x = PHI, y = z1))+
geom_point()+
geom_smooth(method = "lm")
ggplot(df, aes(x = PHI, y = z1))+
geom_point()+
geom_smooth(method = "lm")+
ylab("zeta1")
View(site_data_outlier3)
DBHdf = as.data.frame(cbind(site_data_outlier3$Site, site_data_outlier3$meandbh))
df = inner_join(DBHdf,z1df)
DBHdf = as.data.frame(cbind(site_data_outlier3$Site, site_data_outlier3$meandbh))
colnames(DBHdf) = c("Site","meanDBH")
df = inner_join(DBHdf,z1df)
View(df)
colnames(df) = c("Site","meanDBH","zeta1")
ggplot(df, aes(x = meanDBH, y = z1))+
geom_point()+
geom_smooth(method = "lm")+
ylab("zeta1")
View(df)
ggplot(df, aes(x = meanDBH, y = zeta1))+
geom_point()+
geom_smooth(method = "lm")+
ylab("zeta1")
View(site_data_outlier3)
ggplot(df, aes(x = meanDBH, y = zeta_r))+
geom_point()+
geom_smooth(method = "lm")
ggplot(site_data_outlier3, aes(x = meanDBH, y = zeta_r))+
geom_point()+
geom_smooth(method = "lm")
ggplot(site_data_outlier3, aes(x = meandbh, y = zeta_r))+
geom_point()+
geom_smooth(method = "lm")
ggplot(site_data_outlier3, aes(x = meandbh, y = PHI))+
geom_point()+
geom_smooth(method = "lm")
ggplot(site_data_outlier3, aes(x = meandbh, y = sd_meandbh))+
geom_point()+
geom_smooth(method = "lm")
ggplot(site_data_outlier3, aes(x = meandbh, y = Northing))+
geom_point()+
geom_smooth(method = "lm")
ggplot(site_data_outlier3, aes(x = meandbh, y = PHI))+
geom_point()+
geom_smooth(method = "lm")
View(site_data_outlier3)
ggplot(site_data_outlier3, aes(x = meandbh, y = no_NVC))+
geom_point()+
geom_smooth(method = "lm")
ggplot(df, aes(x = meandbh, y = zeta1))+
geom_point()+
geom_smooth(method = "lm")
ggplot(df, aes(x = meanDBH, y = zeta1))+
geom_point()+
geom_smooth(method = "lm")
ggplot(site_data_outlier3, aes(x = meanDBH, y = zeta_r))+
geom_point()+
geom_smooth(method = "lm")
ggplot(site_data_outlier3, aes(x = meandbh, y = zeta_r))+
geom_point()+
geom_smooth(method = "lm")
ggplot(site_data_outlier3, aes(x = meandbh, y = PHI))+
geom_point()+
geom_smooth(method = "lm")
View(site_data_outlier3)
g1 = ggplot(site_data_outlier3, aes(x = meandbh, y = PHI))+
geom_point()+
geom_smooth(method = "lm")+
ylab("zeta_r")
g2 = ggplot(site_data_outlier3, aes(x = meandTD, y = PHI))+
geom_point()+
geom_smooth(method = "lm")+
ylab("zeta_r")
grid.arrange(g1,g2,ncol = 2)
library(gridExtra)
g1 = ggplot(site_data_outlier3, aes(x = meandbh, y = PHI))+
geom_point()+
geom_smooth(method = "lm")+
ylab("zeta_r")
g2 = ggplot(site_data_outlier3, aes(x = meandTD, y = PHI))+
geom_point()+
geom_smooth(method = "lm")+
ylab("zeta_r")
grid.arrange(g1,g2,ncol = 2)
View(site_data_outlier3)
g1 = ggplot(site_data_outlier3, aes(x = meandbh, y = PHI))+
geom_point()+
geom_smooth(method = "lm")+
ylab("zeta_r")
g2 = ggplot(site_data_outlier3, aes(x = meanTD, y = PHI))+
geom_point()+
geom_smooth(method = "lm")+
ylab("zeta_r")
grid.arrange(g1,g2,ncol = 2)
g1 = ggplot(site_data_outlier3, aes(x = meandbh, y = PHI))+
geom_point()+
geom_smooth(method = "lm")+
ylab("zeta_r")+
xlab("meanDBH")
g2 = ggplot(site_data_outlier3, aes(x = meanTD, y = PHI))+
geom_point()+
geom_smooth(method = "lm")+
ylab("zeta_r")+
xlab("meanTD")
grid.arrange(g1,g2,ncol = 2)
library(dplyr)
require(ggplot2)
require(reshape)
library(gridExtra)
rm(list = ls())
cat("\014")
site_data =  read.csv("../Data/CompleteSiteLevelVars.csv")
AllPlotsvars = read.csv("../Data/AllPlotsVarsRichness.csv")
Ellenbergs = read.csv("../Data/Ellenbergs.csv")
colnames(Ellenbergs) = c("Amalgams","Taxon.name","L" , "F" ,  "R" , "N" ,  "S" )
Ellenbergs$Amalgams = gsub(" ", "", Ellenbergs$Amalgams, fixed = TRUE)
Ellenbergs$Amalgams = as.numeric(Ellenbergs$Amalgams)
vegcodes = read.csv("../Data/vegetation_codes.csv")
colnames(vegcodes) = c("Species","Amalgams")
groundcover = read.csv("../data/GroundCover.csv")
cover_ellenbergs = inner_join(groundcover,Ellenbergs)
get_all_plots = function(nvc){
nvc =  as.character(nvc)
allplots = AllPlotsvars%>%filter(ShortNVC == nvc)
return(allplots)
}
get_ellens = function(allplots){
rows = nrow(allplots)
df = data.frame()
for(row in 1:rows){
site = allplots[row,2]
plot = allplots[row,3]
plants = cover_ellenbergs%>%filter(SITE == site)%>%filter(PLOT == plot)
ave_N = round(mean(plants$N),2)
ave_R = round(mean(plants$R),2)
SOM = allplots[row,]$SOMYr2
pH = allplots[row,]$pHYr2
thisrow = c(SOM,pH,ave_N,ave_R)
df = rbind(df,thisrow)
}
colnames(df) = c("SOM","pH", "ave_N","ave_R")
return(df)
}
get_som_ellens = function(nvc){
allplots = get_all_plots(nvc)
ellensdf = get_ellens(allplots)
return(ellensdf)
}
get_p = function(data){
vals = vector()
lmN = lm(SOM~ave_N, data)
lmR = lm(SOM~ave_R, data)
lmpH = lm(SOM~pH,data)
pN = summary(lmN)$coefficients[2,4]
pR = summary(lmR)$coefficients[2,4]
ppH = summary(lmpH)$coefficients[2,4]
vals = c(pN,pR,ppH)
return(vals)
}
###############
w10vals = get_som_ellens("W10")
melted = melt(w10vals, id.vars = "SOM")
ps = get_p(w10vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
w10plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "W10")+
#annotate("text", x = 40, y = 3, label = pvals)
###############
w8vals = get_som_ellens("W8")
melted = melt(w8vals, id.vars = "SOM")
ps = get_p(w8vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
w8plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm",linetype="dashed")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "W8")+
# annotate("text", x = 40, y = 3, label = pvals)
###########
w6vals = get_som_ellens("W6")
melted = melt(w6vals, id.vars = "SOM")
ps = get_p(w6vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
w6plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm", linetype="dashed")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "W6")+
#annotate("text", x = 40, y = 3, label = pvals)
#############
w16vals = get_som_ellens("W16")
melted = melt(w16vals, id.vars = "SOM")
ps = get_p(w16vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
w16plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "W16")+
#annotate("text", x = 40, y = 3, label = pvals)
###########
w21vals = get_som_ellens("W21")
melted = melt(w21vals, id.vars = "SOM")
ps = get_p(w21vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
w21plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm",linetype="dashed")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "W21")+
#annotate("text", x = 40, y = 3, label = pvals)
######
ov27vals = get_som_ellens("W8")
melted = melt(ov27vals, id.vars = "SOM")
ps = get_p(ov27vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
ov27plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm",linetype="dashed")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "OV27")+
#annotate("text", x = 40, y = 3, label = pvals)
###
grid.arrange(w6plot,w8plot,w10plot,w16plot,w21plot,ov27plot, ncol = 2)
library(dplyr)
require(ggplot2)
require(reshape)
library(gridExtra)
rm(list = ls())
cat("\014")
site_data =  read.csv("../Data/CompleteSiteLevelVars.csv")
AllPlotsvars = read.csv("../Data/AllPlotsVarsRichness.csv")
Ellenbergs = read.csv("../Data/Ellenbergs.csv")
colnames(Ellenbergs) = c("Amalgams","Taxon.name","L" , "F" ,  "R" , "N" ,  "S" )
Ellenbergs$Amalgams = gsub(" ", "", Ellenbergs$Amalgams, fixed = TRUE)
Ellenbergs$Amalgams = as.numeric(Ellenbergs$Amalgams)
vegcodes = read.csv("../Data/vegetation_codes.csv")
colnames(vegcodes) = c("Species","Amalgams")
groundcover = read.csv("../data/GroundCover.csv")
cover_ellenbergs = inner_join(groundcover,Ellenbergs)
get_all_plots = function(nvc){
nvc =  as.character(nvc)
allplots = AllPlotsvars%>%filter(ShortNVC == nvc)
return(allplots)
}
get_ellens = function(allplots){
rows = nrow(allplots)
df = data.frame()
for(row in 1:rows){
site = allplots[row,2]
plot = allplots[row,3]
plants = cover_ellenbergs%>%filter(SITE == site)%>%filter(PLOT == plot)
ave_N = round(mean(plants$N),2)
ave_R = round(mean(plants$R),2)
SOM = allplots[row,]$SOMYr2
pH = allplots[row,]$pHYr2
thisrow = c(SOM,pH,ave_N,ave_R)
df = rbind(df,thisrow)
}
colnames(df) = c("SOM","pH", "ave_N","ave_R")
return(df)
}
get_som_ellens = function(nvc){
allplots = get_all_plots(nvc)
ellensdf = get_ellens(allplots)
return(ellensdf)
}
get_p = function(data){
vals = vector()
lmN = lm(SOM~ave_N, data)
lmR = lm(SOM~ave_R, data)
lmpH = lm(SOM~pH,data)
pN = summary(lmN)$coefficients[2,4]
pR = summary(lmR)$coefficients[2,4]
ppH = summary(lmpH)$coefficients[2,4]
vals = c(pN,pR,ppH)
return(vals)
}
w10vals = get_som_ellens("W10")
melted = melt(w10vals, id.vars = "SOM")
ps = get_p(w10vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
w10plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "W10")+
#annotate("text", x = 40, y = 3, label = pvals)
w8vals = get_som_ellens("W8")
melted = melt(w8vals, id.vars = "SOM")
ps = get_p(w8vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
w8plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm",linetype="dashed")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "W8")+
# annotate("text", x = 40, y = 3, label = pvals)
w10vals = get_som_ellens("W10")
melted = melt(w10vals, id.vars = "SOM")
ps = get_p(w10vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
w10plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "W10")
#annotate("text", x = 40, y = 3, label = pvals)
###############
w8vals = get_som_ellens("W8")
melted = melt(w8vals, id.vars = "SOM")
ps = get_p(w8vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
w8plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm",linetype="dashed")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "W8")
# annotate("text", x = 40, y = 3, label = pvals)
###########
w6vals = get_som_ellens("W6")
melted = melt(w6vals, id.vars = "SOM")
ps = get_p(w6vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
w6plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm", linetype="dashed")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "W6")
#annotate("text", x = 40, y = 3, label = pvals)
#############
w16vals = get_som_ellens("W16")
melted = melt(w16vals, id.vars = "SOM")
ps = get_p(w16vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
w16plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "W16")
#annotate("text", x = 40, y = 3, label = pvals)
###########
w21vals = get_som_ellens("W21")
melted = melt(w21vals, id.vars = "SOM")
ps = get_p(w21vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
w21plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm",linetype="dashed")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "W21")
#annotate("text", x = 40, y = 3, label = pvals)
######
ov27vals = get_som_ellens("W8")
melted = melt(ov27vals, id.vars = "SOM")
ps = get_p(ov27vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
ov27plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm",linetype="dashed")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "OV27")
#annotate("text", x = 40, y = 3, label = pvals)
###
grid.arrange(w6plot,w8plot,w10plot,w16plot,w21plot,ov27plot, ncol = 2)
w6vals = get_som_ellens("W6")
melted = melt(w6vals, id.vars = "SOM")
ps = get_p(w6vals)
pvals = paste("p ave N =",round(ps[1],2),
", p ave R =",round(ps[2],2),
", p pH =",round(ps[3],2))
w6plot = ggplot(melted, aes(x = SOM, y = value, colour = variable))+
geom_point()+
geom_smooth(method = "lm", linetype="dashed")+
ylab("Average Ellenberg for plot")+
annotate("text", x = 80, y = 9, label = "W6")
w6vals = get_som_ellens("W6")
AllPlotsvars = read.csv("../Data/AllPlotsVarsRichness.csv")
setwd("C:/dev/code/CMEECourseWork/CMEEMainProject/Code")
source('C:/dev/code/CMEECourseWork/CMEEMainProject/Code/QuickSOMEllenbergs.R')
