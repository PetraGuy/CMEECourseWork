"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
meanPHI = round(mean(site_data$Pos_Hetero_Index, na.rm = TRUE),2)
x = site_data$Pos_Hetero_Index
x[is.na(x)] = meanPHI
site_data$Pos_Hetero_Index = x
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
meanPHI = round(mean(site_data$Pos_Hetero_Index, na.rm = TRUE),2)
x = site_data$Pos_Hetero_Index
x[is.na(x)] = meanPHI
site_data$Pos_Hetero_Index = x
View(site_data)
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
library(dplyr) # everything
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
# get the data
site_data =  read.csv("../Data/CompleteSiteLevelVars.csv")
site_data = site_data[,-1]
View(site_data)
meanPHI = round(mean(site_data$Pos_Hetero_Index, na.rm = TRUE),2)
x = site_data$Pos_Hetero_Index
x[is.na(x)] = meanPHI
site_data$Pos_Hetero_Index = x
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
knitr::opts_chunk$set(echo = TRUE)
# Richness modelling
rm(list = ls())
cat("\014")
library(dplyr) # everything
library(visreg) # for visreg plots
library(ggplot2)
library(MuMIn) #dredge and avg
library(car) # for vif
library(arm) #for standarize
library(reshape) # melt
# get the data
site_data =  read.csv("../Data/CompleteSiteLevelVars.csv")
site_data = site_data[,-1]
#mean impute the missing PHI
meanPHI = round(mean(site_data$Pos_Hetero_Index, na.rm = TRUE),2)
x = site_data$Pos_Hetero_Index
x[is.na(x)] = meanPHI
site_data$Pos_Hetero_Index = x
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
subset_all = site_data%>%select("Site","Richness","Area_ha","Northing", "Pos_Hetero_Index","Buffer3","no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA", "meandbh","meanph", "meanSOM","meanLBA","meantreedensity")
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
site_data =  read.csv("../Data/CompleteSiteLevelVars.csv")
site_data = site_data[,-1]
#mean impute the missing PHI
meanPHI = round(mean(site_data$Pos_Hetero_Index, na.rm = TRUE),2)
x = site_data$Pos_Hetero_Index
x[is.na(x)] = meanPHI
site_data$Pos_Hetero_Index = x
View(site_data)
library(dplyr)
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
subset_sd = site_data_outlier%>%select("Site","Richness",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio")
library(dplyr)
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
subset_all = site_data%>%select(Site,Richness,Area_ha,
Northing, Pos_Hetero_Index,Buffer3,
no_MSG, no_NVC,sd_pH,sd_SOM,sd_LBA,
sd_meandbh,sd_treedensity,area_ratio,
meandbh,meanph, meanSOM,meanLBA,
meantreedensity)
?select
variables = c(Site,Richness,Area_ha,
Northing, Pos_Hetero_Index,Buffer3,
no_MSG, no_NVC,sd_pH,sd_SOM,sd_LBA,
sd_meandbh,sd_treedensity,area_ratio,
meandbh,meanph, meanSOM,meanLBA,
meantreedensity)
subset_all = site_data%>%select(variables)
variables = c("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
subset_all = site_data%>%select(variables)
site_data%>%select(Site)
site_data%>%select("Site")
library(dplyr)
site_data%>%select("Site")
select(site_data,Site)
select(site_data,"Site")
?select
library(dplyr)
sessionInfo()
largest_area = side_data%>%filter(Area == max(Area))%>%select(Site)
largest_area = site_data%>%filter(Area_ha == max(Area_ha))%>%select(Site)
View(site_data)
site_data%>%select(meanph)
rm(list = ls())
cat("\014")
library(dplyr) # everything
site_data =  read.csv("../Data/CompleteSiteLevelVars.csv")
site_data = site_data[,-1]
meanPHI = round(mean(site_data$Pos_Hetero_Index, na.rm = TRUE),2)
x = site_data$Pos_Hetero_Index
x[is.na(x)] = meanPHI
site_data$Pos_Hetero_Index = x
subset_all = site_data%>%select("Site","Richness","Area_ha","Northing", "Pos_Hetero_Index","Buffer3","no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA", "meandbh","meanph", "meanSOM","meanLBA","meantreedensity")
library(arm) #for standarize
colnames(subset_all) = c("Site","Richness","Area",
"Northing", "PHI","Buffer",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_TD","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meanTD")
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
library(dplyr)
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
knitr::opts_chunk$set(echo = TRUE)
# Richness modelling
rm(list = ls())
cat("\014")
library(dplyr) # everything
library(visreg) # for visreg plots
library(ggplot2)
library(MuMIn) #dredge and avg
library(car) # for vif
library(reshape) # melt
# get the data
site_data =  read.csv("../Data/CompleteSiteLevelVars.csv")
site_data = site_data[,-1]
#mean impute the missing PHI
meanPHI = round(mean(site_data$Pos_Hetero_Index, na.rm = TRUE),2)
x = site_data$Pos_Hetero_Index
x[is.na(x)] = meanPHI
site_data$Pos_Hetero_Index = x
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH",
"sd_SOM","sd_LBA", "meandbh",
"meanph", "meanSOM","meanLBA",
"meantreedensity")
colnames(subset_all) = c("Site","Richness","Area",
"Northing", "PHI","Buffer",
"no_MSG", "no_NVC","sd_pH",
"sd_SOM","sd_LBA", "sd_meandbh",
"sd_TD","area_ratio", "meandbh",
"meanph", "meanSOM","meanLBA",
"meanTD")
#mean impute the missing PHI
meanPHI = round(mean(site_data$Pos_Hetero_Index, na.rm = TRUE),2)
x = site_data$Pos_Hetero_Index
x[is.na(x)] = meanPHI
site_data$Pos_Hetero_Index = x
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
colnames(subset_all) = c("Site","Richness","Area",
"Northing", "PHI","Buffer",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_TD","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meanTD")
#remove the wood with the largest area
largest_area = subset_all%>%filter(Area == max(Area))%>%select(Site)
site_data_outlier = subset_all%>%filter(Site!=largest_area)
site_data_outier = site_data_outlier[,-3] # remove area column now
range(subset_data_outlier)
#remove the wood with the largest area
largest_area = subset_all%>%filter(Area == max(Area))%>%select(Site)
site_data_outlier = subset_all%>%filter(Site!=largest_area)
site_data_outier = site_data_outlier[,-3] # remove area column now
range(subset_data_outlier)
View(site_data_outlier)
range(site_data_outlier)
range(site_data_outlier$Area)
#remove the wood with the largest area
largest_area = subset_all%>%filter(Area == max(Area))%>%select(Site)
largest_area = subset_all%>%filter(Area == max(Area))%>%select(Site)
largest_area
View(site_data_outier)
site_data_outlier = subset_all%>%filter(Site!=largest_area)
site_data_outlier
range(site_data_outlier$Area)
#remove the wood with the largest area
largest_area = subset_all%>%filter(Area == max(Area))%>%select(Site)
View(largest_area)
subset_all%>%filter(Area == max(Area))%>%select(Site)
site_data_outlier = subset_all%>%filter(Site!=largest_area)
View(subset_all)
site_data_outlier = subset_all%>%filter(Site!=largest_area)
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
colnames(subset_all) = c("Site","Richness","Area",
"Northing", "PHI","Buffer",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_TD","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meanTD")
rm(list = ls())
library(dplyr) # everything
site_data =  read.csv("../Data/CompleteSiteLevelVars.csv")
site_data = site_data[,-1]
meanPHI = round(mean(site_data$Pos_Hetero_Index, na.rm = TRUE),2)
x = site_data$Pos_Hetero_Index
x[is.na(x)] = meanPHI
site_data$Pos_Hetero_Index = x
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
colnames(subset_all) = c("Site","Richness","Area",
"Northing", "PHI","Buffer",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_TD","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meanTD")
#remove the wood with the largest area
largest_area = subset_all%>%filter(Area == max(Area))%>%select(Site)
View(largest_area)
site_data_outlier = subset_all%>%filter(Site!=largest_area)
View(site_data_outlier)
View(largest_area)
largest_area==74
site_data_outlier = subset_all%>%filter(Site!=74)
rm(list = ls())
cat("\014")
site_data =  read.csv("../Data/CompleteSiteLevelVars.csv")
site_data = site_data[,-1]
meanPHI = round(mean(site_data$Pos_Hetero_Index, na.rm = TRUE),2)
x = site_data$Pos_Hetero_Index
x[is.na(x)] = meanPHI
site_data$Pos_Hetero_Index = x
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
colnames(subset_all) = c("Site","Richness","Area",
"Northing", "PHI","Buffer",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_TD","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meanTD")
#remove the wood with the largest area
largest_area = subset_all%>%filter(Area == max(Area))%>%select(Site)
site_data_outlier = subset_all%>%filter(Site!=largest_area)
site_data_outier = site_data_outlier[,-3] # remove area column now
View(site_data_outlier)
site_data_outlier = subset_all%>%filter(Site!=largest_area)
site_data_outlier = subset_all%>%filter(Site!=74)
site_data_outlier = site_data_outlier[,-3] # remove area column now
rm(list = ls())
site_data =  read.csv("../Data/CompleteSiteLevelVars.csv")
site_data = site_data[,-1]
meanPHI = round(mean(site_data$Pos_Hetero_Index, na.rm = TRUE),2)
x = site_data$Pos_Hetero_Index
x[is.na(x)] = meanPHI
site_data$Pos_Hetero_Index = x
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
colnames(subset_all) = c("Site","Richness","Area",
"Northing", "PHI","Buffer",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_TD","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meanTD")
larget_area==74
#remove the wood with the largest area
largest_area = subset_all%>%filter(Area == max(Area))%>%select(Site)
largest_area
largest_area==74
73!=largest_area
site_data_outlier = subset_all%>%filter(Site!=largest_area)
View(site_data_outlier)
#remove the wood with the largest area
largest_area = as.numeric(subset_all%>%filter(Area == max(Area))%>%select(Site))
site_data_outlier = subset_all%>%filter(Site!=largest_area)
site_data_outlier = site_data_outlier[,-3] # remove area column now
#remove the wood with the largest area
largest_area = as.numeric(subset_all%>%filter(Area == max(Area))%>%select(Site))
site_data_outlier = subset_all%>%filter(Site!=largest_area)
site_data_outlier = site_data_outlier[,-3] # remove area column now
subset_sd = site_data_outlier%>%select("Site","Richness",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio")
subset_sd = site_data_outlier%>%select("Site","Richness",
"Northing", "PHI","Buffer",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_TD","area_ratio")
subset_mean = site_data_outlier%>%select("Site","Richness",
"Northing", "PHI",  "meandbh",
"meanph", "Buffer", "meanSOM","meanLBA",
"meanTD","area_ratio", "no_NVC",
"no_MSG")
#look at correaltions between explanatory variables
vars = site_data_outlier[,-c(1,2)]
mcor = round(cor(vars, method = "pearson", use = "na.or.complete"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,
title = "pearson correlation",
mar=c(0,0,1,0))
#look at correaltions between explanatory variables
library(corrplot)
vars = site_data_outlier[,-c(1,2)]
mcor = round(cor(vars, method = "pearson", use = "na.or.complete"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,
title = "pearson correlation",
mar=c(0,0,1,0))
mcor = round(cor(vars, method = "spearman", use = "na.or.complete"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,
title = "spearman correlation",
mar=c(0,0,1,0))
# mean and standarddeviation variabes show correlations (spearman)
#above 0.5 - we know from previous plots that these are correlated, so data
# WILL be split in two.
#look at correaltions between explanatory variables
library(corrplot)
vars = site_data_outlier[,-c(1,2)]
mcor = round(cor(vars, method = "pearson", use = "na.or.complete"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,
title = "pearson correlation",
mar=c(0,0,1,0))
mcor = round(cor(vars, method = "spearman", use = "na.or.complete"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,
title = "spearman correlation",
mar=c(0,0,1,0))
# mean and standarddeviation variabes show correlations (spearman)
#above 0.5 - we know from previous plots that these are correlated, so data
# WILL be split in two.
###Means correlations...
vars = subset_mean[,-c(1,2)]
mcor = round(cor(vars, method = "pearson", use = "na.or.complete"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,
title = "pearson correlation",
mar=c(0,0,1,0))
mcor = round(cor(vars, method = "spearman", use = "na.or.complete"),2)
corrplot(mcor, type = "upper", tl.pos = "td",
method = "number", tl.cex = 0.5, tl.col = 'black',tl.srt=45,
order = "hclust", diag = FALSE,
title = "spearman correlation",
mar=c(0,0,1,0))
##Models for means#############
# we know richness vs ph usually unimodal around .5, therefore fit to meanpH^2
data = subset_mean[,-1]
richness = subset_mean[,2]
data$meanph = (data$meanph)^2
#rescale the data
library(arm) #for standarize
rescaled_mean_data = apply(data[,-1],2, rescale)
rescaled_mean_data = as.data.frame(cbind(richness, rescaled_mean_data))
#rescale the data
library(arm) #for standarize
rescaled_mean_data = apply(data[,-1],2, rescale)
rescaled_mean_data = as.data.frame(cbind(richness, rescaled_mean_data))
#create the model
mod_mean = lm(richness~., data=rescaled_mean_data, na.action = "na.fail")
#have a look at the linear model
par(mfrow =c(2,2))
plot(mod_mean)
# look at vifs
vif(mod_mean)
knitr::opts_chunk$set(echo = TRUE)
# Richness modelling
rm(list = ls())
cat("\014")
library(dplyr) # everything
library(ggplot2)
library(car) # for vif
library(reshape) # melt
# get the data
site_data =  read.csv("../Data/CompleteSiteLevelVars.csv")
site_data = site_data[,-1]
library(MuMIn) #dredge and avg
#get top models
models = dredge(mod_mean)
library(MuMIn) #dredge and avg
library(MuMIn) #dredge and avg
#get top models
models = dredge(mod_mean)
#create the model
mod_mean = lm(richness~., data=rescaled_mean_data, na.action = "na.fail")
#rescale the data
library(arm) #for standarize
rescaled_mean_data = apply(data[,-1],2, rescale)
#rescale the data
library(arm) #for standarize
rescaled_mean_data = apply(data[,-1],2, rescale)
#rescale the data
library(arm) #for standarize
rescaled_mean_data = apply(data[,-1],2, rescale)
##Models for means#############
# we know richness vs ph usually unimodal around .5, therefore fit to meanpH^2
data = subset_mean[,-1]
###Means correlations...
vars = subset_mean[,-c(1,2)]
knitr::opts_chunk$set(echo = TRUE)
# Richness modelling
rm(list = ls())
cat("\014")
library(dplyr) # everything
library(ggplot2)
library(car) # for vif
library(reshape) # melt
# get the data
site_data =  read.csv("../Data/CompleteSiteLevelVars.csv")
site_data = site_data[,-1]
#mean impute the missing PHI
meanPHI = round(mean(site_data$Pos_Hetero_Index, na.rm = TRUE),2)
x = site_data$Pos_Hetero_Index
x[is.na(x)] = meanPHI
site_data$Pos_Hetero_Index = x
subset_all = site_data%>%select("Site","Richness","Area_ha",
"Northing", "Pos_Hetero_Index","Buffer3",
"no_MSG", "no_NVC","sd_pH","sd_SOM","sd_LBA",
"sd_meandbh","sd_treedensity","area_ratio",
"meandbh","meanph", "meanSOM","meanLBA",
"meantreedensity")
