order(site)
which(site==min(site))
startplot = site[start]
start = which(site==min(site))
startplot = site[start]
startplot
i = 1
siteveg = Data_Yr2_veg%>%(Site == i)
View(Data_Yr2_veg)
siteveg = Data_Yr2_veg%>%(SITE == i)
View(Data_Yr2_veg)
siteveg = Data_Yr2_veg%>%("SITE" == i)
Data = read.csv("../Data/GroundCover.csv")
Data_Yr2 = Data%>%filter(Yr_2 == 2)#%>%select(SITE,PLOT,NEST,COV,Amalgams)
colnames(Data_Yr2) = c("SITE", "PLOT","NEST","Cover","BRC_number","Year")
veg_codes = read.csv("../Data/vegetation_codes.csv")
# the  bryophytes, lichen etc have already been removed from veg codes csv so join this with ground cover to eliminate bryophytes from counts
colnames(veg_codes) = c("Species", "BRC_number")
Data_Yr2_veg = Data_Yr2%>% inner_join(veg_codes)
# now using Dat_Yr2_veg means analysis is carried out without bryophytes
siteveg = Data_Yr2_veg%>%("SITE" == i)
siteveg = Data_Yr2_veg%>%filter(SITE == i)
View(siteveg)
startplot = siteveg%>%filter(PLOT == start)
View(startplot)
?join
?anti_join
test=c(1,2,3,4,5)
test2 = c(1,2,3,4,5,6,7)
anti_join(test,test2)
as.data.frame(test)
as.data.frame(test2)
anti_join(test,test2)
test=c(1,2,3,4,5)
test2 = c(1,2,3,4,5,6,7)
intersect(test,test2)
# calculate SAC starting from least rich plot
#select plot with least amount of species
plotvect = c(1:16)
new_plotvect = plotvect[-start]
new_plotvect
for (i in seq_along(new_plotvect) print(i)
for (i in seq_along(new_plotvect) i
for (i in seq_along(new_plotvect){i}
for (i in seq_along(new_plotvect)
{}
for (i in seq_along(new_plotvect){
i}
for (i in seq_along(new_plotvect)){
i}
for (i in seq_along(new_plotvect)){
print(i)}
for (i in new_plotvect)){
print(i)}
}
for (i in new_plotvect)){
print(i)}
for (i in new_plotvect){
print(i)}
richstart = length(unique(startplot))
View(siteveg)
View(startplot)
beta = anti_join(startplot,nextplot)
i = 1
nextplot = siteveg%>%filter(PLOT == i)
beta = anti_join(startplot,nextplot)
beta
View(startplot)
nextplot
beta = anti_join(startplot,nextplot, by = "Species")
beta
View(nextplot)
anti_join(test2,test1)
test1 = as.data.frame(c(1,2,3,4,5))
test2 = as.data.frame(c(3,4,5,6,7,8,9))
anti_join(test2,test1)
colnames(test1) = "variable"
colnames(test2) = "variable"
anti_join(test2,test1)
group_by
?group_by
i
siteveg>%>group_by(plot())
siteveg>%>group_by(PLOT)
siteveg%>%group_by(PLOT)
restofplots = siteveg%>%filter(SITE !== start)
restofplots = siteveg%>%filter(SITE != start)
restofplots
restofplots%>%group_by(PLOT)%>% inner_join(.,startplot)
tmp = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot)
View(tmp)
tmp2 = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot)
View(tmp2)
tmp2 = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot, by = "Species")
View(tmp2)
restofplots = siteveg%>%filter(SITE != start)
startplot
nos = tmp2%>%group_by(PLOT)%>%summarise(length(unique(Species))
}
nos = tmp2%>%group_by(PLOT)%>%summarise(length(unique(Species))
)
nos = tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species)))
nos
View(restofplots)
restofplots = siteveg%>%filter(PLOT != start)
tmp2 = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot, by = "Species")
nos = tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species)))
nos
max(nos)
nos[,2]
max(nos[,2])
order(nos)
nos
as.data.frame(nos)
order(nos[,2])
order(t(nos[,2]))
t(nos[,2])
t(nos[,2])
nos[,2]
t(nos[,2])
?order
which.max(t(nos[,2]))
test = c(1,2,3,4,5,5,5)
which.max(test)
for (i in restofplots){}
for (i in restofplots){
print(i)
}
for (i in plotvect){
print(i)
}
for (i in se_along(plotvect)){
print(i)
}
for (i in seq_along(plotvect)){
print(i)
}
# calculate SAC starting from least rich plot
#select plot with least amount of species
plotvect = c(1:16)
plotvect = plotvect[-start]
for (i in seq_along(plotvect)){
print(i)
}
for (i in plotvect{
print(i)
}
for (i in plotvect){
print(i)
}
i = 1
sitevector = plotrichness[i,]
View(sitevector)
View(tmp2)
# this just gives the numbers of new species
nos = tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species)))
View(nos)
#find location i.e.plot numer of biggest new no. of species
nextplot = which.max(nos[,2])
# this just gives the numbers of new species
nos = as.data.frame(tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species))))
#find location i.e.plot numer of biggest new no. of species
nextplot = which.max(nos[,2])
f[1] = length(unique(startplot)) # first frequency  is just richness of min plot
f = vector()
f[1] = length(unique(startplot)) # first frequency  is just richness of min plot
# make the next frequency the biggest jump
f[j] = max(nos[,2]) ## what is i here
j = j+1
j = 1
j = j+1
# make the next frequency the biggest jump
f[j] = max(nos[,2]) #next f along, the extra species only
#remove that plot number
plotvect = plotvect[-nextplot]
plotvect
# calculate SAC starting from least rich plot
#select plot with least amount of species
plotvect = c(1:16)
plotvect = plotvect[-start] # take out the plot number of min plot
#remove that plot number
plotvect = plotvect[-nextplot]
# calculate SAC starting from least rich plot
#select plot with least amount of species
plotvect = c(1:16)
plotvect = plotvect[-start] # take out the plot number of min plot
plotvect
plotvect = plotvect[which(plotvect!=nextplot)]
plotvect
# remove that plot species list
restofplots = filter(siteveg, PLOT %in% plotvect
}
# remove that plot species list
restofplots = filter(siteveg, PLOT %in% plotvect)
restofplots
plotvect = c(1:16)
f = vector()
i = 1
sitevector = plotrichness[i,] # vector of richnesses of each plot for site i
start = which(site==min(site)) # take plot with min richness
siteveg = Data_Yr2_veg%>%filter(SITE == i) #get speies data for site i
startplot = siteveg%>%filter(PLOT == start) # get species data for min plot
f[1] = length(unique(startplot)) # first frequency  is just richness of min plot
restofplots = siteveg%>%filter(PLOT != start) # take out the min plot
plotvect = plotvect[-start] # take out the plot number of min plot
j = 1
while (length(plotvect != 0)){
j = j+1
#inner joins of all other plots to min plot, tmp 2 lists all species in
#next plot that were not in min plot.
tmp2 = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot, by = "Species")
# this just gives the numbers of new species
nos = as.data.frame(tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species))))
#find location i.e.plot numer of biggest new no. of species
nextplot = which.max(nos[,2])
# make the next frequency the biggest jump
f[j] = max(nos[,2]) #next f along, the extra species only
#remove that plot number
plotvect = plotvect[which(plotvect!=nextplot)]
# remove that plot species list
restofplots = filter(siteveg, PLOT %in% plotvect)
}
while (length(plotvect != 0)){
browser()
j = j+1
#inner joins of all other plots to min plot, tmp 2 lists all species in
#next plot that were not in min plot.
tmp2 = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot, by = "Species")
# this just gives the numbers of new species
nos = as.data.frame(tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species))))
#find location i.e.plot numer of biggest new no. of species
nextplot = which.max(nos[,2])
# make the next frequency the biggest jump
f[j] = max(nos[,2]) #next f along, the extra species only
#remove that plot number
plotvect = plotvect[which(plotvect!=nextplot)]
# remove that plot species list
restofplots = filter(siteveg, PLOT %in% plotvect)
}
j = 1
while (length(plotvect != 0)){
browser()
j = j+1
#inner joins of all other plots to min plot, tmp 2 lists all species in
#next plot that were not in min plot.
tmp2 = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot, by = "Species")
# this just gives the numbers of new species
nos = as.data.frame(tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species))))
#find location i.e.plot numer of biggest new no. of species
nextplot = which.max(nos[,2])
# make the next frequency the biggest jump
f[j] = max(nos[,2]) #next f along, the extra species only
#remove that plot number
plotvect = plotvect[which(plotvect!=nextplot)]
# remove that plot species list
restofplots = filter(siteveg, PLOT %in% plotvect)
}
f = vector()
# calculate SAC starting from least rich plot
#select plot with least amount of species
plotvect = c(1:16)
plotvect = c(1:16)
f = vector()
sitevector = plotrichness[i,] # vector of richnesses of each plot for site i
start = which(site==min(site)) # take plot with min richness
siteveg = Data_Yr2_veg%>%filter(SITE == i) #get speies data for site i
startplot = siteveg%>%filter(PLOT == start) # get species data for min plot
f[1] = length(unique(startplot)) # first frequency  is just richness of min plot
restofplots = siteveg%>%filter(PLOT != start) # take out the min plot
plotvect = plotvect[-start] # take out the plot number of min plot
j = 1
while (length(plotvect != 0)){
browser()
j = j+1
#inner joins of all other plots to min plot, tmp 2 lists all species in
#next plot that were not in min plot.
tmp2 = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot, by = "Species")
# this just gives the numbers of new species
nos = as.data.frame(tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species))))
#find location i.e.plot numer of biggest new no. of species
nextplot = which.max(nos[,2])
# make the next frequency the biggest jump
f[j] = max(nos[,2]) #next f along, the extra species only
#remove that plot number
plotvect = plotvect[which(plotvect!=nextplot)]
# remove that plot species list
restofplots = filter(siteveg, PLOT %in% plotvect)
}
plotvect = c(1:16)
f = vector()
sitevector = plotrichness[i,] # vector of richnesses of each plot for site i
start = which(site==min(site)) # take plot with min richness
siteveg = Data_Yr2_veg%>%filter(SITE == i) #get speies data for site i
startplot = siteveg%>%filter(PLOT == start) # get species data for min plot
f[1] = length(unique(startplot)) # first frequency  is just richness of min plot
restofplots = siteveg%>%filter(PLOT != start) # take out the min plot
plotvect = plotvect[-start] # take out the plot number of min plot
j = 1
f = vector()
i = 1
sitevector = plotrichness[i,] # vector of richnesses of each plot for site i
start = which(site==min(site)) # take plot with min richness
siteveg = Data_Yr2_veg%>%filter(SITE == i) #get speies data for site i
startplot = siteveg%>%filter(PLOT == start) # get species data for min plot
f[1] = length(unique(startplot)) # first frequency  is just richness of min plot
restofplots = siteveg%>%filter(PLOT != start) # take out the min plot
plotvect = plotvect[-start] # take out the plot number of min plot
j = 1
while (length(plotvect != 0)){
browser()
j = j+1
#inner joins of all other plots to min plot, tmp 2 lists all species in
#next plot that were not in min plot.
tmp2 = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot, by = "Species")
# this just gives the numbers of new species
nos = as.data.frame(tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species))))
#find location i.e.plot numer of biggest new no. of species
nextplot = which.max(nos[,2])
# make the next frequency the biggest jump
f[j] = max(nos[,2]) #next f along, the extra species only
#remove that plot number
plotvect = plotvect[which(plotvect!=nextplot)]
# remove that plot species list
restofplots = filter(siteveg, PLOT %in% plotvect)
}
nos
nextplot
nos[1,1]
nos[1,4]
nos[1,]
nos[,1]
nos[,1][4]
nos[,2]
nos["Plot.x"]
nos
position_dodge()
position
#find location i.e.plot numer of biggest new no. of species
position = which.max(nos[,2])
position
nos[,2]
nos[,1]
nos[,2][6]
nos[,1][6]
plotvect = c(1:16)
f = vector()
i = 1
sitevector = plotrichness[i,] # vector of richnesses of each plot for site i
start = which(site==min(site)) # take plot with min richness
siteveg = Data_Yr2_veg%>%filter(SITE == i) #get speies data for site i
startplot = siteveg%>%filter(PLOT == start) # get species data for min plot
f[1] = length(unique(startplot)) # first frequency  is just richness of min plot
restofplots = siteveg%>%filter(PLOT != start) # take out the min plot
plotvect = plotvect[-start] # take out the plot number of min plot
j = 1
while (length(plotvect != 0)){
browser()
j = j+1
#inner joins of all other plots to min plot, tmp 2 lists all species in
#next plot that were not in min plot.
tmp2 = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot, by = "Species")
# this just gives the numbers of new species
nos = as.data.frame(tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species))))
#find location i.e.plot numer of biggest new no. of species
position = which.max(nos[,2])
nextplot = nos[,1][position]
# make the next frequency the biggest jump
f[j] = max(nos[,2]) #next f along, the extra species only
#remove that plot number
plotvect = plotvect[which(plotvect!=nextplot)]
# remove that plot species list
restofplots = filter(siteveg, PLOT %in% plotvect)
}
nn
n
n
n
n
f
cumsum(f)
plotvect = c(1:16)
f = vector()
i = 1
sitevector = plotrichness[i,] # vector of richnesses of each plot for site i
start = which(site==min(site)) # take plot with min richness
siteveg = Data_Yr2_veg%>%filter(SITE == i) #get speies data for site i
startplot = siteveg%>%filter(PLOT == start) # get species data for min plot
f[1] = length(unique(startplot)) # first frequency  is just richness of min plot
restofplots = siteveg%>%filter(PLOT != start) # take out the min plot
plotvect = plotvect[-start] # take out the plot number of min plot
j = 1
while (length(plotvect != 0)){
browser()
j = j+1
#inner joins of all other plots to min plot, tmp 2 lists all species in
#next plot that were not in min plot.
tmp2 = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot, by = "Species")
# this just gives the numbers of new species
nos = as.data.frame(tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species))))
#find location i.e.plot numer of biggest new no. of species
position = which.max(nos[,2])
nextplot = nos[,1][position]
# make the next frequency the biggest jump
f[j] = max(nos[,2]) #next f along, the extra species only
#remove that plot number
plotvect = plotvect[which(plotvect!=nextplot)]
# remove that plot species list
restofplots = filter(siteveg, PLOT %in% plotvect)
}
View(restofplots)
View(restofplots)
View(tmp2)
nos
plotvect
View(sitevector)
plotvect = c(1:16)
f = vector()
j = 1
sitevector = plotrichness[i,] # vector of richnesses of each plot for site i
start = which(sitevector==min(sitevector)) # take plot with min richness
siteveg = Data_Yr2_veg%>%filter(SITE == i) #get speies data for site i
f[1] = length(unique(startplot)) # first frequency  is just richness of min plot
f[1] = length(unique(startplot)) # first frequency  is just richness of min plot
View(startplot)
f[1] = length(unique(startplot$Species)) # first frequency  is just richness of min plot
restofplots = siteveg%>%filter(PLOT != start) # take out the min plot
plotvect = plotvect[-start] # take out the plot number of min plot
# calculate SAC starting from least rich plot
#select plot with least amount of species
plotvect = c(1:16)
f = vector()
sitevector = plotrichness[i,] # vector of richnesses of each plot for site i
View(sitevector)
start = which(sitevector==min(sitevector)) # take plot with min richness
siteveg = Data_Yr2_veg%>%filter(SITE == i) #get speies data for site i
j = j+1
#inner joins of all other plots to min plot, tmp 2 lists all species in
#next plot that were not in min plot.
tmp2 = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot, by = "Species")
View(tmp2)
# this just gives the numbers of new species
nos = as.data.frame(tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species))))
nos
#find location i.e.plot numer of biggest new no. of species
position = which.max(nos[,2])
nextplot = nos[,1][position]
# make the next frequency the biggest jump
f[j] = max(nos[,2]) #next f along, the extra species only
#remove that plot number
plotvect = plotvect[which(plotvect!=nextplot)]
# remove that plot species list
restofplots = filter(siteveg, PLOT %in% plotvect)
plotvect = c(1:16)
f = vector()
sitevector = plotrichness[i,] # vector of richnesses of each plot for site i
start = which(sitevector==min(sitevector)) # take plot with min richness
siteveg = Data_Yr2_veg%>%filter(SITE == i) #get species data for site i
startplot = siteveg%>%filter(PLOT == start) # get species data for min plot
f[1] = length(unique(startplot$Species)) # first frequency  is just richness of min plot
restofplots = siteveg%>%filter(PLOT != start) # take out the min plot
plotvect = plotvect[-start] # take out the plot number of min plot
j = 1
while (length(plotvect != 0)){
browser()
j = j+1
#inner joins of all other plots to min plot, tmp 2 lists all species in
#next plot that were not in min plot.
tmp2 = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot, by = "Species")
# this just gives the numbers of new species
nos = as.data.frame(tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species))))
#find location i.e.plot numer of biggest new no. of species
position = which.max(nos[,2])
nextplot = nos[,1][position]
# make the next frequency the biggest jump
f[j] = max(nos[,2]) #next f along, the extra species only
#remove that plot number
plotvect = plotvect[which(plotvect!=nextplot)]
# remove that plot species list
restofplots = filter(siteveg, PLOT %in% plotvect)
}
plotvect = c(1:16)
f = vector()
sitevector = plotrichness[i,] # vector of richnesses of each plot for site i
start = which(sitevector==min(sitevector)) # take plot with min richness
siteveg = Data_Yr2_veg%>%filter(SITE == i) #get species data for site i
startplot = siteveg%>%filter(PLOT == start) # get species data for min plot
f[1] = length(unique(startplot$Species)) # first frequency  is just richness of min plot
restofplots = siteveg%>%filter(PLOT != start) # take out the min plot
plotvect = plotvect[-start] # take out the plot number of min plot
j = 1
while (length(plotvect != 0)){
#browser()
j = j+1
#inner joins of all other plots to min plot, tmp 2 lists all species in
#next plot that were not in min plot.
tmp2 = restofplots%>%group_by(PLOT)%>% inner_join(.,startplot, by = "Species")
# this just gives the numbers of new species
nos = as.data.frame(tmp2%>%group_by(PLOT.x)%>%summarise(length(unique(Species))))
#find location i.e.plot numer of biggest new no. of species
position = which.max(nos[,2])
nextplot = nos[,1][position]
# make the next frequency the biggest jump
f[j] = max(nos[,2]) #next f along, the extra species only
#remove that plot number
plotvect = plotvect[which(plotvect!=nextplot)]
# remove that plot species list
restofplots = filter(siteveg, PLOT %in% plotvect)
}
f
cumsum(f)
length(unique(siteveg$Species))
View(restofplots)
