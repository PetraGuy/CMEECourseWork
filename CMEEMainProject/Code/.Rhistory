segments(x1,y1,x2,y2)
coords = c(x2,y2)
return(coords)
}
elbow = function(start, distance, direction){
#browser()
coords = turtle(start, distance, direction)
direction = -1* (pi - direction - pi/4)
distance = 0.95*distance
coords = turtle(coords, distance, direction)
}
spiral = function(start, distance, direction){
coords = turtle(start, distance, direction)
direction = -1* (pi - direction - pi/4)
distance = 0.95*distance
#coords = turtle(coords, distance, direction)
if (distance > 0.1)
spiral(coords,distance,direction)
}
graphics.off()
plot(NA, xlim=c(0,1), ylim=c(0,1), xlab="X", ylab="Y")
spiral_2 = function(start, distance, direction){
coords = turtle(start, distance, direction)
if (distance > 0.1){
#direction = -1* (pi - direction - pi/4)
distance = 0.95*distance
spiral(coords,distance = 0.95*distance, direction = (-1* (pi - direction - pi/4)))
}
}
graphics.off()
plot(NA, xlim=c(0,50), ylim=c(0,50), xlab="X", ylab="Y")
tree = function(start, distance, direction) {
coords = turtle(start, distance, direction)
#coords = turtle(start, distance, direction)
if (distance > 0.1){
distance = 0.65*distance
tree(coords, distance= 0.65*distance, direction = (pi/4) )
tree(coords, distance= 0.65*distance, direction = (3*pi/4) )
}
}
graphics.off()
plot(NA, xlim=c(0,2), ylim=c(0,5), xlab="X", ylab="Y")
fern = function(start, distance, direction) {
coords = turtle(start, distance, direction)
distance1 = distance
distance2 = distance
#coords = turtle(start, distance, direction)
if (distance > 0.1){
distance = 0.9*distance
fern(coords, distance = 0.38*distance1, direction = 3*pi/4 )
fern(coords, distance= 0.87*distance2, direction = (pi/2) )
}
}
plot(NA, xlim=c(0,2), ylim=c(0,5), xlab="X", ylab="Y")
graphics.off()
plot(NA, xlim=c(0,2), ylim=c(0,5), xlab="X", ylab="Y")
fern(c(1,0),1,1)
graphics.off()
plot(NA, xlim=c(0,2), ylim=c(0,10), xlab="X", ylab="Y")
fern(c(1,0),1,1)
graphics.off()
plot(NA, xlim=c(0,2), ylim=c(0,10), xlab="X", ylab="Y")
fern = function(start, distance, direction) {
coords = turtle(start, distance, direction)
distance1 = distance
distance2 = distance
#coords = turtle(start, distance, direction)
if (distance > 0.01){
distance = 0.9*distance
fern(coords, distance = 0.38*distance1, direction = 3*pi/4 )
fern(coords, distance= 0.87*distance2, direction = (pi/2) )
}
}
fern(c(1,0),1,1)
fern = function(start, distance, direction) {
coords = turtle(start, distance, direction)
distance1 = distance
distance2 = distance
#coords = turtle(start, distance, direction)
if (distance > 0.01){
distance = 0.9*distance
fern(coords, distance = 0.38*distance1, direction = 3*pi/4 )
fern(coords, distance= 0.75*distance2, direction = (pi/2) )
}
}
fern2 = function(start, distance, direction) {
coords = turtle(start, distance, direction)
distance1 = distance
distance2 = distance
#coords = turtle(start, distance, direction)
if (distance > 0.01){
distance = 0.9*distance
fern(coords, distance = 0.38*distance1, direction = 3*pi/4 )
fern(coords, distance= 0.75*distance2, direction = (pi/2) )
}
}
graphics.off()
plot(NA, xlim=c(0,2), ylim=c(0,10), xlab="X", ylab="Y")
fern2(c(1,0),1,1)
graphics.off()
plot(NA, xlim=c(0,2), ylim=c(0,10), xlab="X", ylab="Y")
fern2(c(1,0),0.7,1)
knitr::opts_chunk$set(echo = TRUE)
graphics.off()
plot(NA, xlim=c(0,2), ylim=c(0,10), xlab="X", ylab="Y")
fern = function(start, distance, direction) {
coords = turtle(start, distance, direction)
distance1 = distance
distance2 = distance
#coords = turtle(start, distance, direction)
if (distance > 0.01){
distance = 0.9*distance
fern(coords, distance = 0.38*distance1, direction = 3*pi/4 )
fern(coords, distance= 0.87*distance2, direction = (pi/2) )
}
}
fern(c(1,0),1,1)
load("/home/petra/Documents/CMEECourseWork/HPC/Results/Cluster_1207/pg5117/pg5117_cluster_1.rda")
installed.packages()
library(ggraph)
setwd("~/Documents/CMEECourseWork/CMEEMainProject/Code")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
#clear the workspace
rm(list = ls())
cat("\014")
#Get the data , enter input CSV file name here, for data in data directory
inputfile = 'LookUpSiteDescriptorCodes.csv'
fullfile = paste("../Data",inputfile, sep = "/")
LookUpSite = as.tbl(read.csv(fullfile))
inputfile = 'Site_descriptors00-03.csv'
fullfile = paste("../Data",inputfile, sep = "/")
SiteDescriptorsYr2 = as.tbl(read.csv(fullfile))
ScoreSites = OpenSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
# these codes imply open areas, 8 - 10 are coppicing, 86 -93 are larger water features, 105-117 are glades and tracks
#208 - 212 are heaths, marsh, rivers and lakes.
OpenCodesSites = c(8,9,10,24,86,87,90,91,92,93,105,106,107,108,109,110,111,112,113,114,115,116,117,208,209,210,211,212)
OpenSites = SiteDescriptorsYr2 %>% select(SITE, SD_code)%>% filter(SD_code %in% OpenCodesSites)
OpenSites
ScoreSites = OpenSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
max(ScoreSites$no_rows)
mean(ScoreSites$no_rows)
min(ScoreSites$no_rows)
ScoreSites
#or..more concisely!!
ScoresSites = table(OpenSites$SITE)
#or..more concisely!!
ScoresSites = table(OpenSites$SITE, OpenSites$SD_code)
ScoresSites
# these codes imply open areas, 8 - 10 are coppicing, 86 -93 are larger water features, 105-117 are glades and tracks
#208 - 212 are heaths, marsh, rivers and lakes.
OpenCodesSites = c(8,9,10,12,13,14,15,16,17,18,24,54,55,56,57,58,59,61,62,63,64,65,86,87,88,89,90,91,92,93,105,106,107,108,109,110,111,112,113,114,115,116,117,150,151,152,153,157,158,208,209,210,211,212)
OpenSites = SiteDescriptorsYr2 %>% select(SITE, SD_code)%>% filter(SD_code %in% OpenCodesSites)
OpenSites
ggplot(OpenSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,220, by = 10), col = "black", fill = "green")+
labs(title = "Histogram of openness SD codes", x = "SD code")
NegativeCodesSites = c(6,41,143,145,149,213,215)
NegativeSites = SiteDescriptorsYr2 %>% select(SITE, SD_code)%>% filter(SD_code %in% NegativeCodesSites)
NegativeSites
NegativeCodesSites = c(6,41,143,145,149,117,213,215)
NegativeSites = SiteDescriptorsYr2 %>% select(SITE, SD_code)%>% filter(SD_code %in% NegativeCodesSites)
NegativeSites
View(SiteDescriptorsYr2)
View(SiteDescriptorsYr2)
SiteDescriptorsYr2%>%select(SITE, SD_code)
SiteDescriptorsYr2%>%select(SITE, SD_code == 117)
SiteDescriptorsYr2%>%select(SD_code == 117)
SiteDescriptorsYr2%>%filter(SD_code == 117)
SiteDescriptorsYr2%>%filter(SD_code == 213)
SiteDescriptorsYr2%>%filter(SD_code == 215)
# these codes imply open areas, 8 - 10 are coppicing, 86 -93 are larger water features, 105-117 are glades and tracks
#208 - 212 are heaths, marsh, rivers and lakes.
OpenCodesSites = c(8,9,10,12,13,14,15,16,17,18,24,54,55,56,57,58,59,61,62,63,64,65,86,87,88,89,90,91,92,93,105,106,107,108,109,110,111,112,113,114,115,116,150,151,152,153,157,158,208,209,210,211,212)
OpenSites = SiteDescriptorsYr2 %>% select(SITE, SD_code)%>% filter(SD_code %in% OpenCodesSites)
ggplot(OpenSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,220, by = 10), col = "black", fill = "green")+
labs(title = "Histogram of openness SD codes", x = "SD code")
NegativeCodesSites = c(6,41,143,145,149,117,213,215)
NegativeSites = SiteDescriptorsYr2 %>% select(SITE, SD_code)%>% filter(SD_code %in% NegativeCodesSites)
ggplot(NegativeSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,220, by = 10), col = "black", fill = "green")+
labs(title = "Histogram of negative SD codes", x = "SD code")
NegativeCodesSites = c(6,41,143,145,149,117,213,215)
NegativeSites = SiteDescriptorsYr2 %>% select(SITE, SD_code)%>% filter(SD_code %in% NegativeCodesSites)
ggplot(NegativeSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,220, by = 10), col = "black", fill = "green")+
labs(title = "Histogram of negative SD codes", x = "SD code")
SiteDescriptorsYr2%>%filter(SD_code == 215)
NegativeSites = SiteDescriptorsYr2 %>% select(SITE, SD_code)%>% filter(SD_code %in% NegativeCodesSites)
NegativeSites
NegativeSites[SD_code == 215]
View(NegativeSites)
View(NegativeSites)
ggplot(NegativeSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,220, by = 10), col = "black", fill = "green")+
labs(title = "Histogram of negative SD codes", x = "SD code")
ggplot(NegativeSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,230, by = 10), col = "black", fill = "green")+
labs(title = "Histogram of negative SD codes", x = "SD code")
ggplot(NegativeSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,250, by = 10), col = "black", fill = "green")+
labs(title = "Histogram of negative SD codes", x = "SD code")
ggplot(OpenSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,220, by = 10), col = "black", fill = "green")+
labs(title = "Histogram of positive SD codes", x = "SD code")
View(ScoreSites)
# these codes imply open areas, 8 - 10 are coppicing, 86 -93 are larger water features, 105-117 are glades and tracks
#208 - 212 are heaths, marsh, rivers and lakes.
PositiveCodesSites = c(8,9,10,12,13,14,15,16,17,18,24,54,55,56,57,58,59,61,62,63,64,65,86,87,88,89,90,91,92,93,105,106,107,108,109,110,111,112,113,114,115,116,150,151,152,153,157,158,208,209,210,211,212)
PositveSites = SiteDescriptorsYr2 %>% select(SITE, SD_code)%>% filter(SD_code %in% OpenCodesSites)
ggplot(PositveSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,220, by = 10), col = "black", fill = "green")+
labs(title = "Histogram of positive SD codes", x = "SD code")
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
max(SiteHeterogenity$no_rows)
mean(SiteHeterogenity$no_rows)
min(SiteHeterogenity$no_rows)
SiteHeterogenity
#or..more concisely!!
SiteHeterogenity = table(OpenSites$SITE, OpenSites$SD_code)
SiteHeterogenity
SiteHeterogenity
SiteHeterogenity
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
SiteHeterogenity
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
ggplot(PositveSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,220, by = 10), col = "black", fill = "green")+
labs(title = "Histogram of positive SD codes", x = "SD code")
ggplot(SiteDescriptorsYr2, aes(SiteDescriptorsYr2$SD_code)) +
geom_histogram(breaks = seq(1,250, by = 10), col = "black", fill = "green")+
labs(title = "Histogram of entered SD codes", x = "SD code")
NegativeCodesSites = c(6,41,143,145,149,117,213,215)
NegativeSites = SiteDescriptorsYr2 %>% select(SITE, SD_code)%>% filter(SD_code %in% NegativeCodesSites)
ggplot(NegativeSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,250, by = 10), col = "black", fill = "green")+
labs(title = "Histogram of negative SD codes", x = "SD code")
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
max = tableGrob(max(SiteHeterogenity$no_rows))
means = tableGrob(mean(SiteHeterogenity$no_rows))
min = tableGrob(min(SiteHeterogenity$no_rows))
SH = tableGrob(SiteHeterogenity)
grid.arrange(max,min,means,SH, ncol = 2)
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
max = tableGrob(max(SiteHeterogenity$no_rows))
means = tableGrob(mean(SiteHeterogenity$no_rows))
min = tableGrob(min(SiteHeterogenity$no_rows))
SH = tableGrob(head(SiteHeterogenity))
grid.arrange(max,min,means,SH, ncol = 2)
stats =  rbind(max,means,min)
max
max = (max(SiteHeterogenity$no_rows))
means = (mean(SiteHeterogenity$no_rows))
min = (min(SiteHeterogenity$no_rows))
stats =  rbind(max,means,min)
stats
grid.arrange(stats,SH, ncol = 2)
stats =  tableGrob(rbind(max,means,min))
grid.arrange(stats,SH, ncol = 2)
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
max = (max(SiteHeterogenity$no_rows))
means = round(mean(SiteHeterogenity$no_rows), digits = 2)
min = (min(SiteHeterogenity$no_rows))
stats =  tableGrob(rbind(max,means,min))
SH = tableGrob(head(SiteHeterogenity))
grid.arrange(stats,SH, ncol = 2)
View(SiteHeterogenity)
plot(SiteHeterogenity)
barplot(SiteHeterogenity)
barplot(SiteHeterogenity$no_rows)
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
max = (max(SiteHeterogenity$no_rows))
means = round(mean(SiteHeterogenity$no_rows), digits = 2)
min = (min(SiteHeterogenity$no_rows))
stats =  tableGrob(rbind(max,means,min))
p = ggplot(SiteHeterogenity, aes(x = SITE)) +
geom_histogram(breaks = seq(1,105, by = 1), col = "black", fill = "green")+
labs(title = "Heterogenity Indices", x = "Site")
grid.arrange(stats,p, ncol = 2)
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
max = (max(SiteHeterogenity$no_rows))
means = round(mean(SiteHeterogenity$no_rows), digits = 2)
min = (min(SiteHeterogenity$no_rows))
stats =  tableGrob(rbind(max,means,min))
p = ggplot(SiteHeterogenity, aes(x = SITE)) +
geom_histogram(breaks = seq(1,105, by = 1), col = "black", fill = "green")+
labs(title = "Heterogenity Indices", x = "Site")
grid.arrange(stats,p, ncol = 2)
ggplot(SiteHeterogenity, aes(x = SITE, y = no_rows)) +
geom_histogram(breaks = seq(1,105, by = 1), col = "black", fill = "green")+
labs(title = "Heterogenity Indices", x = "Site")
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
max = (max(SiteHeterogenity$no_rows))
means = round(mean(SiteHeterogenity$no_rows), digits = 2)
min = (min(SiteHeterogenity$no_rows))
stats =  tableGrob(rbind(max,means,min))
p = ggplot(data = SiteHeterogenity, aes(x = SITE, y = no_rows)) +
geom_bar(breaks = seq(1,105, by = 1), col = "black", fill = "green")+
labs(title = "Heterogenity Indices", x = "Site")
grid.arrange(stats,p, ncol = 2)
ggplot(data = SiteHeterogenity, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", breaks = seq(1,105, by = 1), col = "black")+
labs(title = "Heterogenity Indices", x = "Site")
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
max = (max(SiteHeterogenity$no_rows))
means = round(mean(SiteHeterogenity$no_rows), digits = 2)
min = (min(SiteHeterogenity$no_rows))
stats =  tableGrob(rbind(max,means,min))
p = ggplot(data = SiteHeterogenity, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", breaks = seq(1,105, by = 1), col = "black")+
labs(title = "Heterogenity Indices", x = "Site")
grid.arrange(stats,p, ncol = 2)
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
max = (max(SiteHeterogenity$no_rows))
means = round(mean(SiteHeterogenity$no_rows), digits = 2)
min = (min(SiteHeterogenity$no_rows))
stats =  tableGrob(rbind(max,means,min))
p = ggplot(data = SiteHeterogenity, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity"),
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
max = (max(SiteHeterogenity$no_rows))
means = round(mean(SiteHeterogenity$no_rows), digits = 2)
min = (min(SiteHeterogenity$no_rows))
stats =  tableGrob(rbind(max,means,min))
p = ggplot(data = SiteHeterogenity, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", col = "black")+
labs(title = "Heterogenity Indices", x = "Site")
grid.arrange(stats,p, ncol = 2)
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
#max = (max(SiteHeterogenity$no_rows))
#means = round(mean(SiteHeterogenity$no_rows), digits = 2)
#min = (min(SiteHeterogenity$no_rows))
#stats =  tableGrob(rbind(max,means,min))
p = ggplot(data = SiteHeterogenity, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", col = "black")+
labs(title = "Heterogenity Indices", x = "Site")
#grid.arrange(stats,p, ncol = 2)
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
#max = (max(SiteHeterogenity$no_rows))
#means = round(mean(SiteHeterogenity$no_rows), digits = 2)
#min = (min(SiteHeterogenity$no_rows))
#stats =  tableGrob(rbind(max,means,min))
ggplot(data = SiteHeterogenity, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", col = "black")+
labs(title = "Heterogenity Indices", x = "Site")
#grid.arrange(stats,p, ncol = 2)
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
#max = (max(SiteHeterogenity$no_rows))
#means = round(mean(SiteHeterogenity$no_rows), digits = 2)
#min = (min(SiteHeterogenity$no_rows))
#stats =  tableGrob(rbind(max,means,min))
ggplot(data = SiteHeterogenity, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", col = "black")+
labs(title = "Heterogenity Indices by Site", x = "Site")
#grid.arrange(stats,p, ncol = 2)
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
#max = (max(SiteHeterogenity$no_rows))
#means = round(mean(SiteHeterogenity$no_rows), digits = 2)
#min = (min(SiteHeterogenity$no_rows))
#stats =  tableGrob(rbind(max,means,min))
ggplot(data = SiteHeterogenity, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", col = "black")+
labs(title = "Positive Heterogenity Indices by Site", x = "Site")
#grid.arrange(stats,p, ncol = 2)
ggplot(NegativeSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,250, by = 10), col = "black", fill = "green")+
labs(title = "Negative Site Descriptor Codes", x = "SD code")
ggplot(SiteDescriptorsYr2, aes(SiteDescriptorsYr2$SD_code)) +
geom_histogram(breaks = seq(1,250, by = 10), col = "black", fill = "green")+
labs(title = "All Site Descriptor Codes", x = "SD code")
ggplot(SiteDescriptorsYr2, aes(SiteDescriptorsYr2$SD_code)) +
geom_histogram(breaks = seq(1,250, by = 10), col = "black", fill = "green")+
labs(title = "All Site Descriptor Codes", x = "SD code", y = "Count")
ggplot(PositveSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,220, by = 10), col = "black", fill = "green")+
labs(title = "Positive Site Descriptor Codes", x = "SD code", y = Count)
ggplot(PositveSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,220, by = 10), col = "black", fill = "green")+
labs(title = "Positive Site Descriptor Codes", x = "SD code", y = "Count")
ggplot(SiteDescriptorsYr2, aes(SiteDescriptorsYr2$SD_code)) +
geom_histogram(breaks = seq(1,250, by = 10), col = "black", fill = "green")+
labs(title = "All Site Descriptor Codes", x = "SD code", y = "Count")
ggplot(SiteDescriptorsYr2, aes(SiteDescriptorsYr2$SD_code)) +
geom_histogram(breaks = seq(1,250, by = 10), col = "black", fill = "green")+
labs(title = "Frequeny of All Site Descriptor Codes", x = "SD code", y = "Count")
ggplot(PositveSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,220, by = 10), col = "black", fill = "green")+
labs(title = "Positive Site Descriptor Codes", x = "SD code", y = "Count in data")
ggplot(NegativeSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,250, by = 10), col = "black", fill = "green")+
labs(title = "Negative Site Descriptor Codes", x = "SD code", y = "Count in data")
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = NegativeSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
ggplot(data = SiteHeterogenity, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", col = "black")+
labs(title = "Negative Heterogenity Indices by Site", x = "Site")
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = NegativeSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
ggplot(data = SiteHeterogenity, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", col = "black")+
labs(title = "Negative Heterogenity Indices by Site", x = "Site", y = "Number of negative codes")
#the heterogeneity index for each site is the sum of the positive codes
SiteHeterogenity = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
#max = (max(SiteHeterogenity$no_rows))
#means = round(mean(SiteHeterogenity$no_rows), digits = 2)
#min = (min(SiteHeterogenity$no_rows))
#stats =  tableGrob(rbind(max,means,min))
ggplot(data = SiteHeterogenity, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", col = "black")+
labs(title = "Positive Heterogenity Indices by Site", x = "Site", y = "Number of positive codes")
#grid.arrange(stats,p, ncol = 2)
View(PositveSites)
View(PositveSites)
#the heterogeneity index for each site is the sum of the positive codes
PositiveHeterogIndices = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
#max = (max(SiteHeterogenity$no_rows))
#means = round(mean(SiteHeterogenity$no_rows), digits = 2)
#min = (min(SiteHeterogenity$no_rows))
#stats =  tableGrob(rbind(max,means,min))
ggplot(data = PositiveHeterogIndices, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", col = "black")+
labs(title = "Positive Heterogenity Indices by Site", x = "Site", y = "Number of positive codes")
#grid.arrange(stats,p, ncol = 2)
View(PositiveHeterogIndices)
View(PositiveHeterogIndices)
#save the idices to merge with the site data
colnames(PositiveHeterogIndices) = c("Site", "Pos_Hetero_Index")
colnames(NegativeHeterogIndices) = c("Site", "Neg_Hetero_Index")
#the heterogeneity index for each site is the sum of the positive codes
NegativeHeterogIndices = NegativeSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
ggplot(data = NegativeHeterogIndices, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", col = "black")+
labs(title = "Negative Heterogenity Indices by Site", x = "Site", y = "Number of negative codes")
#save the idices to merge with the site data
colnames(PositiveHeterogIndices) = c("Site", "Pos_Hetero_Index")
colnames(NegativeHeterogIndices) = c("Site", "Neg_Hetero_Index")
PositiveHeterogIndices = write.csv(PositiveHeterogIndices, "PositiveHeterogIndices.csv")
NegativeHeterogIndices = write.csv(NegativeHeterogIndices, "NegativeHeterogIndices")
#save the idices to merge with the site data
colnames(PositiveHeterogIndices) = c("Site", "Pos_Hetero_Index")
#the heterogeneity index for each site is the sum of the positive codes
PositiveHeterogIndices = PositveSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
#max = (max(SiteHeterogenity$no_rows))
#means = round(mean(SiteHeterogenity$no_rows), digits = 2)
#min = (min(SiteHeterogenity$no_rows))
#stats =  tableGrob(rbind(max,means,min))
ggplot(data = PositiveHeterogIndices, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", col = "black")+
labs(title = "Positive Heterogenity Indices by Site", x = "Site", y = "Number of positive codes")
#grid.arrange(stats,p, ncol = 2)
#the heterogeneity index for each site is the sum of the positive codes
NegativeHeterogIndices = NegativeSites %>% group_by(SITE)%>% summarise(no_rows = length(SITE))
ggplot(data = NegativeHeterogIndices, aes(x = SITE, y = no_rows)) +
geom_bar(stat = "identity", col = "black")+
labs(title = "Negative Heterogenity Indices by Site", x = "Site", y = "Number of negative codes")
#save the idices to merge with the site data
colnames(PositiveHeterogIndices) = c("Site", "Pos_Hetero_Index")
colnames(NegativeHeterogIndices) = c("Site", "Neg_Hetero_Index")
PositiveHeterogIndices = write.csv(PositiveHeterogIndices,"../Data/PositiveHeterogIndices.csv")
NegativeHeterogIndices = write.csv(NegativeHeterogIndices, "../Data/NegativeHeterogIndices")
# these codes imply open areas, 8 - 10 are coppicing, 86 -93 are larger water features, 105-117 are glades and tracks
#208 - 212 are heaths, marsh, rivers and lakes.
PositiveCodesSites = c(8,9,10,12,13,14,15,16,17,18,24,54,55,56,57,58,59,61,62,63,64,65,86,87,88,89,90,91,92,93,105,106,107,108,109,110,111,112,113,114,115,116,150,151,152,153,157,158,208,209,210,211,212)
PositveSites = SiteDescriptorsYr2 %>% select(SITE, SD_code)%>% filter(SD_code %in% PositiveCodesSites)
#dont think this adds anything
ggplot(SiteDescriptorsYr2, aes(SiteDescriptorsYr2$SD_code)) +
geom_histogram(breaks = seq(1,250, by = 10), col = "black", fill = "green")+
labs(title = "Frequeny of All Site Descriptor Codes", x = "SD code", y = "Count")
ggplot(PositveSites, aes(x = SD_code)) +
geom_histogram(breaks = seq(1,220, by = 10), col = "black", fill = "green")+
labs(title = "Positive Site Descriptor Codes", x = "SD code", y = "Count in data")
NegativeCodesSites = c(6,41,143,145,149,117,213,215)
NegativeSites = SiteDescriptorsYr2 %>% select(SITE, SD_code)%>% filter(SD_code %in% NegativeCodesSites)
knitr::opts_chunk$set(echo = FALSE)
rm(list = ls())
cat("\014")
#Input all the ground flora data
Data = read.csv("../Data/AnalysisGroundFloraBothYrsFlat.csv")
View(Data)
View(Data)
#Input all the ground flora data
Data = read.csv("../Data/AnalysisGroundFloraBothYrsFlat.csv")
Data_Yr2 = Data%>%select(Site,Plot,Nest,CoverYr2,AmalgamsYr2)
View(Data_Yr2)
View(Data_Yr2)
seq(9202, 9209, by = 1)
#Input all the ground flora data
Data = read.csv("../Data/AnalysisGroundFloraBothYrsFlat.csv")
Data_Yr2 = Data%>%select(Site,Plot,Nest,CoverYr2,AmalgamsYr2)
#remove bryophytes,include only vegetaion, codes 26, 9202-9209,91017-92099.2, 910 115-920 999, 2 000 070, 2 000 087, 9 101 000 - 9 209 184, 20 000 158 - 20 000 418, 20 000 663, 20 000 944, 20 000 962, 20 000 993, 200 001 104, 200 001 141 - 200 001 191, 200 001 224 - 200 001 290, 200 001 415 - 200 001 439, 200 001 478 - 200 001 491, 200 001 503, 200 001 582 - 200 001 169, 200 001 621 - 200 001 622, 200 001 624 - 200 001 685, 200 001 687 - 200 001 696, 200 004 000.
veg_codes = c(6, seq(9202, 9209, by = 1), seq(91017, 92099, by = 1), 92099.2, seq(910115, 920999, by = 1), seq(2000070, 2000087,by = 1), seq(9101000, 9209184, by = 1), seq(20000158, 20000418, by =1), 20000663, 20000944, 20000962, 20000993, 200001104, seq(200001141, 200001191, by = 1), seq(200001224, 200001290, by = 1), seq(200001415, 200001439, by = 1), seq(200001478, 200001491, by = 1), 200001503, seq(200001582, 200001169, by = 1), seq(200001621, 200001622,by = 1), seq(200001624, 200001685, by = 1), seq(200001687, 200001696, by = 1), 200004000)
seq(5, 10, by = 1)
