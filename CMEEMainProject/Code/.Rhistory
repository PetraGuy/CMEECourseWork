#browser()
for (i in 1:103){
sitedata = data%>%filter(SITE == i)
plot_nest_df = data.frame()
for (j in 1:16){
plotdata = sitedata%>%filter(PLOT == j)
tmp = vector()
for (k in 1:5){
nestdata = plotdata%>%filter(NEST ==k)
tmp = c(tmp, nrow(nestdata))
}
plot_nest_df = rbind(plot_nest_df, tmp)
colnames(plot_nest_df) = c("nest1","nest2","nest3","nest4","nest5")
}
site_list[[i]]= plot_nest_df
}
return(site_list)
}
spec_rich = nest_richness(Data_Yr2_veg)
Data = read.csv("../Data/GroundCover.csv")
Data_Yr2 = Data%>%filter(Yr_2 == 2)#%>%select(SITE,PLOT,NEST,COV,Amalgams)
colnames(Data_Yr2) = c("SITE", "PLOT","NEST","Cover","BRC_number","Year")
veg_codes = read.csv("../Data/vegetation_codes.csv")
colnames(veg_codes) = c("Species", "BRC_number")
Data_Yr2_veg = Data_Yr2%>% inner_join(veg_codes)
# now using Dat_Yr2_veg means analysis is carried out without bryophytes
#Input all the ground flora data
Data = read.csv("../Data/GroundCover.csv")
Data_Yr2 = Data%>%filter(Yr_2 == 2)#%>%select(SITE,PLOT,NEST,COV,Amalgams)
colnames(Data_Yr2) = c("SITE", "PLOT","NEST","Cover","BRC_number","Year")
veg_codes = read.csv("../Data/vegetation_codes.csv")
# the  bryophytes, lichen etc have already been removed from these, so the veg codes csv files is no bryophytes, so need to join this with ground cover to eliminate bryophytes from counts
colnames(veg_codes) = c("Species", "BRC_number")
Data_Yr2_veg = Data_Yr2%>% inner_join(veg_codes)
# now using Dat_Yr2_veg means analysis is carried out without bryophytes
# returns the species richness for each site/plot/nest
# NAs are not counted, these occur for sapling counts which need to be added in to the plot richness.
nest_richness = function(data){
site_list = list()
#browser()
for (i in 1:103){
sitedata = data%>%filter(SITE == i)
plot_nest_df = data.frame()
for (j in 1:16){
plotdata = sitedata%>%filter(PLOT == j)
tmp = vector()
for (k in 1:5){
nestdata = plotdata%>%filter(NEST ==k)
tmp = c(tmp, nrow(nestdata))
}
plot_nest_df = rbind(plot_nest_df, tmp)
colnames(plot_nest_df) = c("nest1","nest2","nest3","nest4","nest5")
}
site_list[[i]]= plot_nest_df
}
return(site_list)
}
spec_rich = nest_richness(Data_Yr2_veg)
# now need to include the NAs and combine them into a plot richness
plot_richness = function(data){
site_matrix = matrix(nrow = 103, ncol = 16)
#browser()
for (i in 1:103){
sitedata = data%>%filter(SITE == i)
plot_nest_df = data.frame()
for (j in 1:16){
plotdata = sitedata%>%filter(PLOT == j)
site_matrix[i,j] = length(unique(plotdata$BRC_number))
}
}
return(site_matrix)
}
plot_rich = plot_richness(Data_Yr2_veg)
write.csv(plot_rich,"../Data/plot_rich.csv")
# just calculates richness found in each wood, no extrapolation.
#d[i] is richness of wood i
basic_richness = function(data){
d = rep(0,103)
for (i in 1:103){
site = data%>%filter(SITE==i)
d[i]  = length(unique(site$BRC_number))
}
return(d)
}
d = basic_richness(Data_Yr2_veg)
## cumulative richness for site 1, for all 16 plots.
##need spec_rich calculated above
cum_rich_all = list()
for ( i in 1:103){
#browser()
site = spec_rich[[i]]
site = as.data.frame(site)
cum_rich_site = data.frame()
for (j in 1:16) {
plot = site[j,]
r = 0
cumrich = rep(0,5)
for (n in 1:5){
r = r + plot[[n]]
cumrich[n] = r
}
cum_rich_site = rbind(cum_rich_site, cumrich)
}
colnames(cum_rich_site) = c("nest1","nest2","nest3","nest4","nest5")
cum_rich_all[[i]] = cum_rich_site
}
data_plots = read.csv("../Data/AnalysisEnvDataLevelPlot.csv"")
data_plots = read.csv("../Data/AnalysisEnvDataLevelPlot.csv")
data_plots = read.csv("../Data/AnalysisEnvDataLevelPlot.csv")
View(data_plots)
View(data_plots)
data_dbh = read.csv/("../Data/dbh_means.csv")
data_dbh = read.csv("../Data/dbh_means.csv")
View(data_dbh)
View(data_dbh)
data_tree_density = read.csv("../Data/tree_density.csv")
View(data_tree_density)
View(data_tree_density)
View(data_plots)
View(data_plots)
View(data_plots)
View(data_plots)
tmp = data_plots[c(1,2,5,7,9,11,12,14)]
View(tmp)
View(tmp)
library(reshape)
t(data_dbh)
colnames(data_dbh)
cols = colnames(data_dbh)
reshape(data_dbh, varying = cols, direction = "long", idvar = "X")
cols = cols[-1]
cols
reshape(data_dbh, varying = cols, direction = "long", idvar = "X")
reshape(data_dbh, varying = c("X1"  "X2"  "X3"  "X4"  "X5"  "X6"  "X7"  "X8"  "X9"  "X10" "X11" "X12" "X13" "X14" "X15" "X16"), direction = "long", idvar = "X")
reshape(data_dbh, varying = c("X1","X2",  "X3",  "X4" , "X5",  "X6" , "X7",  "X8",  "X9",  "X10", "X11", "X12", "X13", "X14", "X15" ,"X16"), direction = "long", idvar = "X")
reshape(data_dbh, varying = cols, direction = "long", idvar = "X", sep = "")
reshape(data_dbh, varying = c(2:17), direction = "long", idvar = "X", sep = "")
reshape(data_dbh, varying = c(2:17), direction = "long", idvar = "X")
df = data_dbh
df = df[-1]
newdf = df[1,]
newdf
t(newdf)
newdf
colnames(newdf) = c("plot1","plot2","plot3","plot4","plot5","plot6","plot7",
"plot8","plot9","plot10","plot11","plot12","plot13","plot14","plot15","plot16")
t(newdf)
data_dbh[3,]
cols = c("plot1","plot2","plot3","plot4","plot5","plot6","plot7",
"plot8","plot9","plot10","plot11","plot12","plot13","plot14","plot15","plot16")
reshape_byhand = function(df){
df = df[-1]
newframe = data.frame()
for (i in 1:16){
temp = df[i,]
colnames(df) = cols
temp = t(temp)
newframe = rbind(newframe,df)
}
return(newframe)
}
reshape_byhand(data_dbh)
reshape_byhand = function(df){
df = df[-1]
newframe = data.frame()
for (i in 1:16){
temp = df[i,]
colnames(df) = cols
temp = t(temp)
newframe = rbind(newframe,temp)
}
return(newframe)
}
reshape_byhand(data_dbh)
reshape_byhand = function(df){
df = df[-1]
newframe = data.frame()
for (i in 1:16){
temp = df[i,]
colnames(temp) = cols
temp = t(temp)
newframe = rbind(newframe,temp)
}
return(newframe)
}
reshape_byhand(data_dbh)
reshape_byhand = function(df){
browser()
df = df[-1]
newframe = data.frame()
for (i in 1:16){
temp = df[i,]
colnames(temp) = cols
temp = t(temp)
newframe = rbind(newframe,temp)
}
return(newframe)
}
reshape_byhand(data_dbh)
temp
temp
newframe
temp
colnames(data_dbh) = c("Site", cols)
reshape(data_dbh, varying = cols, direction = "long", idvar = "Site", sep = "")
Sites = vector()
for (i in 1:103){
r = paste("Site",i, sep = "")
Sites = c(Sites,r)
}
Sites
rownames(data_dbh) = Sites
colnames(data_dbh) = cols
data_dbh$Site = Sites
data_dbh = read.csv("../Data/dbh_means.csv")
colnames(data_dbh) = cols
data_dbh = read.csv("../Data/dbh_means.csv")
cols = c("Site", "plot1","plot2","plot3","plot4","plot5","plot6","plot7",
"plot8","plot9","plot10","plot11","plot12","plot13","plot14","plot15","plot16")
colnames(data_dbh) = cols
data_dbh$Site = Sites
reshape1 = reshape(data_dbh, varying = c(2:17), idvar = "Site", direction = "long")
reshape1 = reshape(data_dbh, varying = c(2:17), idvar = "Site", direction = "long", sep = "")
View(reshape1)
reshape1 = reshape(data_dbh, varying = c(2:17), idvar = "Site",
direction = "long", timevar = "order, sep = "")
reshape_byhand = function(df){
browser()
df = df[-1]
newframe = data.frame()
for (i in 1:16){
temp = df[i,]
colnames(temp) = cols
temp = t(temp)
newframe = rbind(newframe,temp)
}
return(newframe)
}
}
reshape1 = reshape(data_dbh, varying = c(2:17), idvar = "Site",
direction = "long", timevar = "order", sep = "")
View(reshape1)
View(reshape1)
reshape1 = reshape(data_dbh, varying = c(2:17), idvar = "Site",
direction = "long", timevar = "Site", sep = "")
reshape1 = reshape(data_dbh, varying = c(2:17), idvar = "Site",
direction = "long", timevar = "Plot", sep = "")
data_dbh = read.csv("../Data/dbh_means.csv")
reshape(data_dbh, varying = cols, direction = "long", idvar = "Site", sep = "")
tmp = data_dbh[1,c(2:17)]
tmp
as.vector(tmp)
data_dbh_long = data.frame()
data_dbh_long$Site = 1
data_dbh_long$Site = c(1:103)
data_dbh_long
r = data_dbh[1, c(2:17)]
df = rbind(data_dbh_long,r)
df
df = data.frame()
r = t(r)
r
data_dbh_long = rbind(data_dbh_long,r)
adta_dbh_long
data_dbh_long
r = t(data_dbh[2, c(2:17)])
r
data_dbh_long = rbind( data_dbh_long, r)
r
r = as.vector(t(data_dbh[2, c(2:17)]))
r
Site = rep(1,16)
Plot = c(1:16)
tmp = cbind(Site,Plot,r)
tmp
data_dbh_long = rbind(data_dbh_long,r)
for (i in 1:103){
r = t(as.vector(data_dbh[i, c(2:17)])
Site = rep(i,16)
Plot = c(1:16)
tmp = cbind(Site,Plot,r)
data_dbh_long = rbind(data_dbh_long,r)
}
data_dbh_long = data.frame()
for (i in 1:103){
r = t(as.vector(data_dbh[i, c(2:17)]))
Site = rep(i,16)
Plot = c(1:16)
tmp = cbind(Site,Plot,r)
data_dbh_long = rbind(data_dbh_long,r)
}
data_dbh_long = data.frame()
r = t(as.vector(data_dbh[1, c(2:17)]))
Site = rep(i,16)
Plot = c(1:16)
tmp = cbind(Site,Plot,r)
data_dbh_long = rbind(data_dbh_long,r)
data_dbh_long
data_dbh_long = data.frame()
r = t(as.vector(data_dbh[1, c(2:17)]))
Site = rep(i,16)
Site = rep(1,16)
Plot = c(1:16)
tmp = cbind(Site,Plot,r)
tmp
colnames(tmp) = c("Site","Plot","mean_dbh")
tmp
data_dbh_long = data.frame()
data_dbh_long = rbind(data_dbh_long,r)
r = t(as.vector(data_dbh[2, c(2:17)]))
r
r = t(as.vector(data_dbh[2, c(2:17)]))
r
Site = rep(1,16)
Plot = c(1:16)
tmp = cbind(Site,Plot,r)
tmp
colnames(tmp) = c("Site","Plot","mean_dbh")
data_dbh_long = rbind(data_dbh_long,r)
data_dbh_long = data.frame()
r = t(as.vector(data_dbh[1, c(1:17)]))
Site = rep(1,16)
Plot = c(1:16)
tmp = cbind(Site,Plot,r)
tmp = cbind(Site,Plot,r)
r
r = t(as.vector(data_dbh[1, c(1:17)]))
r
r = as.vector(data_dbh[1, c(1:17)])
r
as.vector(as.vector(data_dbh[1, c(1:17)])
)
as.vector(data_dbh[1, c(1:17)])
r = as.vector(t(data_dbh[1, c(2:17)]))
r
Site = rep(1,16)
tmp = cbind(Site,Plot,r)
colnames(tmp) = c("Site","Plot","mean_dbh")
data_dbh_long = rbind(data_dbh_long,r)
data_dbh_long
tmp
data_dbh_long = as.data.frame(rbind(data_dbh_long,r))
data_dbh_long
data_dbh_long = data.frame()
r = as.vector(t(data_dbh[1, c(2:17)]))
tmp = as.data.frame(cbind(Site,Plot,r))
tmp
colnames(tmp) = c("Site","Plot","mean_dbh")
data_dbh_long = as.data.frame(rbind(data_dbh_long,r))
data_dbh_long
data_dbh_long = data.frame()
tmp
data_dbh_long = rbind(data_dbh_long,tmp)
data_dbh_long
data_dbh_long = data.frame()
Plot = c(1:16)
for (i in 1:103){
r = as.vector(t(data_dbh[1, c(2:17)]))
Site = rep(1,16)
tmp = as.data.frame(cbind(Site,Plot,r))
colnames(tmp) = c("Site","Plot","mean_dbh")
data_dbh_long = rbind(data_dbh_long,tmp)
}
View(data_dbh_long)
View(data_dbh_long)
data_dbh_long = data.frame()
Plot = c(1:16)
for (i in 1:103){
r = as.vector(t(data_dbh[i, c(2:17)]))
Site = rep(i,16)
tmp = as.data.frame(cbind(Site,Plot,r))
colnames(tmp) = c("Site","Plot","mean_dbh")
data_dbh_long = rbind(data_dbh_long,tmp)
}
View(data_dbh_long)
View(data_dbh_long)
data_density_long = data.frame()
Plot = c(1:16)
for (i in 1:103){
r = as.vector(t(data_tree_density[i, c(2:17)]))
Site = rep(i,16)
tmp = as.data.frame(cbind(Site,Plot,r))
colnames(tmp) = c("Site","Plot","mean_dbh")
data_dbh_long = rbind(data_density_long,tmp)
}
View(data_density_long)
data_density_long = data.frame()
r = as.vector(t(data_tree_density[1, c(2:17)]))
Site = rep(1,16)
tmp = as.data.frame(cbind(Site,Plot,r))
tmp
colnames(tmp) = c("Site","Plot","tree density")
data_dbh_long = rbind(data_density_long,tmp)
r = as.vector(t(data_tree_density[2, c(2:17)]))
Site = rep(2,16)
tmp = as.data.frame(cbind(Site,Plot,r))
tmp
colnames(tmp) = c("Site","Plot","tree density")
data_dbh_long = rbind(data_density_long,tmp)
data_dbh_long = data.frame()
Plot = c(1:16)
for (i in 1:103){
r = as.vector(t(data_dbh[i, c(2:17)]))
Site = rep(i,16)
tmp = as.data.frame(cbind(Site,Plot,r))
colnames(tmp) = c("Site","Plot","mean_dbh")
data_desnsity_long = rbind(data_density_long,tmp)
}
View(data_desnsity_long)
data_dbh_long = data.frame()
data_dbh_long = data.frame()
Plot = c(1:16)
for (i in 1:103){
r = as.vector(t(data_dbh[i, c(2:17)]))
Site = rep(i,16)
tmp = as.data.frame(cbind(Site,Plot,r))
colnames(tmp) = c("Site","Plot","mean_dbh")
data_density_long = rbind(data_density_long,tmp)
}
data_density_long = data.frame()
Plot = c(1:16)
for (i in 1:103){
r = as.vector(t(data_tree_density[2, c(2:17)]))
Site = rep(2,16)
tmp = as.data.frame(cbind(Site,Plot,r))
colnames(tmp) = c("Site","Plot","tree density")
data_density_long = rbind(data_density_long,tmp)
}
tmp_plot_vars = data_plots[c(1,2,5,7,9,11,12,14)]
View(tmp_plot_vars)
all_plot_vars = inner_join(tmp_plot_vars,data_dbh_long)
View(tmp_plot_vars)
View(tmp_plot_vars)
data_density_long = data.frame()
Plot = c(1:16)
for (i in 1:103){
r = as.vector(t(data_tree_density[2, c(2:17)]))
Site = rep(2,16)
tmp = as.data.frame(cbind(Site,Plot,r))
colnames(tmp) = c("Site","Plot","tree density")
data_density_long = rbind(data_density_long,tmp)
}
View(data_density_long)
View(data_density_long)
View(data_dbh)
data_dbh_long = data.frame()
Plot = c(1:16)
for (i in 1:103){
r = as.vector(t(data_dbh[i, c(2:17)]))
Site = rep(i,16)
tmp = as.data.frame(cbind(Site,Plot,r))
colnames(tmp) = c("Site","Plot","mean_dbh")
data_dbh_long = rbind(data_dbh_long,tmp)
}
View(data_dbh_long)
View(data_dbh_long)
all_plot_vars = inner_join(tmp_plot_vars,data_dbh_long)
View(all_plot_vars)
View(all_plot_vars)
all_plot_vars = inner_join(all_plot_vars,data_density_long)
all_plot_vars = data.frame()
all_plot_vars = inner_join(tmp_plot_vars,data_density_long)
data_density_long = data.frame()
Plot = c(1:16)
for (i in 1:103){
r = as.vector(t(data_tree_density[i, c(2:17)]))
Site = rep(i,16)
tmp = as.data.frame(cbind(Site,Plot,r))
colnames(tmp) = c("Site","Plot","tree density")
data_density_long = rbind(data_density_long,tmp)
}
View(data_density_long)
View(data_density_long)
all_plot_vars = data.frame()
all_plot_vars = inner_join(tmp_plot_vars,data_density_long)
all_plot_vars = inner_join(all_plot_vars,data_dbh_long)
#plot_richness come from ExploringNests
data_rich = read.csv("../Data/plot_rich.csv")
View(data_rich)
data_rich_long = data.frame()
Plot = c(1:16)
for (i in 1:103){
r = as.vector(t(data_rich[i, c(2:17)]))
Site = rep(i,16)
tmp = as.data.frame(cbind(Site,Plot,r))
colnames(tmp) = c("Site","Plot","mean_dbh")
data_rich_long = rbind(data_rich_long,tmp)
}
View(data_rich_long)
View(data_rich_long)
View(data_rich_long)
View(data_rich_long)
data_rich_long = data.frame()
Plot = c(1:16)
for (i in 1:103){
r = as.vector(t(data_rich[i, c(2:17)]))
Site = rep(i,16)
tmp = as.data.frame(cbind(Site,Plot,r))
colnames(tmp) = c("Site","Plot","plot_richness")
data_rich_long = rbind(data_rich_long,tmp)
}
View(data_rich_long)
View(data_rich_long)
all_plot_vars = inner_join(all_plot_vars,data_rich_long)
View(all_plot_vars)
View(all_plot_vars)
site1 = all_plot_vars%>%filter(Site == 1)
plot(site1$LiveBasalAreaYr2,site1$plot_richness)
plot(site1$mean_dbh,site1$plot_richness)
plot(site1$`tree density`,site1$plot_richness)
plot(site1$pHYr2,site1$plot_richness)
plot(site1$SOMYr2,site1$plot_richness)
