geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")+
geom_text(data = dat_text, mapping = aes(x = -Inf, y = Inf),  label = corrs)
ggplot(melted, aes(x = value, y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")+
geom_text(
data    = dat_text,
mapping = aes(x = -Inf, y = -Inf, label = corrs),
hjust   = -0.1,
vjust   = -1
)
as.data.frame(round(apply(SitedataZ_vars[-17],2, function(x) dcor(x,SitedataZ$slope)), digits = 2))
SitedataZ = as.data.frame(SitedataZ[-c(6,15)])
outliers = c(78,97)
SitedataZ = SitedataZ%>%filter(Pos_Hetero_Index != outliers)
SitedataZ = as.data.frame(SitedataZ[-c(6,15)])
outliers = c(78,97)
SitedataZ = SitedataZ%>%filter(PHI != outliers)
melted = melt(SitedataZ, id.vars = "slope")
ggplot(melted, aes(x = value, y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")
SitedataZ_vars = as.data.frame(SitedataZ_vars[-c(6,15)])
SitedataZ_vars = as.data.frame(SitedataZ_vars[-c(6,15)])
outliers = c(78,97)
SitedataZ_vars = SitedataZ_vars%>%filter(PHI != outliers)
melted = melt(SitedataZ_vars[-15], id.vars = "slope")
SitedataZ_vars = as.data.frame(SitedataZ_vars[-c(6,15)])
outliers = c(78,97)
SitedataZ_vars = SitedataZ_vars%>%filter(PHI != outliers)
melted = melt(SitedataZ_vars], id.vars = "slope")
SitedataZ_vars = as.data.frame(SitedataZ_vars[-c(6,15)])
outliers = c(78,97)
SitedataZ_vars = SitedataZ_vars%>%filter(PHI != outliers)
melted = melt(SitedataZ_vars, id.vars = "slope")
# first look for response of z to the variables
SitedataZ_vars = as.data.frame(SitedataZ[-1])
melted = melt(SitedataZ_vars, id.vars = "slope")
corrs = round(apply(SitedataZ_vars[-17],2, function(x) dcor(x,SitedataZ$slope)), digits = 2)
vars = c("PHI","Buffer","Num_NVC","sd_pH",
"sd_SOM" , "num_MSG","sd_LBA",  "sd_meanDBH",
"sd_TD", "no_trees","meanDBH" , "meanph" ,
"meanSOM" , "meanLBA" ,"meanTD", "area_ratio" )
dat_text = as.data.frame(corrs,vars)
ggplot(melted, aes(x = value, y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")+
geom_text(
data    = dat_text,
mapping = aes(x = -Inf, y = -Inf, label = corrs),
hjust   = -0.1,
vjust   = -1
)
as.data.frame(round(apply(SitedataZ_vars[-17],2, function(x) dcor(x,SitedataZ$slope)), digits = 2))
SitedataZ_vars = as.data.frame(SitedataZ_vars[-c(6,15)])
outliers = c(78,97)
SitedataZ_vars = SitedataZ_vars%>%filter(PHI != outliers)
melted = melt(SitedataZ_vars, id.vars = "slope")
ggplot(melted, aes(x = value, y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")
as.data.frame(round(apply(SitedataZ_vars[-15],2, function(x) dcor(x,SitedataZ$slope)), digits = 2))
as.data.frame(round(apply(SitedataZ_vars[-12],2, function(x) dcor(x,SitedataZ$slope)), digits = 2))
#Get site vars and nest slopes
AllSiteVars = read.csv("../Data/CompleteSiteLevelVars.csv")
nestdata = readRDS("nest_mixed_model_fits.RDS")
#All site vars has some cols we know are not useful, delete these now
colnames(AllSiteVars)
todelete = c(1,3,4,5,6,7,8,9,11,12,14,23,24,25,26,27,28,29,30)
Sitevars = AllSiteVars[-todelete]
colnames(Sitevars) = c("Site","PHI","Buffer","Num_NVC","sd_pH", "sd_SOM" , "num_MSG","sd_LBA",
"sd_meanDBH", "sd_TD", "no_trees","meanDBH" , "meanph" , "meanSOM" , "meanLBA" ,
"meanTD", "area_ratio" )
#take site and slope from nestdata
NestSlope = nestdata[-c(2,4,5)]
#join to SiteData
SitedataZ = inner_join(Sitevars,NestSlope)
SitedataZ[is.na(SitedataZ)] = 0
# first look for response of z to the variables
SitedataZ_vars = as.data.frame(SitedataZ[-1])
melted = melt(SitedataZ_vars, id.vars = "slope")
corrs = round(apply(SitedataZ_vars[-17],2, function(x) dcor(x,SitedataZ$slope)), digits = 2)
vars = c("PHI","Buffer","Num_NVC","sd_pH",
"sd_SOM" , "num_MSG","sd_LBA",  "sd_meanDBH",
"sd_TD", "no_trees","meanDBH" , "meanph" ,
"meanSOM" , "meanLBA" ,"meanTD", "area_ratio" )
dat_text = as.data.frame(corrs,vars)
ggplot(melted, aes(x = value, y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")+
geom_text(
data    = dat_text,
mapping = aes(x = -Inf, y = -Inf, label = corrs),
hjust   = -0.1,
vjust   = -1
)
as.data.frame(round(apply(SitedataZ_vars[-17],2, function(x) dcor(x,SitedataZ$slope)), digits = 2))
SitedataZ_vars = as.data.frame(SitedataZ_vars[-c(6,15)])
outliers = c(78,97)
SitedataZ_vars = SitedataZ_vars%>%filter(PHI != outliers)
melted = melt(SitedataZ_vars, id.vars = "slope")
ggplot(melted, aes(x = value, y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")
as.data.frame(round(apply(SitedataZ_vars[-15],2, function(x) dcor(x,SitedataZ$slope)), digits = 2))
as.data.frame(round(apply(SitedataZ_vars[-15],2, function(x) dcor(x,SitedataZ_vars$slope)), digits = 2))
SitedataZ_vars[-15]%>%correlate(method = "kendall")%>%network_plot(min_cor = 0.3)
install.packages("corrplot")
library(corrplot)
corrplot.mixed(cor(SitedataZ_vars[-15]), order = "hclust",tl.col="black")"
corrplot.mixed(cor(SitedataZ_vars[-15]), order = "hclust",tl.col="black")"
corrplot.mixed(cor(SitedataZ_vars[-15]), order = "hclust",tl.col="black")
ggcorr(SitedataZ_vars[-15], nbreaks=8, palette='RdGy', label=TRUE, label_size=5, label_color='white')
ggcorr(SitedataZ_vars[-15], nbreaks=8, palette='RdGy', label=TRUE, label_size=5, label_color='white')
SitedataZ_vars[-15]%>%correlate(method = "kendall")%>%network_plot(min_cor = 0.3)
ggcorr(SitedataZ_vars[-15], nbreaks=8, palette='RdGy', label=TRUE, label_size=5, label_color='white')
SitedataZ_vars[-15]%>%correlate(method = "kendall")%>%network_plot(min_cor = 0.5)
SitedataZ_vars[-15]%>%correlate(method = "kendall")%>%network_plot(min_cor = -0.5)
SitedataZ_vars[-15]%>%correlate(method = "kendall")%>%network_plot(min_cor = 0.5)
ggcorr(SitedataZ_vars[-15], method  = "kendal", nbreaks=8, palette='RdGy', label=TRUE, label_size=5, label_color='white')+
theme(axis.text.x=element_text(angle = -90, hjust = 0))
corrs = round(apply(SitedataZ_vars[-17],2, function(x) dcor(x,SitedataZ$slope)), digits = 2)
corrs = round(apply(SitedataZ_vars[-15],2, function(x) dcor(x,SitedataZ$slope)), digits = 2)
corrs = round(apply(SitedataZ_vars[-15],2, function(x) dcor(x,SitedataZ_vars$slope)), digits = 2)
melted_cors = melt(corrs)
View(melted_cors)
corrs = round(apply(SitedataZ_vars[-15],2, function(x) dcor(x,SitedataZ_vars$slope)), digits = 2)
corrs
cormat = round(cor(SitedataZ_vars[-15]),2)
melted_cors = melt(cormat)
melted_cors
cormat = round(cor(SitedataZ_vars[-15]),2)
melted_cors = melt(cormat)
ggplot(melted_cors, aes(x=X1, y=X2, fill=value))+
geom_tile()
cormat_lwr = cormat[upper.tri(cormat)] =NA
cormat = round(cor(SitedataZ_vars[-15]),2)
cormat_lwr = cormat[upper.tri(cormat)] =NA
melted_cors = melt(cormat_lwr)
ggplot(melted_cors, aes(x=X1, y=X2, fill=value))+
geom_tile()+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
cormat = round(cor(SitedataZ_vars[-15]),2)
cormat_lwr = cormat[upper.tri(cormat)] =NA
View(cormat)
View(melted_cors)
cormat = round(cor(SitedataZ_vars[-15]),2)
cormat_up = cormat[lower.tri(cormat)] =NA
melted_cors = melt(cormat_up)
View(melted_cors)
cormat = round(cor(SitedataZ_vars[-15]),2)
cormat_up = cormat[lower.tri(cormat)] =NA
View(melted_cors)
cormat_up
cormat = round(cor(SitedataZ_vars[-15]),2)
cormat_up = cormat[lower.tri(cormat)] = NA
View(cormat)
View(cormat)
View(cormat)
SitedataZ_vars = as.data.frame(SitedataZ_vars[-c(6,15)])
outliers = c(78,97)
SitedataZ_vars = SitedataZ_vars%>%filter(PHI != outliers)
melted = melt(SitedataZ_vars, id.vars = "slope")
SitedataZ_vars = as.data.frame(SitedataZ_vars[-c(6,15)])
outliers = c(78,97)
SitedataZ_vars = SitedataZ_vars%>%filter(PHI != outliers)
melted = melt(SitedataZ_vars, id.vars = "slope")
knitr::opts_chunk$set(echo = FALSE)
rm(list = ls())
cat("\014")
library(dplyr)
library(ggplot2)
library(visreg)
library(car) #for vif
library(GGally) # for ggpairs
library(gridExtra)
library(tidyr)
library(reshape)
library(energy)
library(corrplot)
#Get site vars and nest slopes
AllSiteVars = read.csv("../Data/CompleteSiteLevelVars.csv")
nestdata = readRDS("nest_mixed_model_fits.RDS")
#All site vars has some cols we know are not useful, delete these now
colnames(AllSiteVars)
todelete = c(1,3,4,5,6,7,8,9,11,12,14,23,24,25,26,27,28,29,30)
Sitevars = AllSiteVars[-todelete]
colnames(Sitevars) = c("Site","PHI","Buffer","Num_NVC","sd_pH", "sd_SOM" , "num_MSG","sd_LBA",
"sd_meanDBH", "sd_TD", "no_trees","meanDBH" , "meanph" , "meanSOM" , "meanLBA" ,
"meanTD", "area_ratio" )
#take site and slope from nestdata
NestSlope = nestdata[-c(2,4,5)]
#join to SiteData
SitedataZ = inner_join(Sitevars,NestSlope)
SitedataZ[is.na(SitedataZ)] = 0
# first look for response of z to the variables
SitedataZ_vars = as.data.frame(SitedataZ[-1])
melted = melt(SitedataZ_vars, id.vars = "slope")
ggplot(melted, aes(x = value, y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")+
)
# first look for response of z to the variables
SitedataZ_vars = as.data.frame(SitedataZ[-1])
melted = melt(SitedataZ_vars, id.vars = "slope")
ggplot(melted, aes(x = value, y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")+
# first look for response of z to the variables
SitedataZ_vars = as.data.frame(SitedataZ[-1])
melted = melt(SitedataZ_vars, id.vars = "slope")
ggplot(melted, aes(x = value, y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")
as.data.frame(round(apply(SitedataZ_vars[-17],2, function(x) dcor(x,SitedataZ$slope)), digits = 2))
SitedataZ_vars = as.data.frame(SitedataZ_vars[-c(6,15)])
outliers = c(78,97)
SitedataZ_vars = SitedataZ_vars%>%filter(PHI != outliers)
melted = melt(SitedataZ_vars, id.vars = "slope")
ggplot(melted, aes(x = value, y = slope))+
geom_point()+
geom_smooth(method = loess)+
facet_wrap(~variable, scales = "free")
as.data.frame(round(apply(SitedataZ_vars[-15],2, function(x) dcor(x,SitedataZ_vars$slope)), digits = 2))
cormat = round(cor(SitedataZ_vars[-15]),2)
cormat_up = cormat[lower.tri(cormat)] = NA
melted_cors = melt(cormat_up)
ggplot(melted_cors, aes(x=X1, y=X2, fill=value))+
geom_tile()+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
cormat
melted_cors = melt(cormat)
melted_cors
ggplot(melted_cors, aes(x=X1, y=X2, fill=value))+
geom_tile()+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
View(melted_cors)
View(cormat)
cormat = round(cor(SitedataZ_vars[-15]),2)
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
upper_tri <- get_upper_tri(cormat)
melted_cormat <- melt(upper_tri, na.rm = TRUE)
# Heatmap
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
cormat = round(cor(SitedataZ_vars[-15]),2)
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
upper_tri <- get_upper_tri(cormat)
melted_cormat <- melt(upper_tri, na.rm = TRUE)
# Heatmap
ggplot(data = melted_cormat, aes(X1, X2, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
cormat = round(cor(SitedataZ_vars[-15]),2)
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
cormat = round(cor(SitedataZ_vars[-15]),2)
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
ggplot(data = melted_cormat, aes(x=X11, y=X2, fill=value)) +
geom_tile()
cormat = round(cor(SitedataZ_vars[-15]),2)
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
ggplot(data = melted_cormat, aes(x=X1, y=X2, fill=value)) +
geom_tile()
View(melted_cormat)
cormat = round(cor(SitedataZ_vars[-15]),2)
melted_cormat = melt(cormat)
ggplot(data = melted_cormat, aes(x=X1, y=X2, fill=value)) +
geom_tile()
cormat = round(cor(SitedataZ_vars[-15]),2)
melted_cormat = melt(cormat)
ggplot(data = melted_cormat, aes(x=X1, y=X2, fill=value)) +
geom_tile()+
geom_text(aes(Var2, Var1, label = value), color = "black", size = 4) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.6, 0.7),
legend.direction = "horizontal")+
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
cormat = round(cor(SitedataZ_vars[-15]),2)
melted_cormat = melt(cormat)
ggplot(data = melted_cormat, aes(x=X1, y=X2, fill=value)) +
geom_tile()+
geom_text(aes(X2, X1, label = value), color = "black", size = 4) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.6, 0.7),
legend.direction = "horizontal")+
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
cormat = round(cor(SitedataZ_vars[-15], method = "kendall"),2)
melted_cormat = melt(cormat)
ggplot(data = melted_cormat, aes(x=X1, y=X2, fill=value)) +
geom_tile()+
geom_text(aes(X2, X1, label = value), color = "black", size = 4) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.6, 0.7),
legend.direction = "horizontal")+
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
cormat = round(cor(SitedataZ_vars[-15], method = "kendall"),2)
reorder_cormat <- function(cormat){
# Use correlation between variables as distance
dd <- as.dist((1-cormat)/2)
hc <- hclust(dd)
cormat <-cormat[hc$order, hc$order]
}
cormat <- reorder_cormat(cormat)
upper_tri <- get_upper_tri(cormat)
# Melt the correlation matrix
melted_cormat <- melt(upper_tri, na.rm = TRUE)
# Create a ggheatmap
ggheatmap <- ggplot(melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+ # minimal theme
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
cormat = round(cor(SitedataZ_vars[-15], method = "kendall"),2)
reorder_cormat <- function(cormat){
# Use correlation between variables as distance
dd <- as.dist((1-cormat)/2)
hc <- hclust(dd)
cormat <-cormat[hc$order, hc$order]
}
cormat <- reorder_cormat(cormat)
upper_tri <- get_upper_tri(cormat)
# Melt the correlation matrix
melted_cormat <- melt(upper_tri, na.rm = TRUE)
# Create a ggheatmap
ggheatmap <- ggplot(melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+ # minimal theme
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
print(ggheatmap)
cormat = round(cor(SitedataZ_vars[-15], method = "kendall"),2)
reorder_cormat <- function(cormat){
# Use correlation between variables as distance
dd <- as.dist((1-cormat)/2)
hc <- hclust(dd)
cormat <-cormat[hc$order, hc$order]
}
cormat <- reorder_cormat(cormat)
upper_tri <- get_upper_tri(cormat)
# Melt the correlation matrix
melted_cormat <- melt(upper_tri, na.rm = TRUE)
# Create a ggheatmap
ggheatmap <- ggplot(melted_cormat, aes(X2, X1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+ # minimal theme
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
print(ggheatmap)
SitedataZ_vars[-15]%>%correlate(method = "kendall")%>%network_plot(min_cor = 0.5)
SitedataZ_vars[-15]%>%correlate(method = "kendall")%>%network_plot(min_cor = 0.3)
ggpairs(SitedataZ_vars[-15], axisLabels="none",
lower = list(continuous="smooth"),
diag="blankDiag",
upper = list(corSize=2,axisLabels='show'))+
theme(legend.position = "none",
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.border = element_rect(linetype = "dashed", colour = "black", fill = NA)
ggpairs(SitedataZ_vars[-15], axisLabels="none",
lower = list(continuous="smooth"),
diag="blankDiag",
upper = list(corSize=2,axisLabels='show'))+
theme(legend.position = "none",
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.border = element_rect(linetype = "dashed", colour = "black", fill = NA))
ggpairs(SitedataZ_vars[-15], axisLabels="none",
lower = list(continuous="smooth"),
diag="blankDiag",
upper = list(corSize=2,axisLabels='show'))+
theme(legend.position = "none",
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
panel.border = element_rect(linetype = "dashed", colour = "black", fill = NA))
SitedataZ_vars[-15] %>%
focus( mirror = TRUE) %>%
rearrange(absolute = FALSE) %>%
shave() %>%
rplot()
SitedataZ_vars[-15] %>%
rearrange(absolute = FALSE) %>%
shave() %>%
rplot()
SitedataZ_vars[-15] %>%
shave() %>%
rplot()
?cor
cor = cor(SitedataZ_vars[-15], method = "kendall")
cor%>%
shave() %>%
rplot()
cor = as.data.frame(cor(SitedataZ_vars[-15], method = "kendall"))
cor%>%
shave() %>%
rplot()
?shave
PCA(SitedataZ_vars[-15], scale.unit = TRUE, ncp = 11, graph = FALSE)
library(factoextra)
PCA(SitedataZ_vars[-15], scale.unit = TRUE, ncp = 11, graph = FALSE)
install.packages("factomine")
install.packages("factoMineR")
install.packages("FactoMineR")
install.packages("factoextra")
library(factoextra)
library(FactoMineR)
PCA(SitedataZ_vars[-15], scale.unit = TRUE, ncp = 11, graph = FALSE)
var = get_pca_var(physical_PCA)
pc = PCA(SitedataZ_vars[-15], scale.unit = TRUE, ncp = 11, graph = FALSE)
var = get_pca_var(pc)
eig.val_physical = get_eigenvalue(pc)
eig.val_physical
fviz_eig(pc, addlabels = TRUE, ylim = c(0,30))
fviz_pca_var(pc, col.var = "cos2", repel = TRUE)
corrplot(var$cos2)
