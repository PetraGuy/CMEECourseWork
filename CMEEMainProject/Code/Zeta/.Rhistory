geom_smooth(method = lm)
data8 = as.data.frame(cbind(CompleteSiteLevelvars$Pos_Hetero_Index, r))
colnames(data8) = c("PHI","r")
data8 = data8[-c(80,5,78),]
ggplot(data = data8, aes(x = r, y = PHI))+
geom_point()+
geom_smooth(method = lm)
data9 = as.data.frame(cbind(CompleteSiteLevelvars$no_NVC, r))
colnames(data9) = c("no_NVC","A")
ggplot(data = data9, aes(x = r, y = no_NVC))+
geom_point()+
geom_smooth(method = lm)
r = vector()
for( i in 1:103){
z = emp_zetas[,i]
r[i] = (z[1]-z[2])/z[1]
}
data7 = as.data.frame(cbind(Richness,r))
data7 = data7[,-1]
colnames(data7) = c("Richness","r")
ggplot(data = data7, aes(x = r, y = Richness))+
geom_point()+
geom_smooth(method = lm)
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(ggplot2)
rm(list = ls())
cat("\014")
emp_zetas = readRDS("empirical_zetas.RDS")
modelled_coefs = readRDS("zeta_coefficients.RDS")
modelled_zetas = readRDS("modelled_zetas.RDS")
ground_flora = read.csv("../../Data/GroundCover.csv")
ground_flora = ground_flora%>%filter(Yr_2 == 2)
veg_codes = read.csv("../../Data/vegetation_codes.csv")
colnames(ground_flora) = c("SITE", "PLOT","NEST","Cover","BRC_number","Year")
colnames(veg_codes) = c("Species", "BRC_number")
flora = ground_flora%>% inner_join(veg_codes)
Richness = read.csv("../../data/SiteRichness.csv")
CompleteSiteLevelvars = read.csv("../../Data/CompleteSiteLevelVars.csv")
r = vector()
for( i in 1:103){
z = emp_zetas[,i]
r[i] = (z[1]-z[2])/z[1]
}
data7 = as.data.frame(cbind(Richness,r))
data7 = data7[,-1]
colnames(data7) = c("Richness","r")
ggplot(data = data7, aes(x = r, y = Richness))+
geom_point()+
geom_smooth(method = lm)
diff_exp = vector()
diff_pwr = vector()
for (i in 1:103){
mod_z_exp = modelled_zetas[[1]][1,i]
mod_z_pwr = modelled_zetas[[3]][1,i]
z_emp = emp_zetas[1,i]
diff_exp[i] = z_emp - mod_z_exp
diff_pwr[i] = z_emp - mod_z_pwr
}
data = as.data.frame(cbind(diff_exp, diff_pwr))
ggplot(stack(data), aes(x = ind, y = values))+
geom_boxplot(width = 0.3, fill = "grey")+
ylab("Difference in empirical and modelled values")+
xlab("Model type")+
ggtitle("The empircal - modelled value for zeta_1" )
sites_to_remove = c(5,8,24,44,62,64,67,94)
subset_emp_zeta = emp_zetas[,-sites_to_remove]
m = list()
cor = vector()
pred = data.frame()
sites = c(1:4,6,7,9:23,25:43,45:61,63,65,66,68:93,95:103)
for (i in sites){
#browser
colname = paste("Site",i)
y = subset_emp_zeta[,colname]
nas = sum(is.na(y))
l = 16 - nas
y = y[c(1:l)]
x = seq(from = 1, to = l, by = 1)
m[[i]] = nls(y~c*(exp(x^(a)))*exp(b*x), start = list(a = -2, b = -0.1, c = 10))
p = predict(m[[i]],x)
pred = as.data.frame(rbind(pred,p))
cor[i] = cor(p,y, method = "kendall")
data1 = as.data.frame(cbind(x,y))
data2 = as.data.frame(cbind(x,p))
ggplot(data = data1, aes(x = x, y = y) )+
geom_point(size = 4)+
geom_point(data = data2, aes(x = x,y = p), colour = "red")
}
pred_zeta1 = pred[,1]
emp_zeta1 = subset_emp_zeta[1,]
diff_newmod = as.data.frame(t(pred_zeta1-emp_zeta1))
# now do boxplot again of diffs
data = as.data.frame(cbind(diff_exp, diff_pwr))
ggplot(stack(data), aes(x = ind, y = values))+
geom_boxplot(width = 0.3, fill = "grey")+
geom_boxplot(data = diff_newmod, aes(x = "", y = diff_newmod),width = 0.3, fill = "black")+
ylab("Difference in empirical and modelled values")+
xlab("Model type")+
ggtitle("The empircal - modelled value for zeta_1" )
xticklabs = c("New","Exp mdl","Pwr mdl")
pred_zeta1 = pred[,1]
emp_zeta1 = subset_emp_zeta[1,]
diff_newmod = as.data.frame(t(pred_zeta1-emp_zeta1))
# now do boxplot again of diffs
xticklabs = c("New","Exp mdl","Pwr mdl")
data = as.data.frame(cbind(diff_exp, diff_pwr))
ggplot(stack(data), aes(x = ind, y = values))+
geom_boxplot(width = 0.3, fill = "grey")+
geom_boxplot(data = diff_newmod, aes(x = "", y = diff_newmod),width = 0.3, fill = "black")+
ylab("Difference in empirical and modelled values")+
xlab("Model type")+
ggtitle("The empircal - modelled value for zeta_1" )+
scale_x_discrete(labels=xticklabels)
pred_zeta1 = pred[,1]
emp_zeta1 = subset_emp_zeta[1,]
diff_newmod = as.data.frame(t(pred_zeta1-emp_zeta1))
# now do boxplot again of diffs
xticklabs = c("New","Exp mdl","Pwr mdl")
data = as.data.frame(cbind(diff_exp, diff_pwr))
ggplot(stack(data), aes(x = ind, y = values))+
geom_boxplot(width = 0.3, fill = "grey")+
geom_boxplot(data = diff_newmod, aes(x = "", y = diff_newmod),width = 0.3, fill = "black")+
ylab("Difference in empirical and modelled values")+
xlab("Model type")+
ggtitle("The empircal - modelled value for zeta_1" )+
scale_x_discrete(labels=xticklabs)
exp_R2 = vector()
pwr_R2 = vector()
for (i in 1:103) {
exp_R2[i] = modelled_coefs[[1]][5,i]
pwr_R2[i] = modelled_coefs[[3]][5,i]
}
# get R2 for newmod
mean_y = apply(predt,2,mean)
exp_R2 = vector()
pwr_R2 = vector()
for (i in 1:103) {
exp_R2[i] = modelled_coefs[[1]][5,i]
pwr_R2[i] = modelled_coefs[[3]][5,i]
}
# get R2 for newmod
predt = t(pred)
mean_y = apply(predt,2,mean)
ESS = function(vector,mu){
ess = sum((vector - mu)^2)
return(ess)
}
TSS = function(vector,mu){
tss = sum((vector-mu)^2)
return(tss)
}
newmod_r2 = vector()
for(i in 1:95){
#browser()
estsumsq = ESS(predt[,i],mean_y[i])
totsumsq = TSS(predt[,i],mean_y[i])
R2 = estsumsq/totsumsq
newmod_r2[i] = R2
}
###boxplots of R2
data1 = as.data.frame(cbind(exp_R2,pwr_R2))
data3 = as.data.frame(newmod_r2)
ggplot(data = stack(data1), aes(x = ind, y = values))+
geom_boxplot(width = 0.3, fill = "grey")+
geom_boxplot(data = data3, aes(x = "",y = newmod_r2),width = 0.3, fill = "grey")
exp_R2 = vector()
pwr_R2 = vector()
for (i in 1:103) {
exp_R2[i] = modelled_coefs[[1]][5,i]
pwr_R2[i] = modelled_coefs[[3]][5,i]
}
# get R2 for newmod
predt = t(pred)
mean_y = apply(predt,2,mean)
ESS = function(vector,mu){
ess = sum((vector - mu)^2)
return(ess)
}
TSS = function(vector,mu){
tss = sum((vector-mu)^2)
return(tss)
}
newmod_r2 = vector()
for(i in 1:95){
#browser()
estsumsq = ESS(predt[,i],mean_y[i])
totsumsq = TSS(predt[,i],mean_y[i])
R2 = estsumsq/totsumsq
newmod_r2[i] = R2
}
###boxplots of R2
data1 = as.data.frame(cbind(exp_R2,pwr_R2))
data3 = as.data.frame(newmod_r2)
ggplot(data = stack(data1), aes(x = ind, y = values))+
geom_boxplot(width = 0.3, fill = "grey")+
geom_boxplot(data = data3, aes(x = "",y = newmod_r2),width = 0.3, fill = "grey")
scale_x_discrete(labels=xticklabs)
exp_R2 = vector()
pwr_R2 = vector()
for (i in 1:103) {
exp_R2[i] = modelled_coefs[[1]][5,i]
pwr_R2[i] = modelled_coefs[[3]][5,i]
}
# get R2 for newmod
predt = t(pred)
mean_y = apply(predt,2,mean)
ESS = function(vector,mu){
ess = sum((vector - mu)^2)
return(ess)
}
TSS = function(vector,mu){
tss = sum((vector-mu)^2)
return(tss)
}
newmod_r2 = vector()
for(i in 1:95){
#browser()
estsumsq = ESS(predt[,i],mean_y[i])
totsumsq = TSS(predt[,i],mean_y[i])
R2 = estsumsq/totsumsq
newmod_r2[i] = R2
}
###boxplots of R2
data1 = as.data.frame(cbind(exp_R2,pwr_R2))
data3 = as.data.frame(newmod_r2)
ggplot(data = stack(data1), aes(x = ind, y = values))+
geom_boxplot(width = 0.3, fill = "grey")+
geom_boxplot(data = data3, aes(x = "",y = newmod_r2),width = 0.3, fill = "grey")
scale_x_discrete(labels=xticklabs)
exp_R2 = vector()
pwr_R2 = vector()
for (i in 1:103) {
exp_R2[i] = modelled_coefs[[1]][5,i]
pwr_R2[i] = modelled_coefs[[3]][5,i]
}
# get R2 for newmod
predt = t(pred)
mean_y = apply(predt,2,mean)
ESS = function(vector,mu){
ess = sum((vector - mu)^2)
return(ess)
}
TSS = function(vector,mu){
tss = sum((vector-mu)^2)
return(tss)
}
newmod_r2 = vector()
for(i in 1:95){
#browser()
estsumsq = ESS(predt[,i],mean_y[i])
totsumsq = TSS(predt[,i],mean_y[i])
R2 = estsumsq/totsumsq
newmod_r2[i] = R2
}
###boxplots of R2
data1 = as.data.frame(cbind(exp_R2,pwr_R2))
data3 = as.data.frame(newmod_r2)
ggplot(data = stack(data1), aes(x = ind, y = values))+
geom_boxplot(width = 0.3, fill = "grey")+
geom_boxplot(data = data3, aes(x = "",y = newmod_r2),width = 0.3, fill = "grey")
scale_x_discrete(labels=xticklabs)
exp_R2 = vector()
pwr_R2 = vector()
for (i in 1:103) {
exp_R2[i] = modelled_coefs[[1]][5,i]
pwr_R2[i] = modelled_coefs[[3]][5,i]
}
# get R2 for newmod
predt = t(pred)
mean_y = apply(predt,2,mean)
ESS = function(vector,mu){
ess = sum((vector - mu)^2)
return(ess)
}
TSS = function(vector,mu){
tss = sum((vector-mu)^2)
return(tss)
}
newmod_r2 = vector()
for(i in 1:95){
#browser()
estsumsq = ESS(predt[,i],mean_y[i])
totsumsq = TSS(predt[,i],mean_y[i])
R2 = estsumsq/totsumsq
newmod_r2[i] = R2
}
###boxplots of R2
data1 = as.data.frame(cbind(exp_R2,pwr_R2))
data3 = as.data.frame(newmod_r2)
ggplot(data = stack(data1), aes(x = ind, y = values))+
geom_boxplot(width = 0.3, fill = "grey")+
geom_boxplot(data = data3, aes(x = "",y = newmod_r2),width = 0.3, fill = "grey")+
scale_x_discrete(labels=xticklabs)
exp_R2 = vector()
pwr_R2 = vector()
for (i in 1:103) {
exp_R2[i] = modelled_coefs[[1]][5,i]
pwr_R2[i] = modelled_coefs[[3]][5,i]
}
# get R2 for newmod
predt = t(pred)
mean_y = apply(predt,2,mean)
ESS = function(vector,mu){
ess = sum((vector - mu)^2)
return(ess)
}
TSS = function(vector,mu){
tss = sum((vector-mu)^2)
return(tss)
}
newmod_r2 = vector()
for(i in 1:95){
#browser()
estsumsq = ESS(predt[,i],mean_y[i])
totsumsq = TSS(predt[,i],mean_y[i])
R2 = estsumsq/totsumsq
newmod_r2[i] = R2
}
###boxplots of R2
data1 = as.data.frame(cbind(exp_R2,pwr_R2))
data3 = as.data.frame(newmod_r2)
ggplot(data = stack(data1), aes(x = ind, y = values))+
geom_boxplot(width = 0.3, fill = "grey")+
geom_boxplot(data = data3, aes(x = "",y = newmod_r2),width = 0.3, fill = "grey")+
scale_x_discrete(labels=xticklabs)+
ggtitle("R2 values for the three models")+
ylab("R2")+
xlab("Model")
newmod_coefs = lapply(m, coef)
a = vector()
b = vector()
c = vector()
for (i in 1:103){
if (!is.element(i,sites_to_remove)) {
a[i] = newmod_coefs[[i]][[1]]
b[i] = newmod_coefs[[i]][[2]]
c[i] = newmod_coefs[[i]][[3]]
}
else{
a[i] = NA
b[i] = NA
c[i] = NA
}
}
## Now look at range in coefficients
data = as.data.frame(cbind(a,b,c))
ggplot(data = stack(data), aes(x = ind, y = values), na.rm = TRUE)+
geom_boxplot(width = 0.3, fill = "grey")
newmod_coefs = lapply(m, coef)
a = vector()
b = vector()
c = vector()
for (i in 1:103){
if (!is.element(i,sites_to_remove)) {
a[i] = newmod_coefs[[i]][[1]]
b[i] = newmod_coefs[[i]][[2]]
c[i] = newmod_coefs[[i]][[3]]
}
else{
a[i] = NA
b[i] = NA
c[i] = NA
}
}
## Now look at range in coefficients
data = as.data.frame(cbind(na.omit(a),na.omit(b),na.omit(c)))
ggplot(data = stack(data), aes(x = ind, y = values), na.rm = TRUE)+
geom_boxplot(width = 0.3, fill = "grey")
newmod_coefs = lapply(m, coef)
a = vector()
b = vector()
c = vector()
for (i in 1:103){
if (!is.element(i,sites_to_remove)) {
a[i] = newmod_coefs[[i]][[1]]
b[i] = newmod_coefs[[i]][[2]]
c[i] = newmod_coefs[[i]][[3]]
}
else{
a[i] = NA
b[i] = NA
c[i] = NA
}
}
## Now look at range in coefficients
xticklabs = c("a","b","c")
data = as.data.frame(cbind(na.omit(a),na.omit(b),na.omit(c)))
ggplot(data = stack(data), aes(x = ind, y = values), na.rm = TRUE)+
geom_boxplot(width = 0.3, fill = "grey")+
scale_x_discrete(labels=xticklabs)+
ggtitle("Values of the coefficients in the model")
quartiles(c,o.25,0.75)
?quartile
quantile(c, 0.25,0.75)
quantile(c)
quantile(na.omit(c), c(0.25,0.75))
c_noNA = na.omit(c)
zeta1 = t(subset_emp_zeta[1,])
data = as.data.frame(cbind(zeta1,c_noNA))
colnames(data) = c("zeta1","c")
ggplot(data=data, aes(x = c, y = zeta1))+
geom_point()
c_noNA = na.omit(c)
zeta1 = t(subset_emp_zeta[1,])
data = as.data.frame(cbind(zeta1,c_noNA))
colnames(data) = c("zeta1","c")
ggplot(data=data, aes(x = c, y = zeta1))+
geom_point()+
ggtitle("Zeta1 with c")
data = as.data.frame(cbind(na.omit(b), na.omit(a)))
colnames(data) = c("b","a")
ggplot(data=data, aes(x = a, y = b))+
geom_point()
data = as.data.frame(cbind(na.omit(b), na.omit(a)))
colnames(data) = c("b","a")
ggplot(data=data, aes(x = a, y = b))+
geom_point()+
ggtitle("b and a")
r = vector()
for( i in 1:103){
z = emp_zetas[,i]
r[i] = (z[1]-z[2])/z[1]
}
data7 = as.data.frame(cbind(Richness,r))
data7 = data7[,-1]
colnames(data7) = c("Richness","r")
ggplot(data = data7, aes(x = r, y = Richness))+
geom_point()+
geom_smooth(method = lm)
Rich = CompleteSiteLevelvars%>%select(Site,Richness)
View(Rich)
View(predt)
Rich_subset = Rich%>%filter(Sites %!in% sites_to_remove)
Rich_subset = Rich%>%filter(!(Sites %in% sites_to_remove))
Rich_subset = Rich%>%filter(!(Site %in% sites_to_remove))
View(Rich_subset)
Rich_ordered = Rich_subset[order(Rich_subset$Site)]
View(Rich_subset)
Rich_subset$Site
Rich_ordered = Rich_subset[order(Rich_subset$Site),]
View(Rich_ordered)
Rich = CompleteSiteLevelvars%>%select(Site,Richness)
Rich_subset = Rich%>%filter(!(Site %in% sites_to_remove))
Rich_ordered = Rich_subset[order(Rich_subset$Site),]
data1 = as.data.frame(cbind(Rich_ordered,na.omit(a)))
ggplot(data1, aes(x = a, y = Richness))+
geom-point()
Rich = CompleteSiteLevelvars%>%select(Site,Richness)
Rich_subset = Rich%>%filter(!(Site %in% sites_to_remove))
Rich_ordered = Rich_subset[order(Rich_subset$Site),]
data1 = as.data.frame(cbind(Rich_ordered,na.omit(a)))
ggplot(data1, aes(x = a, y = Richness))+
geom_point()
lngth(a)
length(a)
length(na.omit(a)
)
View(data1)
data1 = as.data.frame(cbind(Rich_ordered,na.omit(a)))
colnames(data1) = c("Richness","a")
ggplot(data1, aes(x = a, y = Richness))+
geom_point()
library(gridExtra)
Rich = CompleteSiteLevelvars%>%select(Site,Richness)
Rich_subset = Rich%>%filter(!(Site %in% sites_to_remove))
Rich_ordered = Rich_subset[order(Rich_subset$Site),]
data1 = as.data.frame(cbind(Rich_ordered,na.omit(a)))
colnames(data1) = c("Richness","a")
g1 = ggplot(data1, aes(x = a, y = Richness))+
geom_point()
data2 = as.data.frame(cbind(Rich_ordered,na.omit(b)))
colnames(data1) = c("Richness","b")
g2 = ggplot(data1, aes(x = a, y = Richness))+
geom_point()
grid.arrange(g1,g2)
library(gridExtra)
Rich = CompleteSiteLevelvars%>%select(Site,Richness)
Rich_subset = Rich%>%filter(!(Site %in% sites_to_remove))
Rich_ordered = Rich_subset[order(Rich_subset$Site),]
data1 = as.data.frame(cbind(Rich_ordered,na.omit(a)))
colnames(data1) = c("Richness","a")
g1 = ggplot(data1, aes(x = a, y = Richness))+
geom_point()
data2 = as.data.frame(cbind(Rich_ordered,na.omit(b)))
colnames(data1) = c("Richness","b")
g2 = ggplot(data2, aes(x = b, y = Richness))+
geom_point()
grid.arrange(g1,g2)
data2 = as.data.frame(cbind(Rich_ordered,na.omit(b)))
colnames(data1) = c("Richness","b")
g2 = ggplot(data2, aes(x = b, y = Richness))+
geom_point()
g2
ggplot(data2, aes(x = b, y = Richness))+
geom_point()
data2 = as.data.frame(cbind(Rich_ordered,na.omit(b)))
colnames(data1) = c("Richness","b")
View(data2)
library(gridExtra)
Rich = CompleteSiteLevelvars%>%select(Site,Richness)
Rich_subset = Rich%>%filter(!(Site %in% sites_to_remove))
Rich_ordered = Rich_subset[order(Rich_subset$Site),]
data1 = as.data.frame(cbind(Rich_ordered,na.omit(a)))
colnames(data1) = c("Richness","a")
g1 = ggplot(data1, aes(x = a, y = Richness))+
geom_point()
data2 = as.data.frame(cbind(Rich_ordered,na.omit(b)))
colnames(data2) = c("Richness","b")
g2 = ggplot(data2, aes(x = b, y = Richness))+
geom_point()
grid.arrange(g1,g2)
