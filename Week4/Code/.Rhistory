print("non vectorized system time is")
print(system.time(res1 <- stochrick()))
# Now write another code called stochrickvect that vectorizes the above
# to the extent possible, with improved performance:
rm(list=ls())
stochricknew<-function(p0=runif(1000,.5,1.5),numyears=100, r=1.2, K=1, sigma=0.2){
N<-matrix(NA,numyears,length(p0))
N[1,]<-p0
for (yr in 2:numyears) {
N[yr,]<-N[yr-1,]*exp(r*(1-N[yr-1,]/K))+rnorm(length(p0), 0, sigma)
}
return(N)
}
# Now write another code called stochrickvect that vectorizes the above
# to the extent possible, with improved performance:
print("Vectorized Stochastic Ricker takes:")
print(system.time(res2 <- stochricknew()))
set.seed(1)
rm(list=ls())
stochrick<-function(p0=runif(1000,.5,1.5),r=1.2,K=1,sigma=0.2,numyears=100)
{
#initialize
N<-matrix(NA,numyears,length(p0))
N[1,]<-p0
for (pop in 1:length(p0)) #loop through the populations
{
for (yr in 2:numyears) #for each pop, loop through the years
{
N[yr,pop]<-N[yr-1,pop]*exp(r*(1-N[yr-1,pop]/K)+rnorm(1,0,sigma))
}
}
return(N)
}
print("non vectorized system time is")
print(system.time(res1 <- stochrick()))
Exponential <- function (N0 = 1, r =1, generations = 10){
N <- rep(NA, generations)
N[1] <-N0
for (t in 2:generations) {
N[t] <- N[t-1]*exp(r)
browser()
}
return (N)
}
plot(Exponential(), type = "1", main = "Exponential growth")
MyFuncn
plot(Exponential(), type = "1", main = "Exponential growth")
N
N
N
N
N
plot(Exponential(), type = "1", main = "Exponential growth")
?plot
Exponential <- function (N0 = 1, r =1, generations = 10){
N <- rep(NA, generations)
N[1] <-N0
for (t in 2:generations) {
N[t] <- N[t-1]*exp(r)
browser()
}
return (N)
}
plot(Exponential(), type = "l", main = "Exponential growth")
stochricknew<-function(p0=runif(1000,.5,1.5),numyears=100, r=1.2, K=1, sigma=0.2){
N<-matrix(NA,numyears,length(p0))
N[1,]<-p0
for (yr in 2:numyears) {
N[yr,]<-N[yr-1,]*exp(r*(1-N[yr-1,]/K))+rnorm(length(p0), 0, sigma)
}
return(N)
}
# Now write another code called stochrickvect that vectorizes the above
# to the extent possible, with improved performance:
MyMatrix =  stochricknew
# print("Vectorized Stochastic Ricker takes:")
print(system.time(stochrick()))
M = matrix(runif(1000000), 1000,1000)
SumAllElements =  function(M) {
Dimensions = dim(M)
Tot = 0
for (i in 1:Dimensions[1]){
for (j in 1:Dimensions[2]){
Tot = Tot + M[i,j]
}
}
return(Tot)
}
print(system.time((SumAllElements(M))))
print(system.time(sum(M)))
library(ggplot2)
SparrowsData = read.table("../Data/SparrowSize.txt", header = TRUE)
Winghist = ggplot(SparrowsData, aes(Wing))+
geom_histogram()
BodyMassHist = ggplot(SparrowsData, aes(Mass))+
geom_histogram()
BillHist = ggplot(SparrowsData, aes(Bill))+
geom_histogram()
MeanBill = mean(SparrowsData$Bill, na.rm = TRUE)
#!/usr/bin/env Rscript
# Starting again with Sparrows in a more logical order
rm(list = ls())
library(ggplot2)
library(gridExtra) # for multiple plots
library(dplyr) #not used yet
library(moments) # for skewness
library(MASS)
###   Import and normalise Data #####
SparrowsData = as.data.frame(read.table("../Data/SparrowSize.txt", header = TRUE))
NumericCols = sapply(SparrowsData, is.numeric)
ScaledData = sapply(SparrowsData[,3:6], scale)
SparrowsNormalised = cbind(SparrowsData[,1:2], ScaledData, SparrowsData[,7:8])
### function to calcualte the mode ####
estimate_mode <- function(x) {
d <- density(x, na.rm = TRUE)
d$x[which.max(d$y)]
}
StandError =  function(data){
data = na.omit(data)
SE = sd(data, na.rm = TRUE)/sqrt(length(data))
}
###     Sats for unnormalised data   ####
SparrowMeans = round(colMeans(as.data.frame(SparrowsData[,4:6]), na.rm = TRUE), digits = 2)
Variances =  sapply(SparrowsData[,NumericCols], var, na.rm = TRUE)
SparrowVars = round(Variances, digits = 2)[4:6]
Sparrowsd = round(sqrt(Variances[4:6]), digits = 2)
SparrowMedians = sapply(SparrowsData[,4:6], median, na.rm = TRUE)
SparrowModes = sapply(SparrowsData[,4:6], estimate_mode)
Skews = sapply(SparrowsData[,NumericCols], skewness, na.rm = TRUE)
SparrowSkews = round(Skews[4:6], digits = 2)
SparrowBillSE = round(with(SparrowsData, tapply(Bill, Year, StandError)), digits = 2)
SparrowWingSE = round(with(SparrowsData, tapply(Wing, Year, StandError)), digits =2)
SparrowMassSE = round(with(SparrowsData, tapply(Mass, Year, StandError)), digits = 2)
SparrowSE = rbind(SparrowBillSE,SparrowWingSE,SparrowMassSE)
rownames(SparrowSE) = c("Bill", "Wing", "Mass")
NormTests = sapply(SparrowsData[,4:6], shapiro.test)
SparrowStats = rbind(SparrowMeans, SparrowMedians, SparrowModes, SparrowVars, Sparrowsd, SparrowSkews, NormTests)
SparrowSE = by(SparrowsData, Year, mean, na.rm = TRUE)
colnames(SparrowStats) = c("Bill", "Wing", "Mass")
#rownames(SparrowStats) = c("Mean", "Variance", "StandDev", "Skewness")
###### Plots for un normalised data  ########################
#dev.off()
plot1 <- ggplot(data=subset(SparrowsData, !is.na(Wing)), aes(Wing))+
geom_histogram(bins = 25)+
geom_vline(data=SparrowsData, aes(xintercept =  SparrowMeans[[2]]))+
geom_density()
plot1a <- ggplot(data=subset(SparrowsData, !is.na(Wing)), aes(x=1, y = Wing))+
geom_boxplot()+
coord_flip()
plot2 <- ggplot(data = subset(SparrowsData, !is.na(Mass)) , aes(Mass))+
geom_histogram(bins = 25)+
geom_vline(data=SparrowsData, aes(xintercept =  SparrowMeans[[3]]))
geom_density()
plot2a <- ggplot(data=subset(SparrowsData, !is.na(Mass)), aes(x=1, y = Mass))+
geom_boxplot()+
coord_flip()
plot3 <- ggplot(data=subset(SparrowsData, !is.na(Bill)), aes(Bill))+
geom_histogram(bins = 25)+
geom_vline(data=SparrowsData, aes(xintercept =  SparrowMeans[[1]]))
geom_density()
plot3a <-   ggplot(data=subset(SparrowsData, !is.na(Bill)), aes(x=1, y = Bill))+
geom_boxplot()+
coord_flip()
grid.arrange(plot1,plot1a, plot2,plot2a, plot3, plot3a)
### More plots to examine fits etc ####
ggplot(data=subset(SparrowsData, !is.na(Wing)), aes(Sex.1, y = Wing))+
geom_boxplot()
print(SparrowStats)
SparrowsData = as.data.frame(read.table("../Data/SparrowSize.txt", header = TRUE))
NumericCols = sapply(SparrowsData, is.numeric)
ScaledData = sapply(SparrowsData[,3:6], scale)
SparrowsNormalised = cbind(SparrowsData[,1:2], ScaledData, SparrowsData[,7:8])
SparrowsData = as.data.frame(read.table("../Data/SparrowSize.txt", header = TRUE))
NumericCols = sapply(SparrowsData, is.numeric)
ScaledData = sapply(SparrowsData[,3:6], scale)
SparrowsNormalised = cbind(SparrowsData[,1:2], ScaledData, SparrowsData[,7:8])
setwd("~/Documents/CMEECourseWork/Week4/Code")
SparrowsData = as.data.frame(read.table("../Data/SparrowSize.txt", header = TRUE))
NumericCols = sapply(SparrowsData, is.numeric)
ScaledData = sapply(SparrowsData[,3:6], scale)
SparrowsNormalised = cbind(SparrowsData[,1:2], ScaledData, SparrowsData[,7:8])
SparrowsData = as.data.frame(read.table("../Data/SparrowSize.txt", header = TRUE))
NumericCols = sapply(SparrowsData, is.numeric)
ScaledData = sapply(SparrowsData[,3:6], scale)
SparrowsNormalised = cbind(SparrowsData[,1:2], ScaledData, SparrowsData[,7:8])
### function to calcualte the mode ####
estimate_mode <- function(x) {
d <- density(x, na.rm = TRUE)
d$x[which.max(d$y)]
}
StandError =  function(data){
data = na.omit(data)
SE = sd(data, na.rm = TRUE)/sqrt(length(data))
}
###     Sats for unnormalised data   ####
SparrowMeans = round(colMeans(as.data.frame(SparrowsData[,4:6]), na.rm = TRUE), digits = 2)
Variances =  sapply(SparrowsData[,NumericCols], var, na.rm = TRUE)
SparrowVars = round(Variances, digits = 2)[4:6]
Sparrowsd = round(sqrt(Variances[4:6]), digits = 2)
SparrowMedians = sapply(SparrowsData[,4:6], median, na.rm = TRUE)
SparrowModes = sapply(SparrowsData[,4:6], estimate_mode)
Skews = sapply(SparrowsData[,NumericCols], skewness, na.rm = TRUE)
SparrowSkews = round(Skews[4:6], digits = 2)
SparrowBillSE = round(with(SparrowsData, tapply(Bill, Year, StandError)), digits = 2)
SparrowWingSE = round(with(SparrowsData, tapply(Wing, Year, StandError)), digits =2)
SparrowMassSE = round(with(SparrowsData, tapply(Mass, Year, StandError)), digits = 2)
SparrowSE = rbind(SparrowBillSE,SparrowWingSE,SparrowMassSE)
rownames(SparrowSE) = c("Bill", "Wing", "Mass")
NormTests = sapply(SparrowsData[,4:6], shapiro.test)
SparrowStats = rbind(SparrowMeans, SparrowMedians, SparrowModes, SparrowVars, Sparrowsd, SparrowSkews, NormTests)
SparrowSE = by(SparrowsData, Year, mean, na.rm = TRUE)
colnames(SparrowStats) = c("Bill", "Wing", "Mass")
#rownames(SparrowStats) = c("Mean", "Variance", "StandDev", "Skewness")
###### Plots for un normalised data  ########################
#dev.off()
plot1 <- ggplot(data=subset(SparrowsData, !is.na(Wing)), aes(Wing))+
geom_histogram(bins = 25)+
geom_vline(data=SparrowsData, aes(xintercept =  SparrowMeans[[2]]))+
geom_density()
plot1a <- ggplot(data=subset(SparrowsData, !is.na(Wing)), aes(x=1, y = Wing))+
geom_boxplot()+
coord_flip()
plot2 <- ggplot(data = subset(SparrowsData, !is.na(Mass)) , aes(Mass))+
geom_histogram(bins = 25)+
geom_vline(data=SparrowsData, aes(xintercept =  SparrowMeans[[3]]))
geom_density()
plot2a <- ggplot(data=subset(SparrowsData, !is.na(Mass)), aes(x=1, y = Mass))+
geom_boxplot()+
coord_flip()
plot3 <- ggplot(data=subset(SparrowsData, !is.na(Bill)), aes(Bill))+
geom_histogram(bins = 25)+
geom_vline(data=SparrowsData, aes(xintercept =  SparrowMeans[[1]]))
geom_density()
plot3a <-   ggplot(data=subset(SparrowsData, !is.na(Bill)), aes(x=1, y = Bill))+
geom_boxplot()+
coord_flip()
grid.arrange(plot1,plot1a, plot2,plot2a, plot3, plot3a)
### More plots to examine fits etc ####
ggplot(data=subset(SparrowsData, !is.na(Wing)), aes(Sex.1, y = Wing))+
geom_boxplot()
print(SparrowStats)
#gives max-liklihod estimtors
#fitdistr(c(na.exclude(SparrowsData$Bill)), "normal")
SparrowSE = by(SparrowsData, Year, mean, na.rm = TRUE)
SparrowSE = by(SparrowsData, Year, mean, na.rm = TRUE)
SparrowsData = as.data.frame(read.table("../Data/SparrowSize.txt", header = TRUE))
NumericCols = sapply(SparrowsData, is.numeric)
ScaledData = sapply(SparrowsData[,3:6], scale)
SparrowsNormalised = cbind(SparrowsData[,1:2], ScaledData, SparrowsData[,7:8])
### function to calcualte the mode ####
estimate_mode <- function(x) {
d <- density(x, na.rm = TRUE)
d$x[which.max(d$y)]
}
StandError =  function(data){
data = na.omit(data)
SE = sd(data, na.rm = TRUE)/sqrt(length(data))
}
###     Sats for unnormalised data   ####
SparrowMeans = round(colMeans(as.data.frame(SparrowsData[,4:6]), na.rm = TRUE), digits = 2)
Variances =  sapply(SparrowsData[,NumericCols], var, na.rm = TRUE)
SparrowVars = round(Variances, digits = 2)[4:6]
Sparrowsd = round(sqrt(Variances[4:6]), digits = 2)
SparrowMedians = sapply(SparrowsData[,4:6], median, na.rm = TRUE)
SparrowModes = sapply(SparrowsData[,4:6], estimate_mode)
Skews = sapply(SparrowsData[,NumericCols], skewness, na.rm = TRUE)
SparrowSkews = round(Skews[4:6], digits = 2)
SparrowBillSE = round(with(SparrowsData, tapply(Bill, Year, StandError)), digits = 2)
SparrowWingSE = round(with(SparrowsData, tapply(Wing, Year, StandError)), digits =2)
SparrowMassSE = round(with(SparrowsData, tapply(Mass, Year, StandError)), digits = 2)
SparrowSE = rbind(SparrowBillSE,SparrowWingSE,SparrowMassSE)
rownames(SparrowSE) = c("Bill", "Wing", "Mass")
NormTests = sapply(SparrowsData[,4:6], shapiro.test)
SparrowStats = rbind(SparrowMeans, SparrowMedians, SparrowModes, SparrowVars, Sparrowsd, SparrowSkews, NormTests)
SparrowSE = by(SparrowsData, Year, mean, na.rm = TRUE)
colnames(SparrowStats) = c("Bill", "Wing", "Mass")
#rownames(SparrowStats) = c("Mean", "Variance", "StandDev", "Skewness")
print(SparrowStats)
SparrowSE = by(SparrowsData, Year, mean, na.rm = TRUE)
View(SparrowsData)
View(SparrowsData)
SparrowSE = by(SparrowsData, year, mean, na.rm = TRUE)
?by
SparrowSE = by(SparrowsData, SparrowsData$Year, mean, na.rm = TRUE)
SparrowBillSE = round(with(SparrowsData, tapply(Bill, Year, StandError)), digits = 2)
SparrowWingSE = round(with(SparrowsData, tapply(Wing, Year, StandError)), digits =2)
SparrowMassSE = round(with(SparrowsData, tapply(Mass, Year, StandError)), digits = 2)
SparrowSE = rbind(SparrowBillSE,SparrowWingSE,SparrowMassSE)
rownames(SparrowSE) = c("Bill", "Wing", "Mass")
SparrowSE = by(SparrowsData, SparrowsData$Year, mean, na.rm = TRUE)
SparrowMassSE
SparrowSE
SparrowSE = by(SparrowsData, Year, mean, na.rm = TRUE)
SparrowSE = by(SparrowsData, as.factor(Year), mean, na.rm = TRUE)
SparrowSE = by(SparrowsData, Years, mean, na.rm = TRUE)
Years = as.factor(SparrowsData$Year)
Years = as.factor(SparrowsData$Year)
SparrowSE = by(SparrowsData, Years, mean, na.rm = TRUE)
SparrowSE = tapply(SparrowsData, Years, mean, na.rm = TRUE)
SparrowSE = tapply(SparrowsData, Years, StandError)
###   Import and normalise Data #####
SparrowsData = as.data.frame(read.table("../Data/SparrowSize.txt", header = TRUE))
NumericCols = sapply(SparrowsData, is.numeric)
ScaledData = sapply(SparrowsData[,3:6], scale)
SparrowsNormalised = cbind(SparrowsData[,1:2], ScaledData, SparrowsData[,7:8])
### function to calcualte the mode ####
estimate_mode <- function(x) {
d <- density(x, na.rm = TRUE)
d$x[which.max(d$y)]
}
StandError =  function(data){
data = na.omit(data)
SE = sd(data, na.rm = TRUE)/sqrt(length(data))
}
###     Sats for unnormalised data   ####
SparrowMeans = round(colMeans(as.data.frame(SparrowsData[,4:6]), na.rm = TRUE), digits = 2)
Variances =  sapply(SparrowsData[,NumericCols], var, na.rm = TRUE)
SparrowVars = round(Variances, digits = 2)[4:6]
Sparrowsd = round(sqrt(Variances[4:6]), digits = 2)
SparrowMedians = sapply(SparrowsData[,4:6], median, na.rm = TRUE)
SparrowModes = sapply(SparrowsData[,4:6], estimate_mode)
Skews = sapply(SparrowsData[,NumericCols], skewness, na.rm = TRUE)
SparrowSkews = round(Skews[4:6], digits = 2)
SparrowBillSE = round(with(SparrowsData, tapply(Bill, Year, StandError)), digits = 2)
SparrowWingSE = round(with(SparrowsData, tapply(Wing, Year, StandError)), digits =2)
SparrowMassSE = round(with(SparrowsData, tapply(Mass, Year, StandError)), digits = 2)
SparrowSE = rbind(SparrowBillSE,SparrowWingSE,SparrowMassSE)
rownames(SparrowSE) = c("Bill", "Wing", "Mass")
NormTests = sapply(SparrowsData[,4:6], shapiro.test)
SparrowStats = rbind(SparrowMeans, SparrowMedians, SparrowModes, SparrowVars, Sparrowsd, SparrowSkews, NormTests)
colnames(SparrowStats) = c("Bill", "Wing", "Mass")
#rownames(SparrowStats) = c("Mean", "Variance", "StandDev", "Skewness")
###### Plots for un normalised data  ########################
#dev.off()
plot1 <- ggplot(data=subset(SparrowsData, !is.na(Wing)), aes(Wing))+
geom_histogram(bins = 25)+
geom_vline(data=SparrowsData, aes(xintercept =  SparrowMeans[[2]]))+
geom_density()
plot1a <- ggplot(data=subset(SparrowsData, !is.na(Wing)), aes(x=1, y = Wing))+
geom_boxplot()+
coord_flip()
plot2 <- ggplot(data = subset(SparrowsData, !is.na(Mass)) , aes(Mass))+
geom_histogram(bins = 25)+
geom_vline(data=SparrowsData, aes(xintercept =  SparrowMeans[[3]]))
geom_density()
plot2a <- ggplot(data=subset(SparrowsData, !is.na(Mass)), aes(x=1, y = Mass))+
geom_boxplot()+
coord_flip()
plot3 <- ggplot(data=subset(SparrowsData, !is.na(Bill)), aes(Bill))+
geom_histogram(bins = 25)+
geom_vline(data=SparrowsData, aes(xintercept =  SparrowMeans[[1]]))
geom_density()
plot3a <-   ggplot(data=subset(SparrowsData, !is.na(Bill)), aes(x=1, y = Bill))+
geom_boxplot()+
coord_flip()
grid.arrange(plot1,plot1a, plot2,plot2a, plot3, plot3a)
### More plots to examine fits etc ####
ggplot(data=subset(SparrowsData, !is.na(Wing)), aes(Sex.1, y = Wing))+
geom_boxplot()
print(SparrowStats)
#gives max-liklihod estimtors
#fitdistr(c(na.exclude(SparrowsData$Bill)), "normal")
SparrowSE
plot1 <- ggplot(data=subset(SparrowsData, !is.na(Wing)), aes(Wing))+
geom_histogram(bins = 25)+
geom_vline(data=SparrowsData, aes(xintercept =  SparrowMeans[[2]]))+
geom_density()
plot1a <- ggplot(data=subset(SparrowsData, !is.na(Wing)), aes(x=1, y = Wing))+
geom_boxplot()+
coord_flip()
plot2 <- ggplot(data = subset(SparrowsData, !is.na(Mass)) , aes(Mass))+
geom_histogram(bins = 25)+
geom_vline(data=SparrowsData, aes(xintercept =  SparrowMeans[[3]]))
geom_density()
plot2a <- ggplot(data=subset(SparrowsData, !is.na(Mass)), aes(x=1, y = Mass))+
geom_boxplot()+
coord_flip()
plot3 <- ggplot(data=subset(SparrowsData, !is.na(Bill)), aes(Bill))+
geom_histogram(bins = 25)+
geom_vline(data=SparrowsData, aes(xintercept =  SparrowMeans[[1]]))
geom_density()
plot3a <-   ggplot(data=subset(SparrowsData, !is.na(Bill)), aes(x=1, y = Bill))+
geom_boxplot()+
coord_flip()
grid.arrange(plot1,plot1a, plot2,plot2a, plot3, plot3a)
SparrowStats
?t.test
ttest = t.test(SparrowsData$Mass~ SparrowsData$Sex.1)
ttest
Sparrows2001 =  subset(SparrowsData, Year == 2001)
Sparrows2001
Sparrows2001 =  summariase(subset(SparrowsData, Year == 2001))
Sparrows2001 =  summarise(subset(SparrowsData, Year == 2001))
summary()
Sparrows2001 =  summary(subset(SparrowsData, Year == 2001))
Sparrows2001
Sparrows2001$Wing
Sparrows2001[4]
typeof(Sparrows2001)
?t.test
t.test1 = t.test(SparrowsData$Mass~SparrowsData$Sex.1)
t.test1
Sparrows2001 =  subset(SparrowsData, Year == 2001)
t.test2001 = t.test(Sparrows2001$Wing~Sparrows2001$Sex.1)
t.test2001
rm(list = ls())
SparrowsData = as.data.frame(read.table("../Data/SparrowSize.txt", header = TRUE))
plot1 = ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()
dev.off()
plot1 = ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()
graphics.off()
plot1 = ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()
library(ggplot2)
plot1 = ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()
ggplot
View(plot1)
dev.off()
ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()
?by
View(SparrowsData)
View(SparrowsData)
length(SparrowsData$Tarsus)
?sort
?lm
lm_Tarsus_Mass = lm(SparrowsData$Tarsus, SparrowsData$Mass, SparrowsData)
lm_Tarsus_Mass = lm(SparrowsData$Tarsus~SparrowsData$Mass, SparrowsData)
lm_Tarsus_Mass
plot1 = ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()+
abline(lm_Tarsus_Mass)
ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()+
ggplotRegression(ln_Tarsus_Mass)
ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()+
geom_abline(lm_Tarsus_Mass)
ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()+
geom_abline(aes(y = lm_Tarsus_Mass))
ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()+
geom_abline(aes(y = lm_Tarsus_Mass))
ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()+
geom_abline(aes(y = fitted(lm_Tarsus_Mass)))
ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()+
geom_abline(aes(y = fitted(lm_Tarsus_Mass)))
ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()+
geom_line(aes(y = fitted(lm_Tarsus_Mass)))
lm_Tarsus_Mass = lm(SparrowsData$Tarsus~SparrowsData$Mass, SparrowsData)
ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()+
geom_line(aes(y = fitted(lm_Tarsus_Mass)))
fitted(lm_Tarsus_Mass)
fittedvals = fitted(lm_Tarsus_Mass)
fittedvals
typeof(fittedvals)
ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()+
ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()
ggplot(SparrowsData, aes(x = Tarsus, y = Mass))+
geom_point()
SparrowsDataNoNA = na.omit(SparrowsData)
lm_Tarsus_Mass = lm(SparrowsData$Tarsus~SparrowsData$Mass, SparrowsDataNoNA)
ggplot(SparrowsDataNoNA, aes(x = Tarsus, y = Mass))+
geom_point() +
geom_line(aes(y = fitted(lm_Tarsus_Mass)))
?geom_line
plot(SparrowsData$Tarsus,SparrowsData$Mass)
abline(lm_Tarsus_Mass)
abline(lm_Tarsus_Mass)
abline(lm_Tarsus_Mass)
?abline
abline(coef=coef(lm_Tarsus_Mass))
?predict
predict(lm_Tarsus_Mass)
ggplot(SparrowsDataNoNA, aes(x = Tarsus, y = Mass))+
geom_point() +
geom_line(aes(y = y))
y = predict(lm_Tarsus_Mass)
ggplot(SparrowsDataNoNA, aes(x = Tarsus, y = Mass))+
geom_point() +
geom_line(aes(y = y))
plot(SparrowsData$Tarsus,SparrowsData$Mass)
lines(y,SparrowsData$Mass)
plot(SparrowsDataNoNA$Tarsus,SparrowsDataNoNA$Mass)
lines(y,SparrowsDataNoNA$Mass)
length(y)
length(SparrowsDataNoNA$Mass)
SparrowsData2= subset(SparrowsData, SparrowsData$Tarsus !=NA)
SparrowsData2= subset(SparrowsData, SparrowsData$Tarsus !="NA")
SparrowsData3<-subset(SparrowsData2,SparrowsData2$Mass !="NA")
lm_Tarsus_Mass = lm(SparrowsData$Tarsus~SparrowsData$Mass, SparrowsData3)
y = predict(lm_Tarsus_Mass)
plot(SparrowsData3$Tarsus,SparrowsData3$Mass)
lines(y,SparrowsData3$Mass)
?ggplot()
y = predict(lm_Tarsus_Mass, !is.na())
ggplot(SparrowsDataNoNA, aes(x = Tarsus, y = Mass))+
geom_point()
View(SparrowsData2)
View(SparrowsData2)
View(SparrowsData3)
View(SparrowsData3)
