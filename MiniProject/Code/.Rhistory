library(fpc)
cluster.stats(soraria_dist, 8)
cluster.stats(soraria_dist,memb_complete)
stats = cluster.stats(soraria_dist,memb_complete)
stats$cluster.number
stats$cluster.size
knitr::opts_chunk$set(echo = TRUE)
dev.off()
rm(list = ls())
cat("\014")
inputfile = 'SorariaCompact1.csv'
fullfile = paste("../Data".inputfile,sep = '/')
inputfile = 'SorariaCompact1.csv'
fullfile = paste("../Data",inputfile,sep = '/')
Soraria_Data_Compact1 = read.csv(fullfile)
median_replace1 = function(x){
ifelse(is.na(x), median(x,na.rm = TRUE), x)
}
median_replace2 = function(x){
apply(x,2,median_replace1)
}
Imputed_df = lapply(split.data.frame(Soraria_Data[,2:12], Soraria_Data$Species), FUN = median_replace2)
inputfile = 'SorariaCompact1.csv'
tmp = strsplit(InputFileName, "\\.")[[1]]
inputfile = 'SorariaCompact1.csv'
tmp = strsplit(inputfile, "\\.")[[1]]
fullfile = paste("../Data",inputfile,sep = '/')
Soraria_Data_Compact1 = read.csv(fullfile)
inputfile = 'SorariaCompact1.csv'
Data = strsplit(inputfile, "\\.")[[1]]
fullfile = paste("../Data",inputfile,sep = '/')
Data = read.csv(fullfile)
median_replace1 = function(x){
ifelse(is.na(x), median(x,na.rm = TRUE), x)
}
median_replace2 = function(x){
apply(x,2,median_replace1)
}
Imputed_df = lapply(split.data.frame(Data[,2:12], Data$Species), FUN = median_replace2)
View(Imputed_df)
median_replace1 = function(x){
ifelse(is.na(x), median(x,na.rm = TRUE), x)
}
median_replace2 = function(x){
apply(x,2,median_replace1)
}
Imputed_list = lapply(split.data.frame(Data[,2:12], Data$Species), FUN = median_replace2)
temp = do.call(rbind, Imputed_df)
Imputed_df = cbind(Data[1], temp)
inputfile = 'SorariaCompact1.csv'
Dataname = strsplit(inputfile, "\\.")[[1]]
fullfile = paste("../Data",inputfile,sep = '/')
Data = read.csv(fullfile)
Dataname = strsplit(inputfile, "\\.")[[1]]
stats = cluster.stats(soraria_dist,memb_complete)
Dataname = strsplit(inputfile, "\\.")[[1]]
Dataname
Dataname[1]
Dataname = strsplit(inputfile, "\\.")
Dataname
Dataname[1]
Dataname[[1]]
Dataname[1][[1]]
Dataname[[1]][[1]]
Dataname = strsplit(inputfile, "\\.")[[1]][[1]]
inputfile = 'SorariaCompact1.csv'
Dataname = strsplit(inputfile, "\\.")[[1]][[1]]
fullfile = paste("../Data",inputfile,sep = '/')
Data = read.csv(fullfile)
outfile = paste('../Data',Dataname,sep = '/','.pdf')
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Soraria_Imputed_sc[-1], lower.panel = panel.smooth, upper.panel = panel.cor)
outfile = paste('../Data',Dataname,sep = '/','.pdf')
outfile
outfile = paste('../Data',Dataname,sep = '/','.pdf')
pdf(outfile)
out= paste('../Data',Dataname,sep = '/')
outfile = paste(out,'.pdf')
outfile
out= paste('../Data',Dataname,sep = '/')
outfile = paste(out,'.pdf')
pdf(outfile)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Soraria_Imputed_sc[-1], lower.panel = panel.smooth, upper.panel = panel.cor)
out= paste('../Data',Dataname,sep = '/')
outfile = paste(out,'.pdf')
pdf(outfile)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Imputed_df[-1], lower.panel = panel.smooth, upper.panel = panel.cor)
out= paste('../Results',Dataname,sep = '/')
outfile = paste(out,'.pdf')
pdf(outfile)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Imputed_df[-1], lower.panel = panel.smooth, upper.panel = panel.cor)
out= paste('../Results',Dataname,sep = '/')
outfile = paste(out,'.pdf')
pdf(outfile)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Imputed_df[-1], lower.panel = panel.smooth, upper.panel = panel.cor, mtext(Dataname))
out= paste('../Results',Dataname,sep = '/')
outfile = paste(out,'.pdf')
pdf(outfile)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Imputed_df[-1], lower.panel = panel.smooth, upper.panel = panel.cor)
mtext(Dataname)
out= paste('../Results',Dataname,sep = '/')
outfile = paste(out,'.pdf')
pdf(outfile)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Imputed_df[-1], lower.panel = panel.smooth, upper.panel = panel.cor, col = Imputed_df$Species)
mtext(Dataname, side = 1)
library(ggplot2)
library(gridExtra)
plot1= ggplot(Imputed_df, aes(x= LeafLength, y = LeafWidth, col = Species))+
geom_point()
plot2 = ggplot(Imputed_df, aes(x= FruitLength, y = FruitWidth, col = Species))+
geom_point()
plot3 = ggplot(Imputed_df, aes(x= Lobing, y = Veins, col = Species))+
geom_point()
grid.arrange(plot1,plot2,plot3)
library(ggplot2)
library(gridExtra)
plot1= ggplot(Imputed_df, aes(x= LeafLength, y = LeafWidth, col = Species))+
geom_point()
plot2 = ggplot(Imputed_df, aes(x= FruitLength, y = FruitWidth, col = Species))+
geom_point()
grid.arrange(plot1,plot2)
out = paste(Dataname, pairs, sep = "_")
out = paste(Dataname, "pairs", sep = "_")
out= paste('../Results',out,sep = '/')
out = paste(out,'.pdf')
pdf(outfile)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Imputed_df[-1], lower.panel = panel.smooth, upper.panel = panel.cor, col = Imputed_df$Species)
mtext(Dataname, side = 1)
out = paste(Dataname, "pairs", sep = "_")
out= paste('../Results',out,sep = '/')
out = paste(out,'.pdf')
pdf(outfile)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Imputed_df[-1], lower.panel = panel.smooth, upper.panel = panel.cor, col = Imputed_df$Species)
mtext(Dataname, side = 1)
out = paste(Dataname, "pairs", sep = "_")
out= paste('../Results',out,sep = '/')
out = paste(out,'.pdf')
out = paste(Dataname, "pairs", sep = "_")
out= paste('../Results',out,sep = '/')
out = paste(out,'.pdf')
pdf(out)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Imputed_df[-1], lower.panel = panel.smooth, upper.panel = panel.cor, col = Imputed_df$Species)
mtext(Dataname, side = 1)
out = paste(Dataname, "scatter", sep = "_")
out= paste('../Results',out,sep = '/')
out = paste(out,'.pdf')
pdf(out)
library(ggplot2)
library(gridExtra)
plot1= ggplot(Imputed_df, aes(x= LeafLength, y = LeafWidth, col = Species))+
geom_point()
plot2 = ggplot(Imputed_df, aes(x= FruitLength, y = FruitWidth, col = Species))+
geom_point()
grid.arrange(plot1,plot2)
out = paste(Dataname, "pairs", sep = "_")
out= paste('../Results',out,sep = '/')
out = paste(out,'.pdf')
#pdf(out)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Imputed_df[-1], lower.panel = panel.smooth, upper.panel = panel.cor, col = Imputed_df$Species)
mtext(Dataname, side = 1)
pdf(out)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Imputed_df[-1], lower.panel = panel.smooth, upper.panel = panel.cor, col = Imputed_df$Species)
mtext(Dataname, side = 1)
library(ggplot2)
library(gridExtra)
#pdf(out)
plot1= ggplot(Imputed_df, aes(x= LeafLength, y = LeafWidth, col = Species))+
geom_point()
plot2 = ggplot(Imputed_df, aes(x= FruitLength, y = FruitWidth, col = Species))+
geom_point()
grid.arrange(plot1,plot2)
#pdf(out)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Imputed_df[-1], lower.panel = panel.smooth, upper.panel = panel.cor, col = Imputed_df$Species)
mtext(Dataname, side = 1)
inputfile = 'SorariaCompact1.csv'
Dataname = strsplit(inputfile, "\\.")[[1]][[1]]
fullfile = paste("../Data",inputfile,sep = '/')
Data = read.csv(fullfile)
median_replace1 = function(x){
ifelse(is.na(x), median(x,na.rm = TRUE), x)
}
median_replace2 = function(x){
apply(x,2,median_replace1)
}
Imputed_list = lapply(split.data.frame(Data[,2:12], Data$Species), FUN = median_replace2)
temp = do.call(rbind, Imputed_df)
Imputed_df = cbind(Data[1], temp)
View(Data)
inputfile = 'SorariaCompact1.csv'
Dataname = strsplit(inputfile, "\\.")[[1]][[1]]
fullfile = paste("../Data",inputfile,sep = '/')
Data = read.csv(fullfile)
median_replace1 = function(x){
ifelse(is.na(x), median(x,na.rm = TRUE), x)
}
median_replace2 = function(x){
apply(x,2,median_replace1)
}
Imputed_list = lapply(split.data.frame(Data[,2:12], Data$Species), FUN = median_replace2)
temp = do.call(rbind, Imputed_df)
Imputed_df = cbind(Data[1], temp)
temp = do.call(rbind, Imputed_list)
Imputed_df = cbind(Data[1], temp)
View(Imputed_df)
#pdf(out)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(Imputed_df[-1], lower.panel = panel.smooth, upper.panel = panel.cor, col = Imputed_df$Species)
mtext(Dataname, side = 1)
library(ggplot2)
library(gridExtra)
#pdf(out)
plot1= ggplot(Imputed_df, aes(x= LeafLength, y = LeafWidth, col = Species))+
geom_point()
plot2 = ggplot(Imputed_df, aes(x= FruitLength, y = FruitWidth, col = Species))+
geom_point()
grid.arrange(plot1,plot2)
View(Imputed_df)
reduced_df = Imputed_df[-c(4,5,6,7,8,9,12)]
#pdf(out)
reduced_df = Imputed_df[-c(4,5,6,7,8,9,12)]
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(reduced_df[-1], lower.panel = panel.smooth, upper.panel = panel.cor, col = Imputed_df$Species)
mtext(Dataname, side = 1)
library(ggplot2)
library(gridExtra)
#pdf(out)
plot1= ggplot(Imputed_df, aes(x= LeafLength, y = LeafWidth, col = Species))+
geom_point()
plot2 = ggplot(Imputed_df, aes(x= FruitLength, y = FruitWidth, col = Species))+
geom_point()
grid.arrange(plot1,plot2)
#pdf(out)
col_names = colnames(Data)
Soraria_col_names = Soraria_col_names[-1]
#pdf(out)
col_names = colnames(Data)
col_names = col_names[-1]
plotlist = list()
library(grid)
for (i in seq_along(col_names)){
plot = ggplot(Data, (aes_string(x='Species', y=col_names[i])))+
geom_boxplot()
plotlist = rbind(plotlist,  plot)
grid.draw(plot)
}
#pdf(out)
col_names = colnames(Data)
col_names = col_names[-1]
plotlist = list()
library(grid)
for (i in seq_along(col_names)){
plot = ggplot(Data[-1], (aes_string(x='Species', y=col_names[i])))+
geom_boxplot()
plotlist = rbind(plotlist,  plot)
grid.draw(plot)
}
#pdf(out)
col_names = colnames(Data)
col_names = col_names[-1]
plotlist = list()
library(grid)
for (i in seq_along(col_names)){
plot = ggplot(Data, (aes_string(x='Species', y=col_names[i])))+
geom_boxplot()
plotlist = rbind(plotlist,  plot)
grid.draw(plot)
}
#pdf(out)
col_names = colnames(Data)
col_names = col_names[-1]
plotlist = list()
library(grid)
for (i in seq_along(col_names)){
plot = ggplot(Imputed_df, (aes_string(x='Species', y=col_names[i])))+
geom_boxplot()
plotlist = rbind(plotlist,  plot)
grid.draw(plot)
}
#pdf(out)
col_names = colnames(Data)
col_names = col_names[-1]
plotlist = list()
boxplots = list()
library(grid)
for (i in seq_along(col_names)){
plot = ggplot(Imputed_df, (aes_string(x='Species', y=col_names[i])))+
geom_boxplot()
plotlist = rbind(plotlist,  plot)
boxplots[i] = plot
grid.draw(plot)
}
grid.arrange(boxplots)
grid.draw(plotlist)
#pdf(out)
col_names = colnames(Data)
col_names = col_names[-1]
plotlist = list()
library(grid)
for (i in seq_along(col_names)){
plot = ggplot(Imputed_df, (aes_string(x='Species', y=col_names[i])))+
geom_boxplot()
plotlist = rbind(plotlist,  plot)
grid.draw(plot)
}
grid.draw(plotlist)
#pdf(out)
col_names = colnames(Data)
col_names = col_names[-1]
plotlist = list()
library(grid)
for (i in seq_along(col_names)){
plot = ggplot(Imputed_df, (aes_string(x='Species', y=col_names[i])))+
geom_boxplot()
plotlist = rbind(plotlist,  plot)
grid.draw(plot)
}
library(reshape2)
melted = melt(Imputed_df)
ggplot(date = melted) +  geom_boxplot(aes(x=Species,y=value)) +   facet_wrap(~variable)
library(reshape2)
melted = melt(Imputed_df)
ggplot(data = melted) +  geom_boxplot(aes(x=Species,y=value)) +   facet_wrap(~variable)
Scaled_df = scale(Imputed_df)
Scaled_df = scale(Imputed_df[-1])
View(Scaled_df)
View(Scaled_df)
Scaled_df = scale(Imputed_df[-1])
Scaled_df = rbind(Data[1], Scaled_df)
Scaled_df = scale(Imputed_df[-1])
Scaled_df = rbind(Data[,1], Scaled_df)
Scaled_df = scale(Imputed_df[-1])
Scaled_df = cbind(Data[,1], Scaled_df)
View(Scaled_df)
View(Scaled_df)
Data[1]
Scaled_df = scale(Imputed_df[-1])
Scaled_df = cbind(Data[1], Scaled_df)
View(Scaled_df)
library(reshape2)
melted = melt(Scaled_df)
ggplot(data = melted) +  geom_boxplot(aes(x=Species,y=value)) +   facet_wrap(~variable)
library(reshape2)
melted = melt(Scaled_df)
ggplot(data = melted) +  geom_boxplot(aes(x=Species,y=value)) +   facet_wrap(~variable) +
theme(axis.ticks = element_blank(), axis.text.x = element_blank())
library(reshape2)
melted = melt(Scaled_df)
ggplot(data = melted) +  geom_boxplot(aes(x=Species,y=value), fill = Species) +   facet_wrap(~variable) +
theme(axis.ticks = element_blank(), axis.text.x = element_blank())
library(reshape2)
melted = melt(Scaled_df)
ggplot(data = melted) +  geom_boxplot(aes(x=Species,y=value), fill = 'Species') +   facet_wrap(~variable) +
theme(axis.ticks = element_blank(), axis.text.x = element_blank())
library(reshape2)
melted = melt(Scaled_df)
ggplot(data = melted) +  geom_boxplot(aes(x=Species,y=value, fill = Species)) +   facet_wrap(~variable) +
theme(axis.ticks = element_blank(), axis.text.x = element_blank())
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
library(GGally)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
